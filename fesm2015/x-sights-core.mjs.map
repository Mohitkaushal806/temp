{"version":3,"file":"x-sights-core.mjs","sources":["../../../projects/x-sights-core/src/lib/data-types/graph-interfaces.ts","../../../projects/x-sights-core/src/lib/data-types/trend-interfaces.ts","../../../projects/x-sights-core/src/lib/data-types/filter-interfaces.ts","../../../projects/x-sights-core/src/lib/data-types/variable-types.ts","../../../projects/x-sights-core/src/lib/data-types/pivot-interfaces.ts","../../../projects/x-sights-core/src/lib/services/data.service.ts","../../../projects/x-sights-core/src/lib/components/data-popup/data-popup.component.ts","../../../projects/x-sights-core/src/lib/components/data-popup/data-popup.component.html","../../../projects/x-sights-core/src/lib/x-sights-core.service.ts","../../../projects/x-sights-core/src/lib/x-sights-core.component.ts","../../../projects/x-sights-core/src/lib/components/x-sights-public-dashboard/x-sights-public-dashboard.component.ts","../../../projects/x-sights-core/src/lib/components/x-sights-public-dashboard/x-sights-public-dashboard.component.html","../../../projects/x-sights-core/src/lib/components/x-sights-dashboard/x-sights-dashboard.component.ts","../../../projects/x-sights-core/src/lib/components/x-sights-dashboard/x-sights-dashboard.component.html","../../../projects/x-sights-core/src/lib/services/xsights-backend.service.ts","../../../projects/x-sights-core/src/lib/components/x-sights-widget/x-sights-widget.component.ts","../../../projects/x-sights-core/src/lib/components/x-sights-widget/x-sights-widget.component.html","../../../projects/x-sights-core/src/lib/components/x-sights-backend-dashboard/x-sights-backend-dashboard.component.ts","../../../projects/x-sights-core/src/lib/components/x-sights-backend-dashboard/x-sights-backend-dashboard.component.html","../../../projects/x-sights-core/src/lib/components/x-sights-backend-public-dashboard/x-sights-backend-public-dashboard.component.ts","../../../projects/x-sights-core/src/lib/components/x-sights-backend-public-dashboard/x-sights-backend-public-dashboard.component.html","../../../projects/x-sights-core/src/lib/x-sights-core.module.ts","../../../projects/x-sights-core/src/public-api.ts","../../../projects/x-sights-core/src/x-sights-core.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {AggregationFunction} from './aggregation-interfaces';\nimport { DerivedVariable } from './derived-variable-interfaces';\nimport {Filters} from \"./filter-interfaces\";\nimport { DataFormat } from './variable-types';\nimport { TrendsRange } from './trend-interfaces';\n\nexport interface GraphData {\n    graphId: string;\n    graphTitle: string;\n    rows: string[];\n    columns: string[];\n    currLevel?: any;\n    graphTypes: GraphTypes[];\n    graphData: any;\n    prevLevelData?: any;\n    adminId?: any;\n    aggregationFunctions: AggregationFunction[];\n    filter: Filters;\n    selKeys?: string[];\n    range?: TrendsRange;\n    colors: string[];\n    order?: any;\n    customVariable: DerivedVariable[];\n    dataFormat: DataFormat[];\n    colToShow?: string;\n    lastLevelColumns: string[];\n    sourceId?: any;\n    dashboardFilter?: any;\n    shareid?: any;\n    breadCrumb?: any;\n} \n\n\nexport enum GraphTypes {\n    BAR= 'bar',\n    LINE= 'line',\n    AREA= 'area',\n    COLUMN= 'column',\n    PIE= 'pie',\n    STACKED_COLUMN= 'stacked-column',\n    STACKED_COLUMN_PERCENTAGE= 'stacked-column%',\n    STACKED_BAR= 'stacked-bar',\n    STACKED_BAR_PERCENTAGE= 'stacked-bar%',\n    SCATTER= 'scatter',\n    SPLINE= 'spline',\n}\n\nexport interface GraphList {\n    [key: string]: GraphData;\n}","import { AggregationFunction } from \"./aggregation-interfaces\";\nimport { DerivedVariable } from \"./derived-variable-interfaces\";\nimport { Filters } from \"./filter-interfaces\";\nimport { GraphTypes } from \"./graph-interfaces\";\nimport { DataFormat } from \"./variable-types\";\nexport interface TrendsData {\n    graphId: string;\n    graphTitle: string;\n    rows: string;\n    columns: string;\n    currLevel?: any;\n    graphTypes: GraphTypes;\n    graphData: any;\n    prevLevelData?: any;\n    aggregationFunctions: AggregationFunction;\n    filter: Filters;\n    colors: string;\n    order?: number;\n    rawData?: any[];\n    range: TrendsRange;\n    dateVariable: string;\n    rangeFilter: RangeFilter;\n    comparison: any[];\n    customVariable: DerivedVariable[];\n    dataFormat: DataFormat[];\n    lastLevelColumns: string[];\n    sourceId?: any;\n    dashboardFilter?: any;\n    shareid?: any;\n    selKeys?: string[];\n    adminId?: any;\n} \n\n\nexport interface TrendsRange {\n    startDate: any;\n    endDate: any;\n}\n\nexport enum RangeFilter {\n    YEARLY= \"Yearly\",\n    QUARTERLY= \"Quatarly\",\n    MONTHLY= \"Monthly\",\n    WEEKLY= \"Weekly\",\n    DAILY= \"Daily\"\n}\n\nexport interface TrendsList {\n    [key: string]: TrendsData;\n}","import { DataType, DateFormat, TimeFormat } from './variable-types';\n\nexport enum FilterTypes {\n  BEFORE = 'BEFORE',\n  AFTER = 'AFTER',\n  IN = 'IN',\n  BETWEEN = '<>',\n  LESS_THAN = '<',\n  LESS_THAN_EQUAL = '<=',\n  GREATER_THAN = '>',\n  GREATER_THAN_EQUAL = '>=',\n  EQUAL = '==',\n  NOT_EQUAL = '!=',\n  BETWEEN_RANGE = 'bet',\n  NOT_IN = 'NOT IN',\n}\n\nexport interface Filters {\n  xAxis: NormalFilter[];\n  yAxis: NormalFilter[];\n  yPreAxis: NormalFilter[];\n  customFilter: CustomFilter[];\n}\n\ninterface NormalFilter {\n  variableName: string;\n  filterType: FilterTypes;\n  values: any[];\n  variableType: DataType;\n  format: DateFormat | TimeFormat | string;\n}\n\nexport enum CustomFilterTypes {\n  SINGLE_EQUATION = 'Single Equation',\n  A_OR_B = 'A or B',\n  A_AND_B = 'A and B',\n  A_OR_B_OR_C = 'A or B or C',\n  A_AND_B_AND_C = 'A and B and C',\n  A_OR_B_AND_C = 'A or ( B and C )',\n  A_AND_B_OR_C = 'A and ( B or C )'\n}\n\nexport interface CustomFilter {\n  customFilterName: string;\n  customFilterType: CustomFilterTypes;\n  customFiltervar1: string;\n  filterType1: DataType;\n  filterFormat1: DateFormat | TimeFormat | string;\n  filterFormat2: DateFormat | TimeFormat | string;\n  filterFormat3: DateFormat | TimeFormat | string;\n  values1: any[];\n  symbol1: FilterTypes;\n  customFilterVar1Value: any[];\n  customFiltervar2: string;\n  filterType2: DataType;\n  values2: any[];\n  symbol2: FilterTypes;\n  customFilterVar2Value: any[];\n  customFiltervar3: string;\n  filterType3: DataType;\n  values3: any[];\n  customFilterVar3Value: any[];\n  symbol3: FilterTypes;\n}\n","export enum DataType {\n    STRING = \"string\",\n    NUMBER = \"number\",\n    DATE = \"date\",\n    TIME = \"time\",\n}\n\nexport enum DateFormat {\n    DD_MM_YYYY_hh_mm_ss_a = \"DD-MM-YYYY hh:mm:ss a\",\n    DD_MM_YYYY_HH_mm_ss = \"DD-MM-YYYY HH:mm:ss\",\n    MM_DD_YYYY_hh_mm_ss_a = \"MM-DD-YYYY hh:mm:ss a\",\n    YYYY_MM_DD_hh_mm_ss_a = \"YYYY-MM-DD hh:mm:ss a\",\n    DD_s_MM_s_YYYY_hh_mm_ss_a = \"DD/MM/YYYY hh:mm:ss a\",\n    MM_s_DD_s_YYYY_hh_mm_ss_a = \"MM/DD/YYYY hh:mm:ss a\",\n    YYYY_s_MM_s_DD_hh_mm_ss_a = \"YYYY/MM/DD hh:mm:ss a\",\n    DD_MM_YYYY = \"DD-MM-YYYY\",\n    MM_DD_YYYY = \"MM-DD-YYYY\",\n    YYYY_MM_DD = \"YYYY-MM-DD\",\n    DD_s_MM_s_YYYY = \"DD/MM/YYYY\",\n    MM_s_DD_s_YYYY = \"MM/DD/YYYY\",\n    YYYY_s_MM_s_DD = \"YYYY/MM/DD\"\n}\n\nexport enum TimeFormat {\n    HH_mm_ss = \"HH:mm:ss\",\n    HH_mm = \"HH:mm\",\n    hh_mm_ss_a = \"hh:mm:ss a\",\n    hh_mm_a = \"hh:mm a\"\n}\n\nexport interface DataFormat {\n    name: string;\n    type: DataType;\n    format: TimeFormat | DateFormat | string;\n}","import { AggregationFunction } from \"./aggregation-interfaces\"\nimport { DerivedVariable } from \"./derived-variable-interfaces\"\nimport { Filters } from \"./filter-interfaces\"\nimport { TrendsRange } from \"./trend-interfaces\"\nimport { DataFormat } from \"./variable-types\"\n\nexport interface Fields {\n    caption: string,\n    dataField: string | number,\n    area: PivotFieldsArea,\n    allowFiltering?: boolean,\n    allowSorting?: boolean,\n    format?: Function,\n    summaryType?: string\n}\n\nexport enum PivotFieldsArea{\n    ROW = \"row\",\n    COLUMN = \"column\",\n    DATA = \"data\"\n}\n\nexport interface PivotTableData {\n    data: any[],\n    rows: string[],\n    range?: TrendsRange;\n    column: string[],\n    aggregationFunction: AggregationFunction[],\n    filter: Filters,\n    derivedVariables: DerivedVariable[],\n    categories: string[],\n    dataFormat: DataFormat[]\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport * as lodash from 'lodash';\nimport { DataType } from '../data-types/variable-types';\nimport * as moment from 'moment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataService {\n  XSIGHT_BASE_URL: any = 'https://xsight.xswift.biz/x-sight/api/v1/';\n  DCUTLY_BASE_URL: any = 'https://dcutly.com/';\n  MODAL_DATA = {};\n  entryMode: string = '1';\n  authKey: string = '';\n  constructor(private http: HttpClient) {\n    this.entryMode = localStorage.getItem(\"xsights_entrymode\") ?? \"0\";\n    this.authKey = localStorage.getItem(\"xsights_authkey\") ?? \"\";\n  }\n  setHeaders(adminId: string) {\n    return {\n      version: '1.0',\n      entrymode: this.entryMode,\n      apptype: 'dashboard',\n      authkey: this.authKey,\n      foAdminId: adminId,\n      'content-enconding': 'gzip',\n    };\n  }\n  setModalData(modalData: any) {\n    this.MODAL_DATA = modalData;\n  }\n  getModalData() {\n    return this.MODAL_DATA;\n  }\n  getDashboardById(dashboardId: any, adminId: string) {\n    return this.http\n      .get(\n        this.XSIGHT_BASE_URL +\n          'dashboard/get-dashboard-data?dashboard_id=' +\n          dashboardId,\n        {\n          headers: this.setHeaders(adminId),\n        }\n      )\n      .toPromise();\n  }\n  getGraphDashBoardById(data: any, adminId: string) {\n    return this.http\n      .post(\n        this.XSIGHT_BASE_URL +\n          'dashboard/get-dashboard-graph-data', data,\n        {\n          headers: this.setHeaders(adminId),\n        }\n      )\n      .toPromise();\n  }\n\n\n  getGraphDataById(data: any) {\n    return this.http\n      .post(\n        this.XSIGHT_BASE_URL +\n          'graphs/get-graph-data-by-id', data,\n        {\n          headers: this.setHeaders(data.adminId),\n        }\n      )\n      .toPromise();\n  }\n\n  getGraphDrilldownById(data: any) {\n    return this.http\n      .post(\n        this.XSIGHT_BASE_URL +\n          'graphs/get-graph-drilldown-data', data,\n        {\n          headers: this.setHeaders(data.adminId),\n        }\n      )\n      .toPromise();\n  }\n  downloadDrilldownById(data: any) {\n    return this.http\n      .post(\n        this.XSIGHT_BASE_URL +\n          'graphs/download-drilldown-data', data,\n        {\n          reportProgress: true,\n          observe: 'events',\n          responseType: 'blob',\n          headers: this.setHeaders(data.adminId),\n        }\n      );\n  }\n  fetchDataSource(params: any, adminId: string) {\n    return this.http\n      .get(\n        this.XSIGHT_BASE_URL +\n          'data-source/fetch-data-from-source?sourceId=' +\n          params.sourceid +\n          '&startTime=' +\n          params.startTime +\n          '&endTime=' +\n          params.endTime,\n        {\n          headers: this.setHeaders(adminId),\n        }\n      )\n      .toPromise();\n  }\n  getGraphById(widgetId: any, adminId: string) {\n    return this.http\n      .get(\n        this.XSIGHT_BASE_URL + 'graphs/get-graph-by-id?graphId=' + widgetId,\n        {\n          headers: this.setHeaders(adminId),\n        }\n      )\n      .toPromise();\n  }\n  createNewFormula(customVariable: any) {\n    if (customVariable.is_filter) {\n      customVariable.formula = 'if (';\n      for (let i = 0; i < customVariable.filters.length; i++) {\n        let value = customVariable.filters[i].isCustomValue\n          ? customVariable.filters[i].values\n          : customVariable.filters[i].aggregationFunction +\n            '(\"' +\n            customVariable.filters[i].values +\n            '\")';\n        let conditions = '';\n        customVariable.filters[i].conditions.forEach((condition: any) => {\n          conditions +=\n            (condition.relation == null ? '' : condition.relation) +\n            ' ' +\n            condition.variable.name +\n            ' ' +\n            condition.operator +\n            ' [' +\n            condition.comparativeVariables +\n            '] ';\n        });\n        customVariable.formula += conditions + ') { ' + value + ' }';\n        if (i + 1 != customVariable.filters.length) {\n          customVariable.formula += ' else if ( ';\n        }\n        if (i == customVariable.filters.length - 1) {\n          customVariable.formula +=\n            ' else { ' + customVariable.defaultValue + ' }';\n        }\n      }\n      if (customVariable.filters.length == 0) {\n        customVariable.formula =\n          ' ) {  } else { ' + customVariable.defaultValue + ' }';\n      }\n    } else {\n      customVariable.formula = '';\n      customVariable.operation.forEach((op: any) => {\n        customVariable.formula += op.value + ' ';\n      });\n    }\n    return customVariable;\n  }\n  parseDataFormat(data: any, format: any) {\n    let unMatchData = [];\n    let res = lodash.map(data, (d) => {\n      Object.entries(d).forEach((value) => {\n        let formatIndex = format.findIndex((el: any) => {\n          return el.name == value[0];\n        });\n        if (formatIndex == -1) {\n          unMatchData.push(value[0]);\n          d[value[0]] = 0;\n        } else {\n          let type = format[formatIndex].type;\n          if (type == 'number') {\n            if (\n              this.getVariableData(value[1])[0] != 'number' ||\n              value[1] == null ||\n              value[1] == ''\n            ) {\n              d[value[0]] = 0;\n            }\n          } else if (type == 'string') {\n            if (\n              this.getVariableData(value[1])[0] != 'string' ||\n              value[1] == null ||\n              value[1] == ''\n            ) {\n              d[value[0]] = '-';\n            }\n          } else if (type == 'date') {\n            let dateFormat = format[formatIndex].format;\n            d[value[0]] = this.convertDateFormat(value[1], dateFormat);\n          } else if (type == 'time') {\n            let timeFormat = format[formatIndex].format;\n            d[value[0]] = this.convertDateFormat(value[1], timeFormat);\n          }\n        }\n      });\n      return d;\n    });\n    return res;\n  }\n\n  keyConverter(graphData: any, dataKeys: any, direction: number = 1) {\n    if (direction === 1) {\n      graphData.rows = graphData.rows.map((row: any) => {\n        let dataKey = dataKeys.find((key: any) => key.name == row);\n        return dataKey?.title ?? row;\n      });\n      graphData.columns = graphData.columns.map((column: any) => {\n        let dataKey = dataKeys.find((key: any) => key.name == column);\n        return dataKey?.title ?? column;\n      });\n      graphData.lastLevelColumns = graphData.lastLevelColumns.map(\n        (column: any) => {\n          let dataKey = dataKeys.find((key: any) => key.name == column);\n          return dataKey?.title ?? column;\n        }\n      );\n      if (graphData.colToShow != null) {\n        let dataKey = dataKeys.find(\n          (key: any) => key.name == graphData.colToShow\n        );\n        graphData.colToShow = dataKey?.title ?? graphData.colToShow;\n      }\n      graphData.aggregationFunctions = graphData.aggregationFunctions.map(\n        (func: any) => {\n          let dataKey = dataKeys.find(\n            (key: any) => key.name == func.variableName\n          );\n          return {\n            ...func,\n            variableName: dataKey?.title ?? func.variableName,\n          };\n        }\n      );\n\n      graphData.filter.xAxis = graphData.filter.xAxis.map((f: any) => {\n        let dataKey = dataKeys.find(\n          (key: any) => key.name == f.variableName\n        );\n        return {\n          ...f,\n          variableName: dataKey?.title ?? f.variableName,\n        };\n      });\n      graphData.filter.yAxis = graphData.filter.yAxis.map((f: any) => {\n        let dataKey = dataKeys.find(\n          (key: any) => key.name == f.variableName\n        );\n        return {\n          ...f,\n          variableName: dataKey?.title ?? f.variableName,\n        };\n      });\n      graphData.filter.yPreAxis = graphData.filter.yPreAxis.map((f: any) => {\n        let dataKey = dataKeys.find(\n          (key: any) => key.name == f.variableName\n        );\n        return {\n          ...f,\n          variableName: dataKey?.title ?? f.variableName,\n        };\n      });\n      graphData.filter.customFilter = graphData.filter.customFilter.map(\n        (f: any) => {\n          let dataKey1 = dataKeys.find(\n            (key: any) => key.name == f.customFiltervar1\n          );\n          let dataKey2 = dataKeys.find(\n            (key: any) => key.name == f.customFiltervar2\n          );\n          let dataKey3 = dataKeys.find(\n            (key: any) => key.name == f.customFiltervar3\n          );\n          return {\n            ...f,\n            customFiltervar1: dataKey1?.title ?? f.customFiltervar1,\n            customFiltervar2: dataKey2?.title ?? f.customFiltervar2,\n            customFiltervar3: dataKey3?.title ?? f.customFiltervar3,\n          };\n        }\n      );\n\n      graphData.customVariable = graphData.customVariable.map(\n        (variable: any) => {\n          if (variable.is_filter || variable.is_slab) {\n            variable.filters = variable.filters.map((f: any) => {\n              if (!f.isCustomValue) {\n                let dataKey = dataKeys.find(\n                  (key: any) => key.name == f.values\n                );\n                f.values = dataKey?.title ?? f.values;\n              }\n              f.conditions = f.conditions.map((condition: any) => {\n                let dataKey = dataKeys.find(\n                  (key: any) => key.name == condition.variable.name\n                );\n                condition.variable.name =\n                  dataKey?.title ?? condition.variable.name;\n                return condition;\n              });\n              return f;\n            });\n          } else {\n            variable.operation = variable.operation.map((op: any) => {\n              if (!op.isCustomValue) {\n                let dataKey = dataKeys.find(\n                  (key: any) => key.name.split(' ').join('_') == op.value\n                );\n                op.value = dataKey?.title ?? op.value;\n              }\n              return op;\n            });\n          }\n          return this.createNewFormula(variable);\n        }\n      );\n\n      graphData.dataFormat = graphData.dataFormat.map((format: any) => {\n        let dataKey = dataKeys.find((key: any) => key.name == format.name);\n        return {\n          ...format,\n          name: dataKey?.title ?? format.name,\n        };\n      });\n    } else {\n      graphData.rows = graphData.rows.map((row: any) => {\n        let dataKey = dataKeys.find((key: any) => key.title == row);\n        return dataKey?.name ?? row;\n      });\n      graphData.columns = graphData.columns.map((column: any) => {\n        let dataKey = dataKeys.find((key: any) => key.title == column);\n        return dataKey?.name ?? column;\n      });\n      graphData.lastLevelColumns = graphData.lastLevelColumns.map(\n        (column: any) => {\n          let dataKey = dataKeys.find((key: any) => key.title == column);\n          return dataKey?.name ?? column;\n        }\n      );\n      if (graphData.colToShow != null) {\n        let dataKey = dataKeys.find(\n          (key: any) => key.title == graphData.colToShow\n        );\n        graphData.colToShow = dataKey?.name ?? graphData.colToShow;\n      }\n      graphData.aggregationFunctions = graphData.aggregationFunctions.map(\n        (func: any) => {\n          let dataKey = dataKeys.find(\n            (key: any) => key.title == func.variableName\n          );\n          return {\n            ...func,\n            variableName: dataKey?.name ?? func.variableName,\n          };\n        }\n      );\n\n      graphData.filter.xAxis = graphData.filter.xAxis.map((f: any) => {\n        let dataKey = dataKeys.find(\n          (key: any) => key.title == f.variableName\n        );\n        return {\n          ...f,\n          variableName: dataKey?.name ?? f.variableName,\n        };\n      });\n      graphData.filter.yAxis = graphData.filter.yAxis.map((f: any) => {\n        let dataKey = dataKeys.find(\n          (key: any) => key.title == f.variableName\n        );\n        return {\n          ...f,\n          variableName: dataKey?.name ?? f.variableName,\n        };\n      });\n      graphData.filter.yPreAxis = graphData.filter.yPreAxis.map((f: any) => {\n        let dataKey = dataKeys.find(\n          (key: any) => key.title == f.variableName\n        );\n        return {\n          ...f,\n          variableName: dataKey?.name ?? f.variableName,\n        };\n      });\n      graphData.filter.customFilter = graphData.filter.customFilter.map(\n        (f: any) => {\n          let dataKey1 = dataKeys.find(\n            (key: any) => key.title == f.customFiltervar1\n          );\n          let dataKey2 = dataKeys.find(\n            (key: any) => key.title == f.customFiltervar2\n          );\n          let dataKey3 = dataKeys.find(\n            (key: any) => key.title == f.customFiltervar3\n          );\n          return {\n            ...f,\n            customFiltervar1: dataKey1?.name ?? f.customFiltervar1,\n            customFiltervar2: dataKey2?.name ?? f.customFiltervar2,\n            customFiltervar3: dataKey3?.name ?? f.customFiltervar3,\n          };\n        }\n      );\n\n      graphData.customVariable = graphData.customVariable.map(\n        (variable: any) => {\n          if (variable.is_filter || variable.is_slab) {\n            variable.filters = variable.filters.map((f: any) => {\n              if (!f.isCustomValue) {\n                let dataKey = dataKeys.find(\n                  (key: any) => key.title == f.values\n                );\n                f.values = dataKey?.name ?? f.values;\n              }\n              f.conditions = f.conditions.map((condition: any) => {\n                let dataKey = dataKeys.find(\n                  (key: any) => key.title == condition.variable.name\n                );\n                condition.variable.name =\n                  dataKey?.name ?? condition.variable.name;\n                return condition;\n              });\n              return f;\n            });\n          } else {\n            variable.operation = variable.operation.map((op: any) => {\n              if (!op.isCustomValue) {\n                let dataKey = dataKeys.find(\n                  (key: any) => key.title.split(' ').join('_') == op.value\n                );\n                op.value = dataKey?.name ?? op.value;\n              }\n              return op;\n            });\n          }\n          return this.createNewFormula(variable);\n        }\n      );\n\n      graphData.dataFormat = graphData.dataFormat.map((format: any) => {\n        let dataKey = dataKeys.find((key: any) => key.title == format.name);\n        return {\n          ...format,\n          name: dataKey?.name ?? format.name,\n        };\n      });\n    }\n\n    return graphData;\n  }\n\n  getVariableData(input: any) {\n    if (this.validateTime(input)) {\n      let type = DataType.TIME;\n      return [type];\n    } else if (this.checkDate(input)) {\n      let type = DataType.DATE;\n      return [type];\n    } else if (this.validateNumber(input)) {\n      let type = DataType.NUMBER;\n      return [type];\n    } else {\n      let type = DataType.STRING;\n      return [type];\n    }\n  }\n  validateTime(input: any) {\n    let pattern1 = /^(1[0-2]|0?[1-9]):([0-5]?[0-9]):([0-5]?[0-9]) (●?[AP]M)?$/;\n    let pattern2 = /^(1[0-2]|0?[1-9]):([0-5]?[0-9]):([0-5]?[0-9]) (●?[ap]m)?$/;\n    let pattern3 = /^(1[0-2]|0?[1-9]):([0-5]?[0-9]) (●?[AP]M)?$/;\n    let pattern4 = /^(1[0-2]|0?[1-9]):([0-5]?[0-9]) (●?[ap]m)?$/;\n    let pattern5 = /^(2[0-3]|[01]?[0-9]):([0-5]?[0-9]):([0-5]?[0-9])$/;\n    let pattern6 = /^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$/;\n    return (\n      pattern1.test(input) ||\n      pattern2.test(input) ||\n      pattern3.test(input) ||\n      pattern4.test(input) ||\n      pattern5.test(input) ||\n      pattern6.test(input)\n    );\n  }\n  validateNumber(e: any) {\n    const pattern2 = /^[-+]?[0-9]+\\.[0-9]+$/;\n    const pattern = /^[-+]?[0-9]+$/;\n    return pattern.test(e) || pattern2.test(e);\n  }\n  checkDate(input: any) {\n    const pattern =\n      /^([0-2]\\d|[3][0-1])\\-([0]\\d|[1][0-2])\\-([2][01]|[1][6-9])\\d{2}(\\s([0-1]\\d|[2][0-3])(\\:[0-5]\\d){1,2})?$/;\n    return pattern.test(input);\n  }\n  convertDateFormat(input: any, type: any) {\n    if (moment(input, type).isValid()) {\n      switch (type) {\n        case 'DD-MM-YYYY hh:mm:ss a':\n          return moment(input, type).format('DD-MM-YYYY hh:mm:ss a');\n        case 'MM-DD-YYYY hh:mm:ss a':\n          return moment(input, type).format('DD-MM-YYYY hh:mm:ss a');\n        case 'YYYY-MM-DD hh:mm:ss a':\n          return moment(input, type).format('DD-MM-YYYY hh:mm:ss a');\n        case 'DD-MM-YYYY':\n          return moment(input, type).format('DD-MM-YYYY');\n        case 'MM-DD-YYYY':\n          return moment(input, type).format('DD-MM-YYYY');\n        case 'YYYY-MM-DD':\n          return moment(input, type).format('DD-MM-YYYY');\n        case 'DD/MM/YYYY hh:mm:ss a':\n          return moment(input, type).format('DD-MM-YYYY hh:mm:ss a');\n        case 'MM/DD/YYYY hh:mm:ss a':\n          return moment(input, type).format('DD-MM-YYYY hh:mm:ss a');\n        case 'YYYY/MM/DD hh:mm:ss a':\n          return moment(input, type).format('DD-MM-YYYY hh:mm:ss a');\n        case 'DD/MM/YYYY':\n          return moment(input, type).format('DD-MM-YYYY');\n        case 'MM/DD/YYYY':\n          return moment(input, type).format('DD-MM-YYYY');\n        case 'YYYY/MM/DD':\n          return moment(input, type).format('DD-MM-YYYY');\n        case 'HH:mm':\n          return moment(input, type).format('HH:mm:ss');\n        case 'HH:mm:ss':\n          return moment(input, type).format('HH:mm:ss');\n        case 'hh:mm a':\n          return moment(input, type).format('HH:mm:ss');\n        case 'hh:mm:ss a':\n          return moment(input, type).format('HH:mm:ss');\n        default:\n          return null;\n      }\n    } else {\n      return null;\n    }\n  }\n  getDecodedUrl(url: any) {\n    return this.http\n      .post(this.DCUTLY_BASE_URL + 'cut/decodeUrl', {\n        url: url,\n        paramEncryption: false,\n      })\n      .toPromise();\n  }\n  getEncodedUrl(url: any) {\n    return this.http\n      .post(this.DCUTLY_BASE_URL + 'cut/short', {\n        url: url,\n        paramEncryption: true,\n      })\n      .toPromise();\n  }\n  getSharedDashboard(params: any, adminId: string) {\n    return this.http\n      .get(this.XSIGHT_BASE_URL + 'dashboard/get-shared-dashboard' + params, {\n        headers: this.setHeaders(adminId),\n      })\n      .toPromise();\n  }\n  getSharedBackendDashboard(params: any, adminId: string) {\n    return this.http\n      .post(this.XSIGHT_BASE_URL + 'dashboard/get-shared-backend-dashboard-data', params, {\n        headers: this.setHeaders(adminId),\n      })\n      .toPromise();\n  }\n  getSharedDashboardData(dashboard_id: any, adminId: string) {\n    return this.http\n      .get(\n        this.XSIGHT_BASE_URL +\n          'dashboard/get-shared-dashboard-data?shareid=' +\n          dashboard_id,\n        {\n          headers: this.setHeaders(adminId),\n        }\n      )\n      .toPromise();\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport * as FileSave from 'file-saver';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'lib-data-popup',\n  templateUrl: './data-popup.component.html',\n  styleUrls: ['./data-popup.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DataPopupComponent implements OnInit {\n  keys: any = [];\n  dataSource: any = [];\n  columnToView: any[] = [];\n  constructor(\n    private activeModal: NgbActiveModal,\n    private dataService: DataService\n  ) {\n  }\n\n  ngOnInit() {\n    let data: any = this.dataService.getModalData();\n    this.columnToView = data.colToView;\n    this.keys = Object.keys(data.refData[0]).filter(\n      (key) => this.columnToView.length == 0 || this.columnToView.includes(key)\n    );\n    this.dataSource = data.refData;\n  }\n  closeModal() {\n    this.activeModal.close();\n  }\n  exportExcel() {\n    import('xlsx').then((xlsx) => {\n      const worksheet = xlsx.utils.json_to_sheet(this.dataSource);\n      const workbook = { Sheets: { data: worksheet }, SheetNames: ['data'] };\n      const excelBuffer = xlsx.write(workbook, {\n        bookType: 'xlsx',\n        type: 'array',\n      });\n      this.saveAsExcelFile(excelBuffer, 'data');\n    });\n  }\n  saveAsExcelFile(buffer: any, fileName: any) {\n    let EXCEL_TYPE =\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    let EXCEL_EXTENSION = '.xlsx';\n    const data = new Blob([buffer], {\n      type: EXCEL_TYPE,\n    });\n    FileSave.saveAs(\n      data,\n      fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION\n    );\n  }\n}\n","<div>\n  <div style=\"display: flex; justify-content:space-between;align-items: center;padding: 5px;\">\n    <h3 style=\"margin-bottom: 0; font-size: 20px;font-weight: 500;\">Data</h3> \n    <button class=\"btn btn-primary dwnld_btn\" (click)=\"exportExcel()\">Download</button>\n  </div>\n  <div class=\"smart_table\"> <p-table #dt1 [value]=\"dataSource\" [(selection)]=\"dataSource\" dataKey=\"id\"\n      styleClass=\"p-datatable-customers\" [rows]=\"10\" [paginator]=\"true\"> <ng-template pTemplate=\"header\">\n        <tr>\n          <th *ngFor=\"let heading of keys;\" pSortableColumn=\"{{heading}}\">{{heading}} <p-sortIcon\n              field=\"{{heading}}\"></p-sortIcon> </th>\n        </tr>\n        <tr>\n          <th *ngFor=\"let heading of keys;\"> <input pInputText type=\"text\"\n              (input)=\"dt1.filter($any($event.target)?.value, heading, 'contains')\"\n              [value]=\"$any(dt1.filters[heading])?.value\" placeholder=\"Search by {{heading}}\" class=\"p-column-filter\">\n          </th>\n        </tr>\n      </ng-template> <ng-template pTemplate=\"body\" let-data>\n        <tr>\n          <td *ngFor=\"let heading of keys\"> <span class=\"p-column-title\">{{heading}}</span> {{data[heading]}} </td>\n        </tr>\n      </ng-template> <ng-template pTemplate=\"emptymessage\">\n        <tr>\n          <td colspan=\"12\" class=\"text-center\">No Data found.</td>\n        </tr>\n      </ng-template> </p-table> </div>\n</div>","import { Injectable } from '@angular/core';\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\nimport * as Highcharts from 'highcharts';\nimport Drilldown from 'highcharts/modules/drilldown';\nimport * as lodash from 'lodash';\nimport HC_exporting from 'highcharts/modules/exporting';\nimport offlineExporting from 'highcharts/modules/offline-exporting';\nimport accessibility from 'highcharts/modules/accessibility';\nimport highStocks from 'highcharts/modules/stock';\nimport { BigNumber } from 'bignumber.js';\n\n\nimport Decimal from 'decimal.js';\nimport {\n  GraphData,\n  GraphTypes,\n  GraphList,\n} from './data-types/graph-interfaces';\nimport {\n  RangeFilter,\n  TrendsData,\n  TrendsList,\n} from './data-types/trend-interfaces';\nimport {\n  AggregationFunction,\n  AggregationFunctionsType,\n} from './data-types/aggregation-interfaces';\nimport {\n  CustomFilter,\n  CustomFilterTypes,\n  Filters,\n  FilterTypes,\n} from './data-types/filter-interfaces';\nimport {\n  DerivedVariable,\n  DerivedVariableFilter,\n  DerivedVariableFilterCondition,\n} from './data-types/derived-variable-interfaces';\nimport {\n  DataFormat,\n  DataType,\n  DateFormat,\n  TimeFormat,\n} from './data-types/variable-types';\nimport {\n  Fields,\n  PivotFieldsArea,\n  PivotTableData,\n} from './data-types/pivot-interfaces';\nimport PivotGridDataSource from 'devextreme/ui/pivot_grid/data_source';\nimport { DataPopupComponent } from './components/data-popup/data-popup.component';\nimport { DataService } from './services/data.service';\n\nHC_exporting(Highcharts);\nofflineExporting(Highcharts);\nhighStocks(Highcharts);\naccessibility(Highcharts);\nDrilldown(Highcharts);\n\nexport enum WidgetType {\n  GRAPH = 'graph',\n  TREND = 'trend',\n  PIVOT_TABLE = 'pivot_table',\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class XSightsCoreService {\n  private modalData: any = {};\n  private highcharts: typeof Highcharts = Highcharts;\n  private divStyles =\n    'display: flex; justify-content: flex-start; align-items: center; position: absolute; top: 5px; left: 5px;';\n  private iconStyles =\n    'border: 2px solid #eee; padding: 5px; min-width: 28px; text-align: center; border-radius: 8px; background: #ccc; box-shadow: 2px 2px 2px #ccc; margin-right: 10px;';\n  private creditTitle = 'Powered by Axestrack';\n  private creditUrl = 'https://www.axestrack.com/';\n  private breadcrumbStyles =\n  'border: 2px solid #eee; background: #ccc; padding: 5px; min-width: 28px; text-align: center; border-radius: 8px; display: flex; box-shadow: 2px 2px 2px #ccc; margin-right: 10px;';\n\n  private charts: GraphList = {};\n  private trends: TrendsList = {};\n\n  constructor(\n    private dialog: NgbModal,\n    private modalConfig: NgbModalConfig,\n    private dataService: DataService\n  ) {\n    this.modalConfig.modalDialogClass = 'datapopup-dailog';\n    this.modalConfig.windowClass = 'datapopup-window';\n  }\n\n  public build(\n    widgetType: WidgetType,\n    widgetData: GraphData | TrendsData | PivotTableData\n  ): Promise<any> {\n    return new Promise((resolve, reject) => {\n      switch (widgetType) {\n        case WidgetType.GRAPH:\n          resolve(\n            this.buildGraph({\n              ...widgetData,\n              breadCrumb: ['Home'],\n              currLevel: 0,\n              prevLevelData: [],\n              selKeys: [],\n              order: 0,\n              colToShow: '',\n            } as GraphData)\n          );\n          break;\n        case WidgetType.TREND:\n          let widget: TrendsData = widgetData as TrendsData;\n          resolve(\n            this.buildTrend({\n              ...widget,\n              rawData: widget.graphData,\n              currLevel: 1,\n              order: 0,\n              prevLevelData: [],\n            } as TrendsData)\n          );\n          break;\n        case WidgetType.PIVOT_TABLE:\n          resolve(this.buildPivotTable(widgetData as PivotTableData));\n          break;\n      }\n    });\n  }\n\n  private buildPivotTable(tableData: PivotTableData) {\n    //Applying Custom Filter\n    let data = tableData.data;\n    \n    let fields: Fields[] = [];\n    tableData.rows.forEach((row) => {\n      fields.push({\n        caption: row,\n        dataField: row,\n        area: PivotFieldsArea.ROW,\n      });\n    });\n    tableData.categories.forEach((col) => {\n      fields.push({\n        caption: col,\n        dataField: col,\n        area: PivotFieldsArea.COLUMN,\n      });\n    });\n    tableData.column.forEach((val, index) => {\n      fields.push({\n        caption:\n          val +\n          '(' +\n          tableData.aggregationFunction[\n            index\n          ].aggregationFunctions.toLowerCase() +\n          ')',\n        dataField: val,\n        area: PivotFieldsArea.DATA,\n        allowFiltering: true,\n        allowSorting: true,\n        format: function (value: any) {\n          if (!Number.isInteger(value)) {\n            return value.toFixed(2).toString();\n          }\n          return value.toString();\n        },\n        summaryType:\n          tableData.aggregationFunction[\n            index\n          ].aggregationFunctions.toLowerCase(),\n      });\n    });\n    let pivotData: any = {\n      fields: fields,\n      store: data,\n    };\n    let response = new PivotGridDataSource(pivotData);\n    return response;\n  }\n\n  //Graph Function\n  private async buildGraph(graphData: GraphData): Promise<boolean> {\n    //Applying Custom Filter\n    //Set GraphObject with GraphId\n    this.charts[graphData.graphId] = graphData;\n    this.charts[graphData.graphId].graphData = this.charts[graphData.graphId].graphData.filter((d: any) => this.applyCustomFilter(d, this.charts[graphData.graphId].filter))\n    if (this.charts[graphData.graphId].rows[this.charts[graphData.graphId].currLevel] == '***LABEL***') {\n      //Create Label Block\n      let response = await this.publishLabel(graphData.graphId);\n      //Dispatch after build event\n      return response;\n    } else {\n      //Create Graph\n      let response = await this.startGraphBuilder(graphData.graphId, this.charts[graphData.graphId].currLevel, '');\n      //Dispatch after build event\n      return response;\n    }\n  }\n\n  private async publishLabel(graphId: string) {\n    //Flush Content of Graph Div\n    document.querySelector('#' + graphId)!.innerHTML = '';\n\n    //Add Custom Variable in Raw Data\n    let data = await this.addCustomVariable(\n      this.charts[graphId].customVariable,\n      this.charts[graphId].graphData,\n      false,\n      this.charts[graphId].dataFormat,\n      false\n    );\n\n    let colData = this.applyDataFilter(data, this.charts[graphId].filter, this.charts[graphId].columns,graphId);\n\n    //Labels Data creation\n    let htmlDiv = this.charts[graphId].columns.map((y, yIndex) => {\n      let allData = colData[y].map((d: any) => d[y]);\n\n      allData = lodash.without(allData, '');\n      allData = lodash.without(allData, undefined);\n      return {\n        label: y,\n        value:\n          this.charts[graphId].aggregationFunctions[yIndex]\n            .aggregationFunctions == 'NO FUNCTION'\n            ? lodash.max(allData) //Getting Max Value on NO Function\n            : this.applyAggregation(\n                allData,\n                yIndex,\n                this.charts[graphId].aggregationFunctions\n              ), //Applying Aggregation\n      };\n    });\n\n    //Creating Label Html DUMP\n    let html = `\n    <div class=\"card\" style=\"padding-top: 3%; padding-bottom: 3%; width: inherit;\">\n    ${\n      htmlDiv.length == 1\n        ? `<h3 style=\"text-align: center;\">${this.charts[graphId].graphTitle}</h3>`\n        : ``\n    }\n    <div class=\"graph-label\" >\n    ${htmlDiv\n      .map(\n        (d: any, index) => `\n        <div class=\"label-item\" ${\n          this.charts[graphId].colors[index] != undefined\n            ? `style=\"background-color: ${this.charts[graphId].colors[index]}\"`\n            : ''\n        } id=\"card-graph-${graphId}\" data=\"${\n          this.charts[graphId].columns[index]\n        }\">\n          <h3 style=\"${data.length == 1 ? 'font-size: 18px;' : ''}\" data=\"${\n          this.charts[graphId].columns[index]\n        }\"><b data=\"${this.charts[graphId].columns[index]}\">${Math.round(\n          d.value\n        )}</b></h3>\n          ${\n            data.length > 1\n              ? `<h3 data=\"${this.charts[graphId].columns[index]}\">` +\n                d.label +\n                '</h3>'\n              : ''\n          }\n        </div>\n\n        `\n      )\n      .join('')}\n        </div>\n    </div>`;\n\n    //Rendering Label HTML DUMP over document\n    document.querySelector('#' + graphId)!.innerHTML = html;\n\n    let _self = this;\n\n    //Label Click handler\n    document.querySelectorAll('#card-graph-' + graphId).forEach((card) =>\n      card.addEventListener('click', function (e: any) {\n        if (_self.charts[graphId].rows.length == 1) {\n          //Rendering Last level Component\n          _self.modalData = {\n            colToView: _self.charts[graphId].lastLevelColumns,\n            refData: _self.charts[graphId].graphData,\n          };\n          let modalOptions: any = {\n            panelClass: 'dataPopup-modal',\n            backdropClass: 'modal-backdrop',\n          };\n          _self.dialog.open(DataPopupComponent, modalOptions);\n        } else {\n          _self.charts[graphId].currLevel += 1;\n          _self.charts[graphId].prevLevelData.push(_self.charts[graphId].graphData);\n          _self.charts[graphId].breadCrumb.push(e.target.getAttribute('data'));\n\n          //Flush Label Content from document\n          document.querySelector('#' + graphId)!.innerHTML = '';\n\n          //Generating Child Graph of Label\n          _self.startGraphBuilder(graphId, 1, e.target.getAttribute('data'));\n        }\n      })\n    );\n    return true;\n  }\n\n\n  private applyDataFilter(data: any, filter: Filters, columns: any , graphId: any){\n    const yFilter = filter.yPreAxis;\n    let colData : any = {};\n    lodash.forEach(data, (d) => {\n      columns.forEach((col: string) => {\n        const filterToApply = yFilter.filter(y => y.variableName == col);\n        let isValid = yFilter.length == 0;\n        if(yFilter.length > 0){\n          let values = filterToApply[0].values;\n          let dataValue = d[filterToApply[0].variableName];\n          let variableType = filterToApply[0].variableType;\n          switch(filterToApply[0].filterType){\n              case FilterTypes.GREATER_THAN:\n                if (dataValue > values[0]) {\n                  isValid = true;\n                }\n                break;\n              case FilterTypes.LESS_THAN:\n                if (dataValue < values[0]) {\n                  isValid = true;\n                }\n                break;\n              case FilterTypes.LESS_THAN_EQUAL:\n                if (dataValue <= values[0]) {\n                  isValid = true;\n                }\n                break;\n              case FilterTypes.GREATER_THAN_EQUAL:\n                if (dataValue >= values[0]) {\n                  isValid = true;\n                }\n                break;\n              case FilterTypes.EQUAL:\n                if (dataValue == values[0]) {\n                  isValid = true;\n                }\n                break;\n              case FilterTypes.NOT_EQUAL:\n                if (dataValue != values[0]) {\n                  isValid = true;\n                }\n                break;\n              case FilterTypes.BETWEEN_RANGE:\n                if (dataValue >= values[0] && dataValue < values[1]) {\n                  isValid = true;\n                }\n                break;\n              case FilterTypes.BEFORE:\n                if (variableType == DataType.DATE) {\n                  let operand1 = this.getFormattedDate(\n                    dataValue,\n                    filterToApply[0].format\n                  );\n                  let operand2 = new Date(values[0]);\n                  if (operand1 < operand2) {\n                    isValid = true;\n                  }\n                } else {\n                  let currSeconds = this.getFormattedDate(\n                    dataValue,\n                    filterToApply[0].format\n                  );\n                  let [hour, min] = values[0]\n                    .split(':')\n                    .map((el: any) => parseInt(el));\n                  let comparedSec = hour * 60 * 60 + min * 60;\n                  if (currSeconds < comparedSec) {\n                    isValid = true;\n                  }\n                }\n                break;\n              case FilterTypes.AFTER:\n                if (variableType == DataType.DATE) {\n                  let operand1 = this.getFormattedDate(\n                    dataValue,\n                    filterToApply[0].format\n                  );\n                  let operand2 = new Date(values[0]);\n                  if (operand1 > operand2) {\n                    isValid = true;\n                  }\n                } else {\n                  let currSeconds = this.getFormattedDate(\n                    dataValue,\n                    filterToApply[0].format\n                  );\n                  let [hour, min] = values[0]\n                    .split(':')\n                    .map((el: any) => parseInt(el));\n                  let comparedSec = hour * 60 * 60 + min * 60;\n                  if (currSeconds > comparedSec) {\n                    isValid = true;\n                  }\n                }\n                break;\n              case FilterTypes.BETWEEN:\n                if (variableType == DataType.DATE) {\n                  let operand1 = this.getFormattedDate(\n                    dataValue,\n                    filterToApply[0].format\n                  );\n                  let operand2 = new Date(values[0]);\n                  let operand3 = new Date(values[1]);\n                  if (operand1 >= operand2 && operand1 < operand3) {\n                    isValid = true;\n                  }\n                } else {\n                  let currSeconds = this.getFormattedDate(\n                    dataValue,\n                    filterToApply[0].format\n                  );\n                  let [hour, min] = values[0]\n                    .split(':')\n                    .map((el: any) => parseInt(el));\n                  let [endhour, endmin] = values[1]\n                  .split(':')\n                  .map((el: any) => parseInt(el));\n                  let comparedSec = hour * 60 * 60 + min * 60;\n                  let endComparedSec = endhour * 60 * 60 + endmin * 60;\n                  if ( currSeconds >= comparedSec &&\n                    currSeconds < endComparedSec) {\n                    isValid = true;\n                  }\n                }\n                break;\n              case FilterTypes.IN:\n                if (\n                  values.indexOf(dataValue.toString()\n                  ) != -1\n                ) {\n                  isValid = true;\n                }\n                break;\n              case FilterTypes.NOT_IN:\n                if (\n                  \n                  values.indexOf(dataValue.toString()) == -1\n                ) {\n                  isValid = true;\n                }\n                break;\n          }\n        }\n        // if(isValid && filter.customFilter.length > 0){\n        //   isValid = this.applyCustomFilter(d, filter);\n        // }\n        if(isValid){\n          if(colData.hasOwnProperty(col)){\n            colData[col].push(d);\n          }else{\n            colData[col] = [d];\n          }\n        }\n      })\n    })\n    return colData;\n  }\n\n  private async startGraphBuilder(\n    graphId: string,\n    currLevel: number,\n    colToShow: string\n  ) {\n    //Add Custom Slabs in Raw Data\n    let data = await this.addCustomVariable(\n      this.charts[graphId].customVariable,\n      this.charts[graphId].graphData,\n      true,\n      this.charts[graphId].dataFormat,\n      true\n    );\n\n    this.charts[graphId].graphData = lodash.groupBy(\n      data,\n      this.charts[graphId].rows[currLevel]\n    );\n    this.charts[graphId].currLevel = currLevel;\n    // this.charts[graphId].prevLevelData = currLevel == 0 ? [] : [data];\n    this.charts[graphId].colToShow = colToShow;\n\n    //Creating Chart Raw Json\n    let chartOptions: any = this.createChartData(graphId, currLevel);\n\n    //Rendering Chart of GraphId\n    this.highcharts.chart(this.charts[graphId].graphId, chartOptions);\n\n    //Add Action Buttons Over Chart\n    this.addActionBtn(graphId);\n\n    return true;\n  }\n\n  private getPlotOptions(graphId: string, currLevel: number) {\n    let plotOptions: any = {\n      series: {\n        turboThreshold: 1000000,\n        dataLabels: {\n          color: 'black',\n          enabled: true,\n          style: {\n            color: 'black',\n            textShadow: false,\n            textDecoration: 'none',\n          },\n        },\n        label: {\n          style: {\n            color: 'black',\n          },\n        },\n      },\n    };\n\n    //Options for Stack Graph\n    if (\n      this.charts[graphId].graphTypes[currLevel] == GraphTypes.STACKED_BAR ||\n      this.charts[graphId].graphTypes[currLevel] == GraphTypes.STACKED_COLUMN\n    ) {\n      plotOptions.series['stacking'] = 'normal'; //Normal Stacking of y-axis\n    } else if (\n      this.charts[graphId].graphTypes[currLevel] ==\n        GraphTypes.STACKED_BAR_PERCENTAGE ||\n      this.charts[graphId].graphTypes[currLevel] ==\n        GraphTypes.STACKED_COLUMN_PERCENTAGE\n    ) {\n      plotOptions.series['stacking'] = 'percent'; //Stacking of y-axis on basis of percentage\n      //Add Percent Sign after y-axis values\n      plotOptions.series.dataLabels['formatter'] = function () {\n        return this.percentage.toFixed(2) + ' %';\n      };\n    }\n    return plotOptions;\n  }\n\n  private createChartData(graphId: string, currLevel: number) {\n    let _self = this;\n\n    //Getting Plot Options for Graph\n    let plotOptions = this.getPlotOptions(graphId, currLevel);\n\n    return {\n      credits: {\n        text: this.creditTitle,\n        href: this.creditUrl,\n        style: {\n          fontSize: '12px',\n        },\n      },\n      title: null,\n      plotOptions: plotOptions,\n      chart: {\n        events: {\n          //Handle Drilldown Event of Graph\n          drilldown: function (e: any) {\n            if(e.points != false) return\n            let currGraphId = e.point.options.graphId; //GraphId\n            let colId = e.point.colIndex; //ColorIndex of bar\n            //Increasing Graph Drilldown level\n            _self.charts[currGraphId].currLevel += 1;\n            _self.charts[currGraphId].breadCrumb.push(e.point.name);\n            _self.charts[currGraphId].selKeys?.push(e.point.name);\n\n            //Open Last Level Component\n            if (\n              _self.charts[currGraphId].rows[\n                _self.charts[currGraphId].currLevel\n              ] == null\n            ) {\n              let aggName = _self.charts[currGraphId].aggregationFunctions[colId].aggregationFunctions;\n              let tempData = lodash.cloneDeep(_self.charts[currGraphId].graphData[e.point.name]);\n              if(aggName == \"NO FUNCTION\"){\n                tempData = tempData.filter((d : any) => d[_self.charts[currGraphId].columns[colId]] > 0);\n              }\n              _self.dataService.setModalData({\n                colToView: _self.charts[currGraphId].lastLevelColumns,\n                refData: tempData,\n              });\n              let modalOptions = {\n                panelClass: 'dataPopup-modal',\n                backdropClass: 'modal-backdrop',\n              };\n              _self.dialog.open(DataPopupComponent, modalOptions);\n              //Reducing Graph Drilldown Level\n              _self.charts[currGraphId].currLevel -= 1;\n              return;\n            }\n\n            //Storing Previous Snapshot of Data to restore graph on back\n            _self.charts[currGraphId].prevLevelData.push(\n              ([] as any[]).concat(...Object.values(_self.charts[currGraphId].graphData))\n            );\n\n            //Group Data according to next drilldown field\n            _self.charts[currGraphId].graphData = lodash.groupBy(\n              _self.charts[currGraphId].graphData[e.point.name],\n              _self.charts[currGraphId].rows[\n                _self.charts[currGraphId].currLevel\n              ]\n            );\n            let chart: any = this;\n\n            _self.manageBreadCrumb(currGraphId, _self);\n            \n            //Getting drilldown series data\n            let series = _self.getDrillDownData(\n              e.point.name,\n              _self.charts[currGraphId].graphData,\n              currGraphId,\n              colId\n            );\n\n            //Show Loading in Chart\n            chart.showLoading('Loading...');\n            // if (\n            //   _self.charts[currGraphId].graphTypes[0] ==\n            //     GraphTypes.STACKED_BAR_PERCENTAGE ||\n            //   _self.charts[currGraphId].graphTypes[0] ==\n            //     GraphTypes.STACKED_COLUMN_PERCENTAGE\n            // ) {\n            //   plotOptions.series['stacking'] = 'normal';\n            //   plotOptions.series.dataLabels['formatter'] = function () {\n            //     return this.y;\n            //   };\n            //   chart.update({\n            //     plotOptions: plotOptions,\n            //   });\n            // }\n\n            setTimeout(() => {\n              //Hide Loading in chart\n              chart.hideLoading();\n              //Add Drilldown Series Data as Main Series\n              chart.update({\n                plotOptions: plotOptions,\n                xAxis: {\n                  type: 'category',\n                  labels: {\n                    style: {\n                      color: 'red',\n                      textDecoration: 'none',\n                      textOutline: '0px',\n                    },\n                  },\n                  min: 0,\n                  max: 6,\n                  allowDecimals: false,\n                  scrollbar: {\n                    enabled: true,\n                  },\n                },\n                series: series\n              })\n              // chart.addSeriesAsDrilldown(e.point, series);\n            }, 1000);\n          },\n          //Handle DrillUp Event\n          drillup: async function (e: any) {\n            // let currGraphId = e.seriesOptions.graphId; //GraphId\n            // let level = e.seriesOptions.level; //Current Level of Drilldown\n            // let chart: any = this;\n            // _self.charts[currGraphId].currLevel = level;\n\n            // //Restoring Data using previous store data\n            // _self.charts[currGraphId].graphData = await _self.charts[\n            //   currGraphId\n            // ].prevLevelData[level];\n\n            // //Refresh Previous Data List\n            // _self.charts[currGraphId].prevLevelData.splice(level, 1);\n            // if (\n            //   level == 0 &&\n            //   (_self.charts[graphId].graphTypes[0] ==\n            //     GraphTypes.STACKED_BAR_PERCENTAGE ||\n            //     _self.charts[graphId].graphTypes[0] ==\n            //       GraphTypes.STACKED_COLUMN_PERCENTAGE)\n            // ) {\n            //   plotOptions.series['stacking'] = 'percent'; //Stacking of y-axis on basis of percentage\n            //   //Add Percent Sign after y-axis values\n            //   plotOptions.series.dataLabels['formatter'] = function () {\n            //     return this.percentage.toFixed(2) + ' %';\n            //   };\n\n            //   chart.update({\n            //     plotOptions: plotOptions,\n            //   });\n            // }\n          },\n        },\n      },\n      //Configuring X-axis\n      xAxis: {\n        type: 'category',\n        labels: {\n          style: {\n            color: 'red',\n            textDecoration: 'none',\n            textOutline: '0px',\n          },\n        },\n        min: 0,\n        max:\n          Object.keys(this.charts[graphId].graphData).length <= 6\n            ? Object.keys(this.charts[graphId].graphData).length - 1\n            : 6,\n        allowDecimals: false,\n        scrollbar: {\n          enabled: true,\n        },\n      },\n      //Configuring Y-axis\n      yAxis: lodash.map(this.charts[graphId].columns, (y: any) => {\n        return {\n          opposite: true,\n          title: {\n            text: null, // Hiding vertical labels over y-axis\n          },\n        };\n      }),\n      //Getting Main Series Data\n      series: this.getDrillDownData(\n        null,\n        this.charts[graphId].graphData,\n        this.charts[graphId].graphId\n      ),\n    };\n  }\n\n  private manageBreadCrumb(graphId: string, _self: any) {\n    const div = document.getElementById(\"graph-options-\" + graphId);\n    document.getElementById(\"breadcrumb-\" + graphId)?.remove();\n    const breadCrumb = document.createElement(\"div\");\n    if(_self.charts[graphId].breadCrumb.length == 1){\n      return;\n    }\n\n    breadCrumb.setAttribute('style', this.breadcrumbStyles);\n    breadCrumb.setAttribute('id', \"breadcrumb-\" + graphId);\n    // homeIcon.setAttribute('id', 'home-label-' + graphId);\n    // homeIcon.setAttribute('class', 'fa fa-home');\n    _self.charts[graphId].breadCrumb.forEach((breadcrumb: any, index: any) => {\n      const para = document.createElement(\"p\");\n      const span = document.createElement(\"span\");\n      span.setAttribute(\"style\", \"text-decoration: underline; cursor: pointer;\")\n      span.setAttribute(\"id\", breadcrumb);\n      span.append(breadcrumb);\n      para.appendChild(span);\n      para.setAttribute(\"style\", \"margin-bottom: 0px;\")\n      if (index != this.charts[graphId].breadCrumb.length - 1) {\n        para.append(\" > \");\n        span.addEventListener(\"click\", (event :any) => {\n          if(event.target.id == \"Home\"){\n            _this.charts[graphId].graphData = _this.charts[graphId].prevLevelData[0];\n            _this.buildGraph({\n              ..._this.charts[graphId],\n              breadCrumb: ['Home'],\n              currLevel: 0,\n              prevLevelData: [],\n              order: 0,\n              selKeys: [],\n              colToShow: '',\n            } as GraphData)\n          }else{\n            const index = _this.charts[graphId].breadCrumb.findIndex((el: any) => el == event.target.id);\n            if(index > 0){\n              // this.buildGraph()\n              //Restoring Data using previous store data\n              _this.charts[graphId].currLevel = index;\n              _this.charts[graphId].graphData = _this.charts[graphId].prevLevelData[index];\n              \n              //Refresh Previous Data List\n              _this.charts[graphId].prevLevelData = _this.charts[graphId].prevLevelData.slice(0, index);\n  \n              _this.charts[graphId].breadCrumb = _this.charts[graphId].breadCrumb.slice(0, index + 1);\n              \n              _this.charts[graphId].selKeys = _this.charts[graphId].selKeys?.slice(0, index);\n              \n              _this.buildGraph({\n                ..._this.charts[graphId],\n              } as GraphData)\n            }\n          }\n        })\n      }\n      breadCrumb.appendChild(para);\n      let _this = this;\n    });\n    div!.appendChild(breadCrumb);\n  }\n\n  private applyCustomFilter(d: any, filter: Filters) {\n    let isValid = filter.customFilter.length == 0;\n    if (filter.customFilter && filter.customFilter.length > 0) {\n      for (const element of filter.customFilter) {\n        isValid = false;\n        const _filter : CustomFilter = element\n        switch (_filter.customFilterType) {\n          case CustomFilterTypes.SINGLE_EQUATION:\n            if (\n              this.getEquationResult(\n                d[_filter.customFiltervar1],\n                _filter.customFilterVar1Value,\n                _filter.symbol1,\n                _filter.filterType1,\n                _filter.filterFormat1\n              )\n            ) {\n              isValid = true;\n            }\n            break;\n          case CustomFilterTypes.A_OR_B:\n            if (\n              (this.getEquationResult(\n                d[_filter.customFiltervar1],\n                _filter.customFilterVar1Value,\n                _filter.symbol1,\n                _filter.filterType1,\n                _filter.filterFormat1\n              ) ||\n              this.getEquationResult(\n                d[_filter.customFiltervar2],\n                _filter.customFilterVar2Value,\n                _filter.symbol2,\n                _filter.filterType2,\n                _filter.filterFormat2\n              ))\n            ) {\n              isValid = true;\n            }\n            break;\n          case CustomFilterTypes.A_AND_B:\n            if (\n              (this.getEquationResult(\n                d[_filter.customFiltervar1],\n                _filter.customFilterVar1Value,\n                _filter.symbol1,\n                _filter.filterType1,\n                _filter.filterFormat1\n              ) &&\n              this.getEquationResult(\n                d[_filter.customFiltervar2],\n                _filter.customFilterVar2Value,\n                _filter.symbol2,\n                _filter.filterType2,\n                _filter.filterFormat2\n              ))\n            ) {\n              isValid = true;\n            }\n            break;\n          case CustomFilterTypes.A_OR_B_OR_C:\n            if (\n              (this.getEquationResult(\n                d[_filter.customFiltervar1],\n                _filter.customFilterVar1Value,\n                _filter.symbol1,\n                _filter.filterType1,\n                _filter.filterFormat1\n              ) ||\n              this.getEquationResult(\n                d[_filter.customFiltervar2],\n                _filter.customFilterVar2Value,\n                _filter.symbol2,\n                _filter.filterType2,\n                _filter.filterFormat2\n              ) ||\n              this.getEquationResult(\n                d[_filter.customFiltervar3],\n                _filter.customFilterVar3Value,\n                _filter.symbol3,\n                _filter.filterType3,\n                _filter.filterFormat3\n              ))\n            ) {\n              isValid = true;\n            }\n            break;\n          case CustomFilterTypes.A_AND_B_AND_C:\n            if (\n            (this.getEquationResult(\n                d[_filter.customFiltervar1],\n                _filter.customFilterVar1Value,\n                _filter.symbol1,\n                _filter.filterType1,\n                _filter.filterFormat1\n              ) &&\n              this.getEquationResult(\n                d[_filter.customFiltervar2],\n                _filter.customFilterVar2Value,\n                _filter.symbol2,\n                _filter.filterType2,\n                _filter.filterFormat2\n              ) &&\n              this.getEquationResult(\n                d[_filter.customFiltervar3],\n                _filter.customFilterVar3Value,\n                _filter.symbol3,\n                _filter.filterType3,\n                _filter.filterFormat3\n              ))\n            ) {\n              isValid = true;\n            }\n            break;\n          case CustomFilterTypes.A_OR_B_AND_C:\n            if (\n              (this.getEquationResult(\n                d[_filter.customFiltervar1],\n                _filter.customFilterVar1Value,\n                _filter.symbol1,\n                _filter.filterType1,\n                _filter.filterFormat1\n              ) ||\n              (this.getEquationResult(\n                d[_filter.customFiltervar2],\n                _filter.customFilterVar2Value,\n                _filter.symbol2,\n                _filter.filterType2,\n                _filter.filterFormat2\n              ) &&\n                this.getEquationResult(\n                  d[_filter.customFiltervar3],\n                  _filter.customFilterVar3Value,\n                  _filter.symbol3,\n                  _filter.filterType3,\n                  _filter.filterFormat3\n                )))\n            ) {\n              isValid = true;\n            }\n            break;\n          case CustomFilterTypes.A_AND_B_OR_C:\n            if (\n              (this.getEquationResult(\n                d[_filter.customFiltervar1],\n                _filter.customFilterVar1Value,\n                _filter.symbol1,\n                _filter.filterType1,\n                _filter.filterFormat1\n              ) &&\n              (this.getEquationResult(\n                d[_filter.customFiltervar2],\n                _filter.customFilterVar2Value,\n                _filter.symbol2,\n                _filter.filterType2,\n                _filter.filterFormat2\n              ) ||\n                this.getEquationResult(\n                  d[_filter.customFiltervar3],\n                  _filter.customFilterVar3Value,\n                  _filter.symbol3,\n                  _filter.filterType3,\n                  _filter.filterFormat3\n                )))\n            ) {\n              isValid = true;\n            }\n            break;\n        }\n  \n        if(!isValid) break;\n      }\n    }\n    return isValid;\n  }\n\n  private getFormattedDate(\n    inputStr: any,\n    format: any = DateFormat.DD_MM_YYYY_HH_mm_ss\n  ) {\n    if (\n      [\n        DateFormat.DD_MM_YYYY,\n        DateFormat.MM_DD_YYYY,\n        DateFormat.DD_s_MM_s_YYYY,\n        DateFormat.MM_s_DD_s_YYYY,\n        DateFormat.YYYY_s_MM_s_DD,\n        DateFormat.YYYY_MM_DD,\n      ].indexOf(format) != -1\n    ) {\n      let tempArr = inputStr.split(' ');\n      let dateStr = tempArr[0];\n      let [day, month, year] = dateStr.split('-');\n      return new Date(+year, month - 1, +day);\n    } else if (format == TimeFormat.HH_mm_ss) {\n      let [hour, minute, second] = inputStr\n        .split(':')\n        .map((el: any) => parseInt(el));\n      return hour * 60 * 60 + minute * 60 + second;\n    } else {\n      let tempArr = inputStr.split(' ');\n      let dateStr = tempArr[0];\n      let time = tempArr[1];\n      let [day, month, year] = dateStr.split('-');\n      let [hour, minute] = time.split(':');\n      let second = 0;\n      return new Date(+year, month - 1, +day, +hour, +minute, +second);\n    }\n  }\n\n  private getEquationResult(\n    variable1: string | number,\n    variable2: any,\n    operator: FilterTypes,\n    type: DataType,\n    format: any\n  ) {\n    switch (operator) {\n      case FilterTypes.EQUAL:\n        if (variable1 == variable2[0]) {\n          return true;\n        }\n        break;\n      case FilterTypes.GREATER_THAN:\n        if (variable1 > variable2[0]) {\n          return true;\n        }\n        break;\n      case FilterTypes.LESS_THAN:\n        if (variable1 < variable2[0]) {\n          return true;\n        }\n        break;\n      case FilterTypes.NOT_EQUAL:\n        if (variable1 != variable2[0]) {\n          return true;\n        }\n        break;\n      case FilterTypes.GREATER_THAN_EQUAL:\n        if (variable1 >= variable2[0]) {\n          return true;\n        }\n        break;\n      case FilterTypes.LESS_THAN_EQUAL:\n        if (variable1 <= variable2[0]) {\n          return true;\n        }\n        break;\n      case FilterTypes.BETWEEN_RANGE:\n        if (variable1 >= variable2[0] && variable1 < variable2[1]) {\n          return true;\n        }\n        break;\n      case FilterTypes.IN:\n        if (variable2.indexOf(variable1.toString()) != -1) {\n          return true;\n        }\n        break;\n      case FilterTypes.NOT_IN:\n        if (variable2.indexOf(variable1.toString()) == -1) {\n          return true;\n        }\n        break;\n      case FilterTypes.BEFORE:\n        if (type == DataType.DATE) {\n          //Date Type variable\n          let operand1 = this.getFormattedDate(variable1, format);\n          let operand2 = new Date(variable2);\n          if (operand1 < operand2) {\n            return true;\n          }\n        } else {\n          //Time Type variable\n          let currSeconds = this.getFormattedDate(variable1, format);\n          let [hour, min] = variable2.split(':').map((el: any) => parseInt(el));\n          let comparedSec = hour * 60 * 60 + min * 60;\n          if (currSeconds < comparedSec) {\n            return true;\n          }\n        }\n        break;\n      case FilterTypes.AFTER:\n        if (type == DataType.DATE) {\n          //Date Type variable\n          let operand1 = this.getFormattedDate(variable1, format);\n          let operand2 = new Date(variable2);\n          if (operand1 > operand2) {\n            return true;\n          }\n        } else {\n          //Time Type variable\n          let currSeconds = this.getFormattedDate(variable1, format);\n          let [hour, min] = variable2.split(':').map((el: any) => parseInt(el));\n          let comparedSec = hour * 60 * 60 + min * 60;\n          if (currSeconds > comparedSec) {\n            return true;\n          }\n        }\n        break;\n      case FilterTypes.BETWEEN:\n        if (type == DataType.DATE) {\n          //Date Type variable\n          let operand1 = this.getFormattedDate(variable1, format);\n          let operand2 = new Date(variable2[0]);\n          let operand3 = new Date(variable2[1]);\n          if (operand1 >= operand2 && operand1 < operand3) {\n            return true;\n          }\n        } else {\n          //Time Type variable\n          let currSeconds = this.getFormattedDate(variable1, format);\n          let [hour, min] = variable2[0]\n            .split(':')\n            .map((el: any) => parseInt(el));\n          let [endhour, endmin] = variable2[1]\n            .split(':')\n            .map((el: any) => parseInt(el));\n          let comparedSec = hour * 60 * 60 + min * 60;\n          let endComparedSec = endhour * 60 * 60 + endmin * 60;\n          if (currSeconds >= comparedSec && currSeconds < endComparedSec) {\n            return true;\n          }\n        }\n        break;\n    }\n    return false;\n  }\n\n  private sortGraph(e: any) {\n    const tempArr = e.target.id.split('@');\n    const graphId = tempArr[tempArr.length - 1];\n    if (this.charts[graphId].order < 1) {\n      this.charts[graphId].order += 1;\n    } else {\n      this.charts[graphId].order = -1;\n    }\n    if (this.charts[graphId].currLevel != 0) {\n      this.charts[graphId].graphData = this.charts[graphId].prevLevelData[0];\n    }\n    this.charts[graphId].currLevel = 0;\n    let chartOptions: any = this.createChartData(graphId, 0);\n    this.highcharts.chart(graphId, chartOptions);\n    this.addActionBtn(graphId);\n  }\n\n  private downloadGraphData(e: any, data: any, lastLevelCol: any){\n    this.dataService.setModalData({\n      colToView: lastLevelCol,\n      refData: data\n    });\n    let modalOptions = {\n      panelClass: 'dataPopup-modal',\n      backdropClass: 'modal-backdrop',\n    };\n    this.dialog.open(DataPopupComponent, modalOptions);\n  }\n\n  private addActionBtn(graphId: string) {\n    let _self = this;\n    const div = document.createElement('div');\n    div.setAttribute('style', this.divStyles);\n    div.setAttribute(\"id\", \"graph-options-\" + graphId);\n    const sortIcon = document.createElement('i');\n    sortIcon.setAttribute('id', 'sort@' + graphId);\n    sortIcon.setAttribute('style', this.iconStyles);\n    if (this.charts[graphId].order == 1) {\n      sortIcon.setAttribute('class', 'fa fa-sort-amount-desc');\n    } else if (this.charts[graphId].order == -1) {\n      sortIcon.setAttribute('class', 'fa fa-sort-amount-asc');\n    } else {\n      sortIcon.setAttribute('class', 'fa fa-sort');\n    }\n    const downloadIcon = document.createElement(\"i\");\n    downloadIcon.setAttribute('id', 'download@' + graphId);\n    downloadIcon.setAttribute('style', this.iconStyles);\n    downloadIcon.setAttribute('class', 'fa fa-download')\n\n    div.appendChild(downloadIcon);\n    div.appendChild(sortIcon);\n    // if (this.charts[graphId].rows[0] == '***LABEL***') {\n    //   const homeIcon = document.createElement('icon');\n    //   homeIcon.setAttribute('style', this.iconStyles);\n    //   homeIcon.setAttribute('id', 'home-label-' + graphId);\n    //   homeIcon.setAttribute('class', 'fa fa-home');\n    //   div.appendChild(homeIcon);\n    //   setTimeout(() => {\n    //     document\n    //       .querySelector('#home-label-' + graphId)!\n    //       .addEventListener('click', function () {\n    //         _self.build(\n    //           WidgetType.GRAPH,\n    //           Object.assign(Object.assign({}, _self.charts[graphId]), {\n    //             graphData: _self.charts[graphId].prevLevelData[0],\n    //           })\n    //         );\n    //       });\n    //   }, 500);\n    // }\n    document.querySelector('#' + graphId)!.appendChild(div);\n    this.manageBreadCrumb(graphId, this);\n    sortIcon.addEventListener('click', function (e) {\n      _self.sortGraph(e);\n    });\n    downloadIcon.addEventListener('click', function (e: any) {\n      const tempArr = e.target.id.split('@');\n      const graphId = tempArr[tempArr.length - 1];\n      _self.downloadGraphData(e,  Object.values(_self.charts[graphId].graphData).flat(),_self.charts[graphId].lastLevelColumns);\n    });\n  }\n\n  private applyAggregation(\n    allData: any,\n    yIndex: number,\n    aggreagations: AggregationFunction[]\n  ) {\n    let result = 0;\n    switch (aggreagations[yIndex].aggregationFunctions) {\n      case 'SUM' /* SUM */:\n        result = lodash.sum(allData.map(Number));\n        break;\n      case 'COUNT_UNIQUE' /* COUNT_UNIQUE */:\n        result = lodash.uniq(allData).length;\n        break;\n      case 'COUNT' /* COUNT */:\n        result = allData.length;\n        break;\n      case 'MAXIMUM' /* MAXIMUM */:\n        result = lodash.max(allData.map(Number)) ?? 0;\n        break;\n      case 'MINIMUM' /* MINIMUM */:\n        result = lodash.min(allData.map(Number)) ?? 0;\n        break;\n      case 'AVERAGE' /* AVERAGE */:\n        result = lodash.mean(allData.map(Number));\n        break;\n    }\n    return result;\n  }\n\n  private applyYfilter(d: any, yIndex: number, graphId: string) {\n    if (this.charts[graphId].filter.yAxis.length > 0) {\n      const filter = this.charts[graphId].filter.yAxis.filter(\n        (y) => this.charts[graphId].columns[yIndex] == y.variableName\n      );\n      if (filter.length > 0) {\n        switch (filter[0].filterType) {\n          case FilterTypes.GREATER_THAN:\n            if (d.y < filter[0].values[0]) {\n              d = null;\n            }\n            break;\n          case '<':\n            if (d.y > filter[0].values[0]) {\n              d = null;\n            }\n            break;\n          case '<=':\n            if (!(d.y <= filter[0].values[0])) {\n              d = null;\n            }\n            break;\n          case '>=':\n            if (!(d.y >= filter[0].values[0])) {\n              d = null;\n            }\n            break;\n          case '==':\n            if (d.y != filter[0].values[0]) {\n              d = null;\n            }\n            break;\n          case '!=':\n            if (d.y == filter[0].values[0]) {\n              d = null;\n            }\n            break;\n          case 'bet':\n            if (!(d.y >= filter[0].values[0] && d.y < filter[0].values[1])) {\n              d = null;\n            }\n            break;\n        }\n      }\n    }\n    return d;\n  }\n\n  private applyXfilter(\n    el: any,\n    filters: Filters,\n    rows: string[],\n    columns: string[],\n    currLevel: number\n  ) {\n    if (filters.xAxis.length > 0) {\n      let isValid = true;\n      const filter = filters.xAxis.filter(\n        (f) => f.variableName == rows[currLevel]\n      );\n      if (filter.length > 0) {\n        switch (filter[0].filterType) {\n          case FilterTypes.IN:\n            if (filter[0].values.indexOf(el.key.toString()) == -1) {\n              isValid = false;\n            }\n            break;\n          case FilterTypes.NOT_IN:\n            if (filter[0].values.indexOf(el.key.toString()) != -1) {\n              isValid = false;\n            }\n            break;\n          case FilterTypes.GREATER_THAN:\n            if (el.key <= filter[0].values[0]) {\n              isValid = false;\n            }\n            break;\n          case FilterTypes.LESS_THAN:\n            if (el.key >= filter[0].values[0]) {\n              isValid = false;\n            }\n            break;\n          case FilterTypes.LESS_THAN_EQUAL:\n            if (el.key > filter[0].values[0]) {\n              isValid = false;\n            }\n            break;\n          case FilterTypes.GREATER_THAN_EQUAL:\n            if (el.key < filter[0].values[0]) {\n              isValid = false;\n            }\n            break;\n          case FilterTypes.EQUAL:\n            if (el.key != filter[0].values[0]) {\n              isValid = false;\n            }\n            break;\n          case FilterTypes.NOT_EQUAL:\n            if (el.key == filter[0].values[0]) {\n              isValid = false;\n            }\n            break;\n          case FilterTypes.BETWEEN_RANGE:\n            if (el.key < filter[0].values[0] && el.key >= filter[0].values[1]) {\n              isValid = false;\n            }\n            break;\n          case FilterTypes.BEFORE:\n            if (filter[0].variableType == DataType.DATE) {\n              let operand1 = this.getFormattedDate(el.key, filter[0].format);\n              let operand2 = new Date(filter[0].values[0]);\n              if (operand1 > operand2) {\n                isValid = false;\n              }\n            } else {\n              let currSeconds = this.getFormattedDate(el.key, filter[0].format);\n              let [hour, min] = filter[0].values[0]\n                .split(':')\n                .map((el: any) => parseInt(el));\n              let comparedSec = hour * 60 * 60 + min * 60;\n              if (currSeconds > comparedSec) {\n                isValid = false;\n              }\n            }\n            break;\n          case FilterTypes.AFTER:\n            if (filter[0].variableType == DataType.DATE) {\n              let operand1 = this.getFormattedDate(el.key, filter[0].format);\n              let operand2 = new Date(filter[0].values[0]);\n              if (operand1 < operand2) {\n                isValid = false;\n              }\n            } else {\n              let currSeconds = this.getFormattedDate(el.key, filter[0].format);\n              let [hour, min] = filter[0].values[0]\n                .split(':')\n                .map((el: any) => parseInt(el));\n              let comparedSec = hour * 60 * 60 + min * 60;\n              if (currSeconds < comparedSec) {\n                isValid = false;\n              }\n            }\n            break;\n          case FilterTypes.BETWEEN:\n            if (filter[0].variableType == DataType.DATE) {\n              let operand1 = this.getFormattedDate(el.key, filter[0].format);\n              let operand2 = new Date(filter[0].values[0]);\n              let operand3 = new Date(filter[0].values[1]);\n              if (operand1 < operand2 && operand1 >= operand3) {\n                isValid = false;\n              }\n            } else {\n              let currSeconds = this.getFormattedDate(el.key, filter[0].format);\n              let [hour, min] = filter[0].values[0]\n                .split(':')\n                .map((el: any) => parseInt(el));\n              let [endhour, endmin] = filter[0].values[1]\n                .split(':')\n                .map((el: any) => parseInt(el));\n              let comparedSec = hour * 60 * 60 + min * 60;\n              let endComparedSec = endhour * 60 * 60 + endmin * 60;\n              if (currSeconds < comparedSec && currSeconds >= endComparedSec) {\n                isValid = false;\n              }\n            }\n            break;\n        }\n      }\n\n      return isValid;\n    } else {\n      return true\n    }\n  }\n\n  private getDrillDownData(\n    selKey: any,\n    data: any,\n    graphId: any,\n    colId: any = null\n  ) {\n    let graphSeries: any = []; //Series Object\n    lodash.forEach(this.charts[graphId].columns, (y: any, yIndex: any) => {\n      if (\n        (this.charts[graphId].colToShow == '' ||\n          y == this.charts[graphId].colToShow)\n      ) {\n        const func =\n          this.charts[graphId].aggregationFunctions[yIndex]\n            .aggregationFunctions;\n        const seriesData: any = []; //data object for series\n        lodash.forEach(Object.keys(data), (el: any) => {\n          //Filter According to x-axis\n          let validKey = this.applyXfilter(\n              {\n                key: el,\n                data: data[el],\n              },\n              this.charts[graphId].filter,\n              this.charts[graphId].rows,\n              this.charts[graphId].columns,\n              this.charts[graphId].currLevel\n            );\n          data[el] = this.applyDataFilter(data[el],this.charts[graphId].filter,this.charts[graphId].columns, graphId)[y];\n          if(validKey && data[el] != null){\n\n            //Add Custom Variable\n            data[el] = this.addCustomVariable(\n              this.charts[graphId].customVariable,\n              data[el],\n              false,\n              this.charts[graphId].dataFormat,\n              false\n            );\n            //Getting Data Array to aggregate\n            let variableType = this.getVariableTypeByHeader(y, this.charts[graphId].dataFormat);\n            let type = \"string\";\n            if(variableType == null){\n              type = this.getVariableData(data[el][0][y])[0];\n            }else{\n              type = variableType.type;\n            }\n  \n            let dataToTraverse = lodash.map(data[el], (elData) => {\n              return type != \"number\" ? elData[y] : parseFloat(elData[y]);\n            });\n            dataToTraverse = lodash.without(lodash.without(dataToTraverse, undefined), '');\n            let genData = {\n              name: el,\n              dataLabels: {\n                shadow: false,\n                style: {\n                  color: 'black',\n                  textDecoration: 'none',\n                  textShadow: false,\n  \n                  textOutline: 0,\n                },\n                className: 'graph-data-label',\n              },\n              drilldown: true,\n              graphId: graphId,\n              colIndex: yIndex,\n              level: this.charts[graphId].currLevel,\n              y: parseFloat(\n                // new Decimal(\n                  this.charts[graphId].aggregationFunctions[yIndex]\n                    .aggregationFunctions == AggregationFunctionsType.NO_FUNCTION\n                    ? new BigNumber(\n                        dataToTraverse.length == 0\n                          ? 0\n                          : lodash.max(dataToTraverse)\n                      ).toString() //Getting Max Value of Data Arr\n                    : this.applyAggregation(\n                        dataToTraverse,\n                        yIndex,\n                        this.charts[graphId].aggregationFunctions\n                      // ) // Getting Aggregated Value\n                ).toPrecision(2)\n              ),\n            };\n            //Applying After Aggregation Filter\n            let afterYresult = this.applyYfilter(genData, yIndex, graphId);\n            if (afterYresult != null) {\n              seriesData.push(afterYresult);\n            }\n          }\n        });\n         graphSeries.push({\n          name:\n            selKey == null || this.charts[graphId].columns.length > 1\n              ? func != 'NO FUNCTION'\n                ? func + '(' + y + ')'\n                : y\n              : selKey,\n          color: this.charts[graphId].colors[yIndex],\n          graphId: graphId,\n          colIndex: yIndex,\n          level: this.charts[graphId].currLevel,\n          type:\n            this.charts[graphId].graphTypes[yIndex] == 'stacked-bar' ||\n            this.charts[graphId].graphTypes[yIndex] == 'stacked-bar%'\n              ? 'bar'\n              : this.charts[graphId].graphTypes[yIndex] == 'stacked-column' ||\n                this.charts[graphId].graphTypes[yIndex] == 'stacked-column%'\n              ? 'column'\n              : this.charts[graphId].graphTypes[yIndex],\n          data: seriesData,\n        });\n      }\n    });\n    //Apply Sorting over series\n    return this.applySort(graphId, graphSeries);\n  }\n\n  //To be checked\n  private applySort(graphId: string, data: any) {\n    if (data == null) {\n      return [];\n    }\n    if (this.charts[graphId].order == 1) {\n      //Sort Data in descending order\n      return lodash.map(data, (el) => {\n        el.data = el.data.sort((d1: any, d2: any) => {\n          if (d1.y > d2.y) {\n            return -1;\n          }\n          return 1;\n        });\n        return el;\n      });\n    } else if (this.charts[graphId].order == -1) {\n      //Sort Data in ascending order\n      return lodash.map(data, (el) => {\n        el.data = el.data.sort((d1: any, d2: any) => {\n          if (d1.y > d2.y) {\n            return 1;\n          }\n          return -1;\n        });\n        return el;\n      });\n    } else {\n      return data.map((el: any) => {\n        if (el.data.length > 0) {\n          let type = this.getVariableData(\n            el.data[0][this.charts[graphId].rows[0]]\n          );\n          if (type[0] == 'string' || type[0] == 'number') {\n            el.data = el.data.sort((d1: any, d2: any) => {\n              if (d1.name > d2.name) {\n                return 1;\n              } else {\n                return -1;\n              }\n            });\n          } else {\n            el.data = el.data.sort((d1: any, d2: any) => {\n              if (new Date(d1.name).getTime() > new Date(d2.name).getTime()) {\n                return 1;\n              } else {\n                return -1;\n              }\n            });\n          }\n        }\n        return el;\n      });\n    }\n  }\n\n  private getVariableData(input: any) {\n    if (this.validateTime(input)) {\n      let type = DataType.TIME;\n      return [type];\n    } else if (this.checkDate(input)) {\n      let type = DataType.DATE;\n      return [type];\n    } else if (this.validateNumber(input)) {\n      let type = DataType.NUMBER;\n      return [type];\n    } else {\n      let type = DataType.STRING;\n      return [type];\n    }\n  }\n\n  private getVariableTypeByHeader(header: any, format: any) {\n    let formatExist = format.filter(\n      (format: any) => format.name.toLowerCase() == header.toLowerCase()\n    );\n    if (formatExist.length > 0) {\n      return {\n        type: formatExist[0].type,\n        format: formatExist[0].format,\n      };\n    } else {\n      return {\n        type: DataType.STRING,\n        format: '',\n      };\n    }\n  }\n\n  private validateTime(input: any) {\n    let pattern1 = /^(1[0-2]|0?[1-9]):([0-5]?[0-9]):([0-5]?[0-9]) (●?[AP]M)?$/;\n    let pattern2 = /^(1[0-2]|0?[1-9]):([0-5]?[0-9]):([0-5]?[0-9]) (●?[ap]m)?$/;\n    let pattern3 = /^(1[0-2]|0?[1-9]):([0-5]?[0-9]) (●?[AP]M)?$/;\n    let pattern4 = /^(1[0-2]|0?[1-9]):([0-5]?[0-9]) (●?[ap]m)?$/;\n    let pattern5 = /^(2[0-3]|[01]?[0-9]):([0-5]?[0-9]):([0-5]?[0-9])$/;\n    let pattern6 = /^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$/;\n\n    return (\n      pattern1.test(input) ||\n      pattern2.test(input) ||\n      pattern3.test(input) ||\n      pattern4.test(input) ||\n      pattern5.test(input) ||\n      pattern6.test(input)\n    );\n  }\n\n  private validateNumber(e: any) {\n    const pattern2 = /^[-+]?[0-9]+\\.[0-9]+$/;\n    const pattern = /^[-+]?[0-9]+$/;\n\n    return pattern.test(e) || pattern2.test(e);\n  }\n\n  private checkDate(input: any) {\n    const pattern =\n      /^([0-2]\\d|[3][0-1])\\-([0]\\d|[1][0-2])\\-([2][01]|[1][6-9])\\d{2}(\\s([0-1]\\d|[2][0-3])(\\:[0-5]\\d){1,2})?$/;\n    return pattern.test(input);\n  }\n\n  private addCustomVariable(\n    customVariable: DerivedVariable[],\n    allData: any,\n    addSlab: boolean = false,\n    dataFormat: DataFormat[],\n    withoutAgg: Boolean\n  ) {\n    let resultantData = [...allData];\n    if (!addSlab) {\n      customVariable = customVariable.filter((variable) => !variable.is_slab);\n    }\n    lodash.forEach(customVariable, (variable, index) => {\n        if (variable.is_filter) {\n          //Check validity over all filters\n          lodash.forEach(variable.filters, (filter: DerivedVariableFilter) => {\n            let residingData: any = []; //Data where filter is not applicable\n            let filteredData: any = [];\n            filteredData = [...resultantData]; //Data where filter is applicable\n            let dataToTraverse: any = null;\n            if(filter.isCustomValue || !withoutAgg){\n              lodash.forEach(\n                filter.conditions,\n                (condition: DerivedVariableFilterCondition, i) => {\n                  let variableInfo : any = null;\n                  let tempResidingList = [];\n                  switch (condition.operator) {\n                    case FilterTypes.IN:\n                      [filteredData, tempResidingList] = lodash.reduce(\n                        lodash.cloneDeep(filteredData),\n                        (result: any, elData) => {\n                          if (!Object.keys(elData).includes(variable.name)) {\n                            elData[variable.name] = 0;\n                          }\n                          result[\n                            elData[condition.variable.name] != null && condition.comparativeVariables.includes(\n                              elData[condition.variable.name].toString()\n                            )\n                              ? 0\n                              : 1\n                          ].push(elData);\n                          return result;\n                        },\n                        [[], []]\n                      );\n                      break;\n                    case FilterTypes.NOT_IN:\n                      [filteredData, tempResidingList] = lodash.reduce(\n                        filteredData,\n                        (result: any, elData) => {\n                          if (!Object.keys(elData).includes(variable.name)) {\n                            elData[variable.name] = 0;\n                          }\n                          result[\n                            elData[condition.variable.name] != null && !condition.comparativeVariables.includes(\n                              elData[condition.variable.name].toString()\n                            )\n                              ? 0\n                              : 1\n                          ].push(elData);\n                          return result;\n                        },\n                        [[], []]\n                      );\n                      break;\n                    case FilterTypes.LESS_THAN:\n                      [filteredData, tempResidingList] = lodash.reduce(\n                        filteredData,\n                        (result: any, elData) => {\n                          if (!Object.keys(elData).includes(variable.name)) {\n                            elData[variable.name] = 0;\n                          }\n                          result[\n                            elData[condition.variable.name] != null && elData[condition.variable.name] <\n                            condition.comparativeVariables[0]\n                              ? 0\n                              : 1\n                          ].push(elData);\n                          return result;\n                        },\n                        [[], []]\n                      );\n                      break;\n                    case FilterTypes.GREATER_THAN:\n                      [filteredData, tempResidingList] = lodash.reduce(\n                        filteredData,\n                        (result: any, elData) => {\n                          if (!Object.keys(elData).includes(variable.name)) {\n                            elData[variable.name] = 0;\n                          }\n                          result[\n                            elData[condition.variable.name] != null && elData[condition.variable.name] >\n                            condition.comparativeVariables[0]\n                              ? 0\n                              : 1\n                          ].push(elData);\n                          return result;\n                        },\n                        [[], []]\n                      );\n                      break;\n                    case FilterTypes.LESS_THAN_EQUAL:\n                      [filteredData, tempResidingList] = lodash.reduce(\n                        filteredData,\n                        (result: any, elData) => {\n                          if (!Object.keys(elData).includes(variable.name)) {\n                            elData[variable.name] = 0;\n                          }\n                          result[\n                            elData[condition.variable.name] != null && elData[condition.variable.name] <=\n                            condition.comparativeVariables[0]\n                              ? 0\n                              : 1\n                          ].push(elData);\n                          return result;\n                        },\n                        [[], []]\n                      );\n                      break;\n                    case FilterTypes.GREATER_THAN_EQUAL:\n                      [filteredData, tempResidingList] = lodash.reduce(\n                        filteredData,\n                        (result: any, elData) => {\n                          if (!Object.keys(elData).includes(variable.name)) {\n                            elData[variable.name] = 0;\n                          }\n                          result[\n                            elData[condition.variable.name] != null && elData[condition.variable.name] >=\n                            condition.comparativeVariables[0]\n                              ? 0\n                              : 1\n                          ].push(elData);\n                          return result;\n                        },\n                        [[], []]\n                      );\n                      break;\n                    case FilterTypes.EQUAL:\n                      [filteredData, tempResidingList] = lodash.reduce(\n                        filteredData,\n                        (result: any, elData) => {\n                          if (!Object.keys(elData).includes(variable.name)) {\n                            elData[variable.name] = 0;\n                          }\n                          result[\n                            elData[condition.variable.name] != null && elData[condition.variable.name] ==\n                            condition.comparativeVariables[0]\n                              ? 0\n                              : 1\n                          ].push(elData);\n                          return result;\n                        },\n                        [[], []]\n                      );\n                      break;\n                    case FilterTypes.BETWEEN_RANGE:\n                      [filteredData, tempResidingList] = lodash.reduce(\n                        filteredData,\n                        (result: any, elData) => {\n                          if (!Object.keys(elData).includes(variable.name)) {\n                            elData[variable.name] = 0;\n                          }\n                          result[\n                            elData[condition.variable.name] != null && elData[condition.variable.name] >=\n                              condition.comparativeVariables[0] &&\n                            elData[condition.variable.name] <\n                              condition.comparativeVariables[1]\n                              ? 0\n                              : 1\n                          ].push(elData);\n                          return result;\n                        },\n                        [[], []]\n                      );\n                      break;\n                    case FilterTypes.NOT_EQUAL:\n                      [filteredData, tempResidingList] = lodash.reduce(\n                        filteredData,\n                        (result: any, elData) => {\n                          if (!Object.keys(elData).includes(variable.name)) {\n                            elData[variable.name] = 0;\n                          }\n                          result[\n                            elData[condition.variable.name] != null && elData[condition.variable.name] !=\n                            condition.comparativeVariables[0]\n                              ? 0\n                              : 1\n                          ].push(elData);\n                          return result;\n                        },\n                        [[], []]\n                      );\n                      break;\n                    case FilterTypes.BEFORE:\n                      variableInfo = this.getVariableTypeByHeader(\n                        condition.variable.name,\n                        dataFormat\n                      );\n                      lodash.forEach(filteredData, (elData) => {\n                        let variableType = variableInfo.type;\n                        if (variableType == DataType.DATE) {\n                          if (\n                            this.getFormattedDate(\n                              elData[condition.variable.name],\n                              variableInfo.format\n                            ).getTime() <\n                            new Date(condition.comparativeVariables[0]).getTime()\n                          ) {\n                            filteredData.push(elData);\n                          } else {\n                            if (\n                              Object.keys(elData).indexOf(variable.name) == -1\n                            ) {\n                              elData[variable.name] = 0;\n                            }\n                            tempResidingList.push(elData);\n                          }\n                        } else {\n                          let currSeconds = this.getFormattedDate(\n                            elData[condition.variable.name],\n                            variableInfo.format\n                          );\n                          let [hour, min] = condition.comparativeVariables[0]\n                            .split(':')\n                            .map((el: any) => parseInt(el));\n                          let comparedSec = hour * 60 * 60 + min * 60;\n                          if (currSeconds < comparedSec) {\n                            filteredData.push(elData);\n                          } else {\n                            if (\n                              Object.keys(elData).indexOf(variable.name) == -1\n                            ) {\n                              elData[variable.name] = 0;\n                            }\n                            tempResidingList.push(elData);\n                          }\n                        }\n                      });\n                      break;\n                    case FilterTypes.AFTER:\n                      variableInfo = this.getVariableTypeByHeader(\n                        condition.variable.name,\n                        dataFormat\n                      );\n                      lodash.forEach(filteredData, (elData) => {\n                        let variableType = variableInfo.type;\n                        if (variableType == DataType.DATE) {\n                          if (\n                            this.getFormattedDate(\n                              elData[condition.variable.name],\n                              variableInfo.format\n                            ).getTime() >\n                            new Date(condition.comparativeVariables[0]).getTime()\n                          ) {\n                            filteredData.push(elData);\n                          } else {\n                            if (\n                              Object.keys(elData).indexOf(variable.name) == -1\n                            ) {\n                              elData[variable.name] = 0;\n                            }\n                            tempResidingList.push(elData);\n                          }\n                        } else {\n                          let currSeconds = this.getFormattedDate(\n                            elData[condition.variable.name],\n                            variableInfo.format\n                          );\n                          let [hour, min] = condition.comparativeVariables[0]\n                            .split(':')\n                            .map((el: any) => parseInt(el));\n                          let comparedSec = hour * 60 * 60 + min * 60;\n                          if (currSeconds > comparedSec) {\n                            filteredData.push(elData);\n                          } else {\n                            if (\n                              Object.keys(elData).indexOf(variable.name) == -1\n                            ) {\n                              elData[variable.name] = 0;\n                            }\n                            tempResidingList.push(elData);\n                          }\n                        }\n                      });\n                      break;\n                    case '<>':\n                      variableInfo = this.getVariableTypeByHeader(\n                        condition.variable.name,\n                        dataFormat\n                      );\n                      lodash.forEach(filteredData, (elData) => {\n                        let variableType = variableInfo.type;\n                        if (variableType == 'date') {\n                          let varDate = this.getFormattedDate(\n                            elData[condition.variable.name],\n                            variableInfo.format\n                          ).getTime();\n                          if (\n                            varDate >=\n                              new Date(\n                                condition.comparativeVariables[0]\n                              ).getTime() &&\n                            varDate <\n                              new Date(\n                                condition.comparativeVariables[1]\n                              ).getTime()\n                          ) {\n                            filteredData.push(elData);\n                          } else {\n                            if (Object.keys(elData).includes(variable.name)) {\n                              elData[variable.name] = 0;\n                            }\n                            tempResidingList.push(elData);\n                          }\n                        } else {\n                          let currSeconds = this.getFormattedDate(\n                            elData[condition.variable.name],\n                            variableInfo.format\n                          );\n                          let [hour, min] = condition.comparativeVariables[0]\n                            .split(':')\n                            .map((el: any) => parseInt(el));\n                          let [endhour, endmin] =\n                            condition.comparativeVariables[1]\n                              .split(':')\n                              .map((el: any) => parseInt(el));\n                          let comparedSec = hour * 60 * 60 + min * 60;\n                          let endcomparedSec = endhour * 60 * 60 + endmin * 60;\n                          if (\n                            currSeconds >= comparedSec &&\n                            currSeconds < endcomparedSec\n                          ) {\n                            filteredData.push(elData);\n                          } else {\n                            if (Object.keys(elData).includes(variable.name)) {\n                              elData[variable.name] = 0;\n                            }\n                            tempResidingList.push(elData);\n                          }\n                        }\n                      });\n                      break;\n                  }    \n                  \n                  residingData = [...residingData, ...tempResidingList];\n                }\n              );\n              if (filter.isCustomValue) {\n                //Insert custom value\n                let value = this.validateNumber(filter.values)\n                  ? parseFloat(filter.values)\n                  : filter.values;\n                resultantData = [\n                  ...lodash.map(lodash.cloneDeep(filteredData), (d: any) => ({\n                    ...d,\n                    [variable.name]: value,\n                  })),\n                  ...lodash.cloneDeep(residingData),\n                ];\n              } else {\n                //Insert calculated value\n                dataToTraverse = lodash.without(\n                  lodash.map(lodash.cloneDeep(filteredData), filter.values),\n                  undefined\n                );\n                let value =\n                  filter.aggregationFunction == 'NO FUNCTION'\n                    ? null\n                    : this.getAggregatedValueOfCustomVariable(\n                        dataToTraverse,\n                        filter\n                      );\n                resultantData = [\n                  ...lodash.map(lodash.cloneDeep(filteredData), (d: any) => ({\n                    ...d,\n                    [variable.name]:\n                      value == null ? d[filter.values] : value,\n                  })),\n                  ...lodash.cloneDeep(residingData),\n                ];\n              }\n              filteredData = null;\n              residingData = null;\n            }else{\n              resultantData = lodash.cloneDeep(filteredData);\n            }\n          });\n        } else {\n          //Based on Operation\n          if (variable.operation[0].isAggregation && !withoutAgg) {\n            //Custom Variable Contain Aggregated Value\n            resultantData = this.getCustomVariableValueAggregated(\n              variable,\n              resultantData\n            );\n          } else {\n            //Custom Variable Contain Non-Aggregated Value\n            resultantData = lodash.map(resultantData, (d: any) => ({\n              ...d,\n              [variable.name]: this.getCustomVariableValue(variable, d),\n            }));\n          }\n        }\n    });\n    return resultantData;\n  }\n\n  private getAggregatedValueOfCustomVariable(\n    allData: any,\n    filter: DerivedVariableFilter\n  ): any {\n    let result = 0;\n    switch (filter.aggregationFunction) {\n      case AggregationFunctionsType.SUM:\n        result = lodash.sum(allData.map(Number));\n        break;\n      case AggregationFunctionsType.COUNT_UNIQUE:\n        result = lodash.uniq(allData).length;\n        break;\n      case AggregationFunctionsType.COUNT:\n        result = allData.length;\n        break;\n      case AggregationFunctionsType.MAXIMUM:\n        result = lodash.max(allData.map(Number)) ?? 0;\n        break;\n      case AggregationFunctionsType.MINIMUM:\n        result = lodash.min(allData.map(Number)) ?? 0;\n        break;\n      case AggregationFunctionsType.AVERAGE:\n        result = lodash.mean(allData.map(Number)) ?? 0;\n        break;\n    }\n    return result;\n  }\n\n  private getCustomVariableValue(variable: DerivedVariable, data: any) {\n    let tempArr: any = variable.formula.trim().split(' ');\n    tempArr = tempArr.map((el: any) => {\n      let allkeys = Object.keys(data);\n      if (allkeys.indexOf(el.replaceAll('_', ' ')) != -1) {\n        if (\n          data[el.replaceAll('_', ' ')] == '' ||\n          data[el.replaceAll('_', ' ')] == null\n        ) {\n          el = 0;\n        } else {\n          el = new BigNumber(data[el.replaceAll('_', ' ')]);\n        }\n      } else {\n        if (el.indexOf('_') != -1) {\n          el = 0;\n        }\n      }\n      return el;\n    });\n    return eval(tempArr.join(' '));\n  }\n\n  private getCustomVariableValueAggregated(\n    variable: DerivedVariable,\n    data: any\n  ) {\n    let tempArr = variable.formula.trim().split(' ');\n    tempArr = lodash.map(tempArr, (el: any) => {\n      let allkeys = Object.keys(data[0]);\n      if (allkeys.indexOf(el.replaceAll('_', ' ')) != -1) {\n        let key = el.replaceAll('_', ' ');\n        let dataToTraverse = lodash.map(data, key);\n        dataToTraverse = lodash.without(dataToTraverse, '0');\n        el = new BigNumber(\n          (dataToTraverse.length == 0\n            ? 0\n            : lodash.max(dataToTraverse)) as string\n        );\n      } else {\n        if (el.indexOf('_') != -1) {\n          el = 0;\n        }\n      }\n      return el;\n    });\n    let value = eval(tempArr.join(' '));\n    return lodash.map(data, (d) => ({\n      ...d,\n      [variable.name]: value,\n    }));\n  }\n  \n\n  //trends Data\n  private buildTrend(trendData: TrendsData) {\n    //Set TrendsObject with GraphId\n    this.trends[trendData.graphId] = trendData;\n\n    this.trends[trendData.graphId].graphData = this.trends[trendData.graphId].graphData.filter((d: any) => this.applyCustomFilter(d, this.trends[trendData.graphId].filter))\n\n    this.initTrend(trendData.graphId);\n  }\n\n  private async initTrend(graphId: any) {\n    //Creating Chart Raw Json\n    const trendData: any = await this.createTrendData(graphId);\n\n    //Rendering Chart of GraphId\n    Highcharts.chart(graphId, trendData);\n\n    // this.addActionBtnTrends(graphId);\n\n    return true;\n  }\n\n  private getWeeks(startDate: Date, endDate: Date) {\n    let weeks = [];\n    //Get Weeks from given date Range\n    while (startDate <= endDate) {\n      let temp = new Date(startDate);\n      temp.setDate(temp.getDate() + 6);\n      weeks.push(this.convertDate(startDate) + ' - ' + this.convertDate(temp));\n      startDate = temp;\n    }\n    return weeks;\n  }\n\n  private getQuarters(startDate: any, endDate: any) {\n    let quatars = [];\n    //Get Quarters from given date Range\n    while (startDate <= endDate) {\n      let temp = new Date(startDate);\n      temp.setMonth(temp.getMonth() + 2);\n      quatars.push(\n        this.convertDate(startDate) + ' - ' + this.convertDate(temp)\n      );\n      startDate = temp;\n    }\n    return quatars;\n  }\n\n  private convertDate(inputDate: Date) {\n    let date = inputDate.getDate();\n    let month = inputDate.getMonth();\n    let year = inputDate.getFullYear();\n    //Get Date in Formatted String\n    return (\n      String(date).padStart(2, '0') +\n      '-' +\n      String(month + 1).padStart(2, '0') +\n      '-' +\n      String(year).padStart(4, '0')\n    );\n  }\n\n  private getPlotOptionsTrends(graphId: string) {\n    let plotOptions = {\n      series: {\n        turboThreshold: 10000,\n        dataLabels: {\n          color: 'black',\n          enabled: true,\n          style: {\n            color: 'black',\n            textShadow: false,\n            textDecoration: 'none',\n          },\n        },\n        label: {\n          style: {\n            color: 'black',\n          },\n        },\n      },\n    };\n\n    //Options for Stack Graph\n    // if (this.trends[graphId].columns.indexOf(\"%\") == -1) {\n    //   //Add Percent Sign after y-axis values\n    //   plotOptions.series.dataLabels['formatter'] = function () {\n    //     return this.percentage.toFixed(2) + ' %';\n    //   };\n    // }\n    return plotOptions;\n  }\n\n  private createTrendData(graphId: any): any {\n    let _self = this;\n\n    //Getting Plot Options for Graph\n    const plotOptions = this.getPlotOptionsTrends(graphId);\n    const seriesData = this.getSeriesData(\n      this.trends[graphId].graphData,\n      this.trends[graphId].graphId\n    );\n\n    return {\n      credits: {\n        text: this.creditTitle,\n        href: this.creditUrl,\n        style: {\n          fontSize: '12px',\n        },\n      },\n      title: null,\n      plotOptions: plotOptions,\n      chart: {\n        type: 'line',\n        events: {\n          //Handle Drilldown Event of Graph\n          drilldown: function (e: any) {\n            if(e.points != false) return\n            let currGraphId = e.target.userOptions.series[0].graphId; //GraphId\n            let comparisonKey = e.point.options.comparisonKey; //ColorIndex of bar\n            let chart : any = this;\n            chart.showLoading('Loading...');\n            let selKey = e.point.name;\n            let rangeData = [];\n            if(comparisonKey != null){\n              let comparisonData = lodash.groupBy(_self.trends[currGraphId].graphData, _self.trends[currGraphId].rows);\n              rangeData = _self.getRangeObj(comparisonData[comparisonKey], _self.trends[currGraphId].rangeFilter,  _self.trends[currGraphId].range.startDate, _self.trends[currGraphId].range.endDate, _self.trends[currGraphId].dateVariable, _self.trends[currGraphId].rows, _self.trends[currGraphId].filter, currGraphId)\n            }else{\n              rangeData = _self.getRangeObj(_self.trends[currGraphId].graphData, _self.trends[currGraphId].rangeFilter,  _self.trends[currGraphId].range.startDate, _self.trends[currGraphId].range.endDate, _self.trends[currGraphId].dateVariable, _self.trends[currGraphId].rows, _self.trends[currGraphId].filter, currGraphId)\n            }\n            _self.dataService.setModalData({\n              colToView: _self.trends[currGraphId].lastLevelColumns,\n              refData: rangeData[selKey]\n            });\n            let modalOptions = {\n              panelClass: 'dataPopup-modal',\n              backdropClass: 'modal-backdrop',\n            };\n            _self.dialog.open(DataPopupComponent, modalOptions);\n            return;\n          },\n        },\n      },\n      xAxis: {\n        type: 'category',\n        labels: {\n          style: {\n            color: 'red',\n            textDecoration: 'none',\n            textOutline: '0px',\n          },\n        },\n        min: 0,\n        allowDecimals: false,\n        scrollbar: {\n          enabled: true,\n        },\n      },\n      yAxis: [\n        {\n          opposite: true,\n          title: {\n            text: null,\n          },\n        },\n      ],\n      series: seriesData,\n    };\n  }\n\n  private getSeriesData(data: any, graphId: string) {\n    let series = [];\n    if (this.trends[graphId].comparison.length > 0) {\n      //Multi-line Trends for Comparison\n      let finalData = this.getComparisonData(this.trends[graphId].comparison, this.trends[graphId].graphData, this.trends[graphId].rows, this.trends[graphId].rangeFilter, this.trends[graphId].range.startDate, this.trends[graphId].range.endDate, this.trends[graphId].dateVariable, this.trends[graphId].filter, graphId);\n      Object.keys(finalData).forEach(key => {\n        let rangeData : any = [];\n        Object.keys(finalData[key]).forEach(key2 => {\n          let tempData = finalData[key][key2];\n          if(tempData.length > 0){\n            tempData = this.addCustomVariable(this.trends[graphId].customVariable, tempData, false, this.trends[graphId].dataFormat, false);\n            const encounteredValues = tempData.length\n              ? lodash.map(tempData, this.trends[graphId].columns)\n              : [];\n\n            const dataToTraverse = lodash.without(\n              lodash.without(encounteredValues, '0'),\n              ''\n            );\n            rangeData.push({\n              name: key2,\n              drilldown: true,\n              dataLabels: {\n                shadow: false,\n                style: {\n                  color: 'black',\n                  textDecoration: 'none',\n                  textShadow: false,\n\n                  textOutline: 0,\n                },\n                className: 'graph-data-label',\n              },\n              comparisonKey: key,\n              y: tempData.length\n                ? parseFloat(\n                  // new Decimal(\n                      this.trends[graphId].aggregationFunctions\n                        .aggregationFunctions ==\n                      AggregationFunctionsType.NO_FUNCTION\n                        ? parseFloat(\n                            dataToTraverse.length == 0\n                              ? 0\n                              : lodash.max(dataToTraverse)\n                          ).toString()\n                        : this.applyAggregation(encounteredValues, 0, [\n                            this.trends[graphId].aggregationFunctions,\n                          ]).toPrecision(2)\n                  )\n                  // )\n                : 0,\n            })\n          }\n\n        })\n        series.push({\n          name:\n            key +\n            '-' +\n            this.trends[graphId].aggregationFunctions.aggregationFunctions +\n            '(' +\n            this.trends[graphId].columns +\n            ')',\n          type: 'line',\n          graphId: graphId,\n          data: rangeData,\n          comparisonKey: key\n        })\n      })\n    } else {\n      let finalData = this.getRangeObj(this.trends[graphId].graphData, this.trends[graphId].rangeFilter, this.trends[graphId].range.startDate, this.trends[graphId].range.endDate, this.trends[graphId].dateVariable,this.trends[graphId].rows, this.trends[graphId].filter, graphId);\n      let rangeData : any = [];\n      Object.keys(finalData).forEach(key => {\n        let tempData = finalData[key];\n        if(tempData.length > 0){\n          tempData = this.addCustomVariable(this.trends[graphId].customVariable, tempData, false, this.trends[graphId].dataFormat, false);\n          const encounteredValues = tempData.length\n            ? lodash.map(tempData, this.trends[graphId].columns)\n            : [];\n\n          const dataToTraverse = lodash.without(\n            lodash.without(encounteredValues, '0'),\n            ''\n          );\n          rangeData.push({\n            name: key,\n            drilldown: true,\n            dataLabels: {\n              shadow: false,\n              style: {\n                color: 'black',\n                textDecoration: 'none',\n                textShadow: false,\n\n                textOutline: 0,\n              },\n              className: 'graph-data-label',\n            },\n            comparisonKey: null,\n            y: tempData.length\n              ? parseFloat(\n                // new Decimal(\n                    this.trends[graphId].aggregationFunctions\n                      .aggregationFunctions ==\n                    AggregationFunctionsType.NO_FUNCTION\n                      ? parseFloat(\n                          dataToTraverse.length == 0\n                            ? 0\n                            : lodash.max(dataToTraverse)\n                        ).toString()\n                      : this.applyAggregation(encounteredValues, 0, [\n                          this.trends[graphId].aggregationFunctions,\n                        ]).toPrecision(2)\n                )\n                // )\n              : 0,\n          })\n        }\n\n      })\n      series.push({\n        name:\n          this.trends[graphId].aggregationFunctions.aggregationFunctions +\n          '(' +\n          this.trends[graphId].columns +\n          ')',\n        type: 'line',\n        graphId: graphId,\n        comparisonKey: null,\n        data: rangeData\n      })\n    }\n    return series;\n  }\n\n  private getComparisonData(comparison: any, data: any, xAxis: any, rangeFilter: any, startDate: any, endDate: any, dateVariable: any, filter: Filters,graphId: any){\n    let comparisonKey = xAxis;\n    let comparisonData = lodash.groupBy(data, comparisonKey);\n    let finalRes : any = {};\n    Object.keys(comparisonData).forEach(key => {\n      if(comparison.indexOf(key) != -1){\n        let rangeObj = this.getRangeObj(comparisonData[key],rangeFilter, startDate, endDate, dateVariable, xAxis, filter, graphId)\n        finalRes[key] = rangeObj;\n      }\n    })\n    return finalRes;\n  }\n\n  private getRangeObj(data: any, rangeFilter: any, startDate: any, endDate: any, dateVariable: any, xAxis: any, filter: Filters, graphId: any){\n    let rangeObj : any = {};\n    let sortedMap: any = {};\n    let sortedKey = [];\n    let filteredData = [];\n    switch(rangeFilter){\n      case RangeFilter.DAILY:\n        data.forEach((d: any) => {\n          let dateValue = d[dateVariable].split(\" \")[0];\n          d[\"***date***\"] = dateValue;\n          if(this.applyDataFilterTrends(d,filter,xAxis,graphId)){\n            filteredData.push(d);\n          }\n        })\n        rangeObj = lodash.groupBy(data, \"***date***\");\n        sortedKey = Object.keys(rangeObj).sort((a , b) => {\n          let dateA = this.getFormattedDate(a, DateFormat.DD_MM_YYYY);\n          let dateB = this.getFormattedDate(b, DateFormat.DD_MM_YYYY);\n          return dateA - dateB;\n        })\n        sortedKey.forEach(key => {\n          sortedMap[key] = rangeObj[key];\n        })\n        break;\n      case RangeFilter.WEEKLY:\n        let allWeeks = this.getWeeks(startDate, endDate);\n        data.forEach((d: any) => {\n            let variableDate = this.getFormattedDate(d[dateVariable]);\n            let selWeek = allWeeks.filter(week => {\n              let [startRange, endRange] : any = week.split(\" - \");\n              startRange = this.getFormattedDate(startRange,DateFormat.DD_MM_YYYY);\n              endRange = this.getFormattedDate(endRange, DateFormat.DD_MM_YYYY);\n              if(variableDate.getTime() >= startRange.getTime() && variableDate.getTime() <= endRange.getTime()){\n                return true;\n              }\n              return false;\n            })\n            if (selWeek.length > 0){\n                d.put(\"***week***\", selWeek[0]);\n            }else {\n                d.put(\"***week***\", \"\");\n            }\n            if(this.applyDataFilterTrends(d,filter,xAxis,graphId)){\n                filteredData.push(d);\n            }\n        });\n        rangeObj = lodash.groupBy(data, \"***week***\");\n        sortedKey = Object.keys(rangeObj).sort((a , b) => {\n          let dateA = this.getFormattedDate(a.split(\" - \")[0], DateFormat.DD_MM_YYYY);\n          let dateB = this.getFormattedDate(b.split(\" - \")[0], DateFormat.DD_MM_YYYY);\n          return dateA - dateB;\n        })\n        sortedKey.forEach(key => {\n          sortedMap[key] = rangeObj[key];\n        })\n        break;\n      case RangeFilter.MONTHLY:\n        data.forEach((d: any) => {\n          let dateValue = d[dateVariable].split(\" \")[0];\n          dateValue = dateValue.split(\"-\")[1] + dateValue.split(\"-\")[2];\n          d[\"***month***\"] = dateValue;\n          if(this.applyDataFilterTrends(d,filter,xAxis,graphId)){\n            filteredData.push(d);\n          }\n        })\n        rangeObj = lodash.groupBy(data, \"***month***\");\n        sortedKey = Object.keys(rangeObj).sort((a , b) => {\n          let [dateAMonth, dateAYear] = a.split(\"-\");\n          let [dateBMonth, dateBYear] = b.split(\"-\");\n          return dateAYear == dateBYear ? (parseInt(dateAMonth) - parseInt(dateBMonth)) : (parseInt(dateAYear) - parseInt(dateBYear));\n        })\n        sortedKey.forEach(key => {\n          sortedMap[key] = rangeObj[key];\n        })\n        break;\n      case RangeFilter.QUARTERLY:\n        let allQuartars = this.getQuarters(startDate, endDate);\n        data.forEach((d: any) => {\n            let variableDate = this.getFormattedDate(d[dateVariable]);\n            let selQuartar = allQuartars.filter(quartar => {\n              let [startRange, endRange] : any = quartar.split(\" - \");\n              startRange = this.getFormattedDate(startRange,DateFormat.DD_MM_YYYY);\n              endRange = this.getFormattedDate(endRange, DateFormat.DD_MM_YYYY);\n              if(variableDate.getTime() >= startRange.getTime() && variableDate.getTime() <= endRange.getTime()){\n                return true;\n              }\n              return false;\n            })\n            if (selQuartar.length > 0){\n                d.put(\"***quatar***\", selQuartar[0]);\n            }else {\n                d.put(\"***quatar***\", \"\");\n            }\n            if(this.applyDataFilterTrends(d,filter,xAxis,graphId)){\n                filteredData.push(d);\n            }\n        });\n        rangeObj = lodash.groupBy(data, \"***quatar***\");\n        sortedKey = Object.keys(rangeObj).sort((a , b) => {\n          let dateA = this.getFormattedDate(a.split(\" - \")[0], DateFormat.DD_MM_YYYY);\n          let dateB = this.getFormattedDate(b.split(\" - \")[0], DateFormat.DD_MM_YYYY);\n          return dateA - dateB;\n        })\n        sortedKey.forEach(key => {\n          sortedMap[key] = rangeObj[key];\n        })\n        break;\n      case RangeFilter.YEARLY:\n        data.forEach((d: any) => {\n          let dateValue = d[dateVariable].split(\" \")[2];\n          d[\"***year***\"] = dateValue;\n          if(this.applyDataFilterTrends(d,filter,xAxis,graphId)){\n            filteredData.push(d);\n          }\n        })\n        rangeObj = lodash.groupBy(data, \"***year***\");\n        sortedKey = Object.keys(rangeObj).sort((a , b) => {\n          let dateAYear = a;\n          let dateBYear = b;\n          return (parseInt(dateAYear) - parseInt(dateBYear));\n        })\n        sortedKey.forEach(key => {\n          sortedMap[key] = rangeObj[key];\n        })\n        break;\n    }\n    return sortedMap;\n  }\n\n  private applyDataFilterTrends(data: any, filter: Filters, xAxis: any ,graphId: any) {\n\n    let selXFilter = filter.xAxis.filter(f => f.variableName == xAxis);\n    let isValid = selXFilter.length == 0;\n    if (selXFilter.length > 0) {\n        let filterToApply = selXFilter[0];\n        let values =  filterToApply.values;\n        let dataValue = data[filterToApply.variableName];\n        let variableType = filterToApply.variableType;\n        switch (filterToApply.filterType) {\n            case \"IN\":\n                if (values.includes(dataValue.toString())) {\n                    isValid = true;\n                }\n                break;\n            case \"NOT IN\":\n                if (!values.includes(dataValue.toString())) {\n                    isValid = true;\n                }\n                break;\n            case \">\":\n                if (dataValue > values[0]) {\n                    isValid = true;\n                }\n                break;\n            case \"<\":\n                if (dataValue < values[0]) {\n                    isValid = true;\n                }\n                break;\n            case \">=\":\n                if (dataValue >= values[0]) {\n                    isValid = true;\n                }\n                break;\n            case \"<=\":\n                if (dataValue <= values) {\n                    isValid = true;\n                }\n                break;\n            case \"==\":\n                if (dataValue == values) {\n                    isValid = true;\n                }\n                break;\n            case \"!=\":\n                if (dataValue != values[0]) {\n                    isValid = false;\n                }\n                break;\n            case \"bet\":\n                if (dataValue >= values[0] && dataValue < values[1]) {\n                    isValid = true;\n                }\n                break;\n                case FilterTypes.BEFORE:\n                if (variableType == DataType.DATE) {\n                  let operand1 = this.getFormattedDate(\n                    dataValue,\n                    filterToApply.format\n                  );\n                  let operand2 = new Date(values[0]);\n                  if (operand1 < operand2) {\n                    isValid = true;\n                  }\n                } else {\n                  let currSeconds = this.getFormattedDate(\n                    dataValue,\n                    filterToApply.format\n                  );\n                  let [hour, min] = values[0]\n                    .split(':')\n                    .map((el: any) => parseInt(el));\n                  let comparedSec = hour * 60 * 60 + min * 60;\n                  if (currSeconds < comparedSec) {\n                    isValid = true;\n                  }\n                }\n                break;\n              case FilterTypes.AFTER:\n                if (variableType == DataType.DATE) {\n                  let operand1 = this.getFormattedDate(\n                    dataValue,\n                    filterToApply.format\n                  );\n                  let operand2 = new Date(values[0]);\n                  if (operand1 > operand2) {\n                    isValid = true;\n                  }\n                } else {\n                  let currSeconds = this.getFormattedDate(\n                    dataValue,\n                    filterToApply.format\n                  );\n                  let [hour, min] = values[0]\n                    .split(':')\n                    .map((el: any) => parseInt(el));\n                  let comparedSec = hour * 60 * 60 + min * 60;\n                  if (currSeconds > comparedSec) {\n                    isValid = true;\n                  }\n                }\n                break;\n              case FilterTypes.BETWEEN:\n                if (variableType == DataType.DATE) {\n                  let operand1 = this.getFormattedDate(\n                    dataValue,\n                    filterToApply.format\n                  );\n                  let operand2 = new Date(values[0]);\n                  let operand3 = new Date(values[1]);\n                  if (operand1 >= operand2 && operand1 < operand3) {\n                    isValid = true;\n                  }\n                } else {\n                  let currSeconds = this.getFormattedDate(\n                    dataValue,\n                    filterToApply.format\n                  );\n                  let [hour, min] = values[0]\n                    .split(':')\n                    .map((el: any) => parseInt(el));\n                  let [endhour, endmin] = values[1]\n                  .split(':')\n                  .map((el: any) => parseInt(el));\n                  let comparedSec = hour * 60 * 60 + min * 60;\n                  let endComparedSec = endhour * 60 * 60 + endmin * 60;\n                  if ( currSeconds >= comparedSec &&\n                    currSeconds < endComparedSec) {\n                    isValid = true;\n                  }\n                }\n                break;\n        }\n    }\n    // if (isValid && filter.customFilter.length > 0) {\n    //     isValid = this.applyCustomFilter(data, filter);\n    // }\n    return isValid;\n}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-x-sights-core',\n  template: `\n    <p>\n      x-sights-core works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class XSightsCoreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport * as lodash from 'lodash';\nimport { __awaiter } from 'tslib';\nimport { DataService } from '../../services/data.service';\nimport { WidgetType, XSightsCoreService } from '../../x-sights-core.service';\n\n@Component({\n  selector: 'x-sights-public-dashboard',\n  templateUrl: './x-sights-public-dashboard.component.html',\n  styleUrls: ['./x-sights-public-dashboard.component.scss'],\n})\nexport class XSightsPublicDashboardComponent implements OnInit {\n  @Input() dashboardUrl: string = '';\n  @Input() adminId: any = 0;\n  @Output() dashboardLoaded: EventEmitter<any> = new EventEmitter();\n\n  private mtrSource = '138';\n\n  decodedParams: any = {};\n  dashboardData: any = null;\n  filters: any = [];\n  dropdownSettings: any = {};\n  tableDatas: any = {};\n  dumpData: any = [];\n\n  constructor(\n    private dataService: DataService,\n    private xsights: XSightsCoreService\n  ) {}\n\n  ngOnInit() {\n    // this.decodeUrl();\n    this.dropdownSettings = {\n      singleSelection: false,\n      enableCheckAll: false,\n      allowSearchFilter: true,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n    //Add '${implements OnChanges}' to the class.\n    if (\n      changes['dashboardUrl'].previousValue !=\n        changes['dashboardUrl'].currentValue ||\n      changes['adminId'].previousValue != changes['adminId'].currentValue\n    ) {\n      this.decodeUrl();\n    }\n  }\n\n\n  checkDashboardLoading() {\n    const elements = document.querySelectorAll('.lds-ellipsis');\n    if (elements.length == 0) {\n      this.dashboardLoaded.emit({\n        isLoaded: true,\n      });\n    }\n  }\n\n  decodeUrl() {\n    this.dataService.getDecodedUrl(this.dashboardUrl).then((res: any) => {\n      const urlParamsStr = res.data[0].split('?')[1];\n      const urlParamsArr = urlParamsStr.split('&');\n      urlParamsArr.forEach((param: any) => {\n        this.decodedParams[param.split('=')[0]] = param.split('=')[1];\n      });\n      this.getSharedDashboard();\n    });\n  }\n\n  setGraphOrder(a: any, b: any) {\n    if (a.order < b.order) {\n      return -1;\n    }\n    if (a.order > b.order) {\n      return 1;\n    }\n    return 0;\n  }\n\n  getSharedDashboard() {\n    this.adminId = this.decodedParams.foAdminId;\n    let params =\n      '?dash_id=' +\n      this.decodedParams.dash_id +\n      '&fileId=' +\n      this.decodedParams.fileId;\n    this.dataService\n      .getSharedDashboard(params, this.adminId)\n      .then((res: any) => {\n        this.filters = res.data[0].filters;\n        res.data[0].graphs = res.data[0].graphs.sort(this.setGraphOrder);\n        this.dashboardData = res.data[0];\n        this.dataService\n          .getSharedDashboardData(this.dashboardData.id, this.adminId)\n          .then((res: any) => {\n            // //console.log(res);\n            this.dumpData = res;\n            lodash.forEach(this.dashboardData.graphs, (graph: any) => {\n              if (graph.graphType != 2) {\n                let dataIndex = res.findIndex(\n                  (d: any) => d.chartId == 'graph-' + graph.graph_id\n                );\n                let graphD =\n                  typeof res[dataIndex].data != \"object\"\n                    ? res[res[dataIndex].data].data\n                    : res[dataIndex].data;\n                if (dataIndex != -1) {\n                  this.filters = lodash.map(this.filters,(filter: any) => {\n                    if (\n                      filter.sourceId.toString() == graph.sourceid.toString()\n                    ) {\n                      filter.values = Object.keys(\n                        lodash.groupBy(graphD, filter.fieldName)\n                      ).map((key, index) => ({\n                        id: index,\n                        text: key,\n                      }));\n                      filter.selValues = [];\n                    }\n                    return filter;\n                  });\n                  let tempGraphData = {\n                    rows: graph.graph_structure.xAxis,\n                    columns: graph.graph_structure.yAxis,\n                    aggregationFunctions: graph.graph_structure.aggreagations,\n                    filter: graph.graph_structure.filter,\n                    customVariable: graph.graph_structure.derivedVariables,\n                    dataFormat: [],\n                    colToShow: null,\n                    lastLevelColumns: graph.graph_structure.lastLevelData ?? [],\n                    dateVariable: graph.graph_structure.dateVariable,\n                    chartType: graph.graph_structure.chartType,\n                  };\n                  if (graph.sourceid.toString() == this.mtrSource) {\n                    tempGraphData = this.dataService.keyConverter(\n                      tempGraphData,\n                      res[dataIndex].columns,\n                      1\n                    );\n                  }\n                  this.buildChart(graph, graphD, tempGraphData);\n                }\n              }\n            });\n          });\n      });\n  }\n\n\n  filterData(data: any, sourceId: any) {\n    let filterToApply = this.filters.filter(\n      (filter: any) => filter.sourceId.toString() == sourceId.toString()\n    );\n    filterToApply.forEach((filter: any) => {\n      if (filter.selValues.length) {\n        let validValues = filter.selValues.map((value: any) => value.text);\n        let temp: any = [];\n        let groupData = lodash.groupBy(data, filter.fieldName);\n        let allKeys = Object.keys(groupData);\n        allKeys.forEach((key) => {\n          if (validValues.includes(key)) {\n            temp.push(...groupData[key]);\n          }\n        });\n        data = temp;\n      }\n    });\n    return data;\n  }\n\n  buildChart(widgetData: any, data: any, tempData: any) {\n    let _self = this;\n    return new Promise(async (resolve, reject) => {\n      data = this.filterData(data, widgetData.sourceid.toString());\n      // data = this.filterData(data, widgetData.sourceid);\n      if (widgetData.graphType == 1) {\n        let graphData = {\n          graphId: 'graph-' + widgetData.graph_id,\n          graphTitle: widgetData.graphname,\n          rows: tempData.rows[0],\n          columns: tempData.columns[0],\n          graphTypes: widgetData.graph_structure.chartType[0],\n          graphData: data,\n          aggregationFunctions: tempData.aggregationFunctions[0],\n          filter: tempData.filter,\n          colors: widgetData.graph_structure.colColours[0],\n          range: {\n            startDate: widgetData.graph_structure.startDate,\n            endDate: widgetData.graph_structure.endDate,\n          },\n          dateVariable: tempData.dateVariable,\n          rangeFilter: widgetData.graph_structure.rangeFilter,\n          comparison: widgetData.graph_structure.comparison ?? [],\n          customVariable: tempData.customVariable,\n          dataFormat: tempData.dataFormat ?? [],\n          lastLevelColumns: tempData.lastLevelColumns ?? [],\n        };\n        let response = await _self.xsights.build(WidgetType.TREND, graphData);\n        resolve(response);\n        _self.checkDashboardLoading();\n      } else if (widgetData.graphType == 3) {\n        let tableData = {\n          rows: tempData.rows,\n          column: tempData.columns,\n          aggregationFunction: tempData.aggregationFunctions,\n          filter: tempData.filter,\n          derivedVariables: tempData.customVariable,\n          dataFormat: tempData.dataFormat ?? [],\n          data: data,\n          categories: widgetData.graph_structure.chartType,\n        };\n        _self.tableDatas['table-graph-' + widgetData.graph_id] =\n          await _self.xsights.build(WidgetType.PIVOT_TABLE, tableData);\n        resolve(true);\n        setTimeout(() => {\n          _self.checkDashboardLoading();\n        }, 500);\n      } else {\n        let graphdata = {\n          graphId: 'graph-' + widgetData.graph_id,\n          graphTitle: widgetData.graphname,\n          rows: tempData.rows,\n          columns: tempData.columns,\n          aggregationFunctions: tempData.aggregationFunctions,\n          filter: tempData.filter,\n          customVariable: tempData.customVariable,\n          dataFormat: tempData.dataFormat ?? [],\n          lastLevelColumns: tempData.lastLevelColumns ?? [],\n          graphTypes: widgetData.graph_structure.chartType,\n          graphData: data,\n          colors: widgetData.graph_structure.colColours,\n        };\n        let response = await this.xsights.build(WidgetType.GRAPH, graphdata);\n        resolve(response);\n        _self.checkDashboardLoading();\n      }\n    });\n  }\n\n  async filteredDashboard() {\n    for (const element of this.dashboardData.graphs) {\n      const graph = element;\n      let res = null;\n      if (graph.graphType != 2) {\n        let dataIndex = this.dumpData.findIndex(\n          (d: any) => d.chartId == 'graph-' + graph.graph_id\n        );\n        res = this.dumpData[dataIndex].data;\n        let tempGraphData = {\n          rows: graph.graph_structure.xAxis,\n          columns: graph.graph_structure.yAxis,\n          aggregationFunctions: graph.graph_structure.aggreagations,\n          filter: graph.graph_structure.filter,\n          customVariable: graph.graph_structure.derivedVariables,\n          dataFormat: [],\n          colToShow: null,\n          lastLevelColumns: graph.graph_structure.lastLevelData ?? [],\n          dateVariable: graph.graph_structure.dateVariable,\n          chartType: graph.graph_structure.chartType,\n        };\n        if (graph.sourceid.toString() == this.mtrSource) {\n          tempGraphData = this.dataService.keyConverter(\n            tempGraphData,\n            this.dumpData[dataIndex].columns,\n            1\n          );\n        }\n        this.buildChart(graph, res, tempGraphData);\n      }\n    }\n  }\n}","<div *ngIf=\"dashboardData !=null\">\n    <div class=\"dash_graph_sec\">\n        <div class=\"dash_graph dashboard-wrapper\">\n            <div>\n                <h3 class=\"graph_name\" style=\"height: 44px;\">{{dashboardData.dashboard_name}} </h3>\n            </div>\n            <div class=\"filter-container\" *ngIf=\"filters.length\">\n                <h3>Filters:</h3>\n                <div class=\"col-lg-12 row\">\n                    <div class=\"col-lg-3\" *ngFor=\"let filter of filters;let i=index\"> <ng-multiselect-dropdown [placeholder]=\"'Select ' + filter.fieldName + '...'\" [(ngModel)]=\"filter.selValues\" (onSelect)=\"filteredDashboard()\"\n                            (onDeSelect)=\"filteredDashboard()\" [settings]=\"dropdownSettings\" [data]=\"filter.values\">\n                        </ng-multiselect-dropdown> </div>\n                </div>\n            </div>\n            <div class=\"row graph_design\" id=\"dashboardScreen\"> \n                <ng-container *ngFor=\"let graph of dashboardData?.graphs;let i=index;\">\n                    <!-- <div class=\"page-break\" *ngIf=\"i % 5 == 0 && i != 0\"></div> -->\n                    <ng-container *ngIf=\"graph.graphType != 3 && graph.graphType != 2\">\n                        <div class=\"dashboard-graph\"\n                            [ngClass]=\"{'col-lg-12': graph.graph_index == 1,'col-lg-6': graph.graph_index == 2,'col-lg-4': graph.graph_index == 3,'col-lg-3': graph.graph_index == 4}\"\n                            style=\"min-height: 370px; padding: 0px;\"> <!-- loader start -->\n                            <h3 *ngIf=\"graph.graph_structure.xAxis[0] != '***LABEL***'\" style=\"text-align: center; background-color: #eee; padding: 2px;\">{{graph.graphname}}</h3>\n                            <div [id]=\"'graph-'+ graph.graph_id\" style=\"position: relative; padding: 10px; padding-top: 45px;\">\n                                <div class=\"lds-ellipsis\">\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                </div> <!-- loader end -->\n                            </div>\n                        </div>\n                    </ng-container>\n                    <!-- <div *ngIf=\"graph.graphType !=3 && graph.graphType !=2\" class=\"dashboard-graph\" [id]=\"'graph-'+\n                        graph.graph_id\" [ngClass]=\"{'col-lg-12': graph.graph_index==1,'col-lg-6':\n                        graph.graph_index==2,'col-lg-4': graph.graph_index==3,'col-lg-3': graph.graph_index==4}\"\n                        style=\"min-height: 370px; display: flex;\"> \n                        <div class=\"lds-ellipsis\">\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                        </div> \n                    </div> -->\n                    <div *ngIf=\"graph.graphType==2\" class=\"dashboard-graph\" [id]=\"'table-graph-'+ graph.graph_id\"\n                        [ngClass]=\"{'col-lg-12':\n                        graph.graph_index==1,'col-lg-6': graph.graph_index==2,'col-lg-4':\n                        graph.graph_index==3,'col-lg-3': graph.graph_index==4}\" style=\"display: flex;\n                        flex-direction: column; border-bottom: 0px; background-color:antiquewhite;\">\n                        <!-- loader start -->\n                        <h2 style=\"text-align: center; margin-bottom: 0px;\">\n                            {{graph.graphname}}</h2> <!-- loader end -->\n                    </div>\n                    <div *ngIf=\"graph.graphType==3\" class=\"dashboard-graph\" [id]=\"'table-graph-'+\n                        graph.graph_id\" [ngClass]=\"{'col-lg-12': graph.graph_index==1,'col-lg-6':\n                        graph.graph_index==2,'col-lg-4': graph.graph_index==3,'col-lg-3': graph.graph_index==4}\"\n                        style=\"min-height: 300px; display: flex; flex-direction: column; padding-bottom: 2%;\">\n                        <!-- loader start -->\n                        <h3 style=\"text-align: center;\">{{graph.graphname}}</h3>\n                        <ng-container *ngIf=\"tableDatas.hasOwnProperty('table-graph-' + graph.graph_id)\">\n                            <dx-pivot-grid [allowSortingBySummary]=\"true\" [allowSorting]=\"true\" [allowFiltering]=\"true\"\n                                [showBorders]=\"true\" [dataSource]=\"tableDatas['table-graph-' + graph.graph_id]\">\n                                <dxo-field-chooser [enabled]=\"false\"></dxo-field-chooser> </dx-pivot-grid>\n                        </ng-container> <ng-container *ngIf=\"tableDatas['table-graph-' +\n                            graph.graph_id]==undefined\">\n                            <div class=\"lds-ellipsis\">\n                                <div></div>\n                                <div>\n                                </div>\n                                <div></div>\n                                <div></div>\n                            </div>\n                        </ng-container>\n                        <!-- loader end -->\n                    </div>\n                </ng-container> </div>\n        </div>\n    </div>\n</div>","import { DatePipe } from '@angular/common';\nimport { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport * as lodash from 'lodash';\nimport { ToastrService } from 'ngx-toastr';\nimport { DataService } from '../../services/data.service';\nimport { WidgetType, XSightsCoreService } from '../../x-sights-core.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'x-sights-dashboard',\n  templateUrl: './x-sights-dashboard.component.html',\n  styleUrls: ['./x-sights-dashboard.component.scss'],\n})\nexport class XSightsDashboardComponent implements OnInit {\n  private systemApis = ['198', '138', '279'];\n  private mtrSource = '138';\n  @Input() dashboardId: number = 0;\n  @Input() adminId: any = '0';\n  @Input() showHeader: boolean = true;\n  @Input() showFilters: boolean = true;\n  @Input() startDate: any = null;\n  @Input() endDate: any = null;\n  @Input() toggleDashboard: boolean = false;\n\n  @Output() isDashboardLoaded: EventEmitter<any> = new EventEmitter();\n\n  dashboardData: any = null;\n  fromDate: any = null;\n  toDate: any = null;\n  showHeaderInputs: any = false;\n  filters: any = [];\n  calledSource: any = {};\n  calledSourceKeys: any = {};\n  liveRefreshMin: any = 5;\n  dataFile: any = [];\n  dataFileIndex: any = [];\n  pivotTables: any = {};\n  dashPublicUrl: any = '';\n  dashboardInterval: any;\n  dropdownSettings: any = {};\n\n  constructor(\n    private xsights: XSightsCoreService,\n    private toastService: ToastrService,\n    private datePipe: DatePipe,\n    private dataService: DataService\n  ) {\n    if (this.startDate == null) {\n      this.fromDate = this.datePipe.transform(\n        new Date(new Date().setDate(new Date().getDate() - 3)),\n        'yyyy-MM-dd'\n      );\n    } else {\n      this.fromDate = this.startDate;\n    }\n    if (this.endDate == null) {\n      this.toDate = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n    } else {\n      this.toDate = this.endDate;\n    }\n  }\n\n  ngOnInit() {\n    this.dropdownSettings = {\n      singleSelection: false,\n      enableCheckAll: false,\n      allowSearchFilter: true,\n    };\n    // this.renderPage();\n  }\n\n  renderPage() {\n    this.getDashBoardById();\n  }\n\n  ngOnDestroy() {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    clearInterval(this.dashboardInterval);\n  }\n  ngOnChanges(changes: SimpleChanges) {\n    //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n    //Add '${implements OnChanges}' to the class.\n    // if (\n    //   (!changes['refreshDashboard']?.isFirstChange() &&\n    //     changes['refreshDashboard']?.currentValue !=\n    //       changes['refreshDashboard']?.previousValue)\n    // ) {\n    //   this.refreshSystemApis();\n    // }\n    if (\n      changes['dashboardId']?.currentValue !=\n        changes['dashboardId']?.previousValue ||\n      changes['adminId']?.currentValue != changes['adminId']?.previousValue ||\n      changes['showHeader']?.currentValue !=\n        changes['showHeader']?.previousValue ||\n      changes['showFilters']?.currentValue !=\n        changes['showFilters']?.previousValue ||\n      changes['toggleDashboard']?.currentValue !=\n        changes['toggleDashboard']?.previousValue\n    ) {\n      this.renderPage();\n    }\n  }\n  async refreshSystemApis() {\n    let calledOnce = false;\n    for (let index = 0; index < this.dashboardData.graphs.length; index++) {\n      let _self = this;\n      const graph = _self.dashboardData.graphs[index];\n      if (graph.sourceid.toString() == '138') {\n        //show loader in MTR graph\n        if (!calledOnce) {\n          // Swal.fire({\n          //   title: 'Please Wait...',\n          //   text: 'Fetch MTR Report',\n          //   icon: 'info',\n          //   showConfirmButton: false,\n          //   showCancelButton: false,\n          //   allowEnterKey: false,\n          //   allowOutsideClick: false,\n          //   allowEscapeKey: false,\n          // });\n          // Swal.isLoading();\n        }\n        let res = await _self.generateDashboard(graph, !calledOnce);\n        let tempGraphData = {\n          rows: graph.graph_structure.xAxis,\n          columns: graph.graph_structure.yAxis,\n          aggregationFunctions: graph.graph_structure.aggreagations,\n          filter: graph.graph_structure.filter,\n          customVariable: graph.graph_structure.derivedVariables,\n          dataFormat: [],\n          colToShow: null,\n          chartType: graph.graph_structure.chartType,\n          lastLevelColumns: graph.graph_structure.lastLevelData ?? [],\n          dateVariable: graph.graph_structure.dateVariable,\n        };\n        if (graph.sourceid.toString() == this.mtrSource) {\n          tempGraphData = this.dataService.keyConverter(\n            tempGraphData,\n            this.calledSourceKeys[graph.sourceid.toString()],\n            1\n          );\n        }\n        this.buildChart(graph, res, tempGraphData);\n        calledOnce = true;\n      } else if (graph.sourceid.toString() == '198') {\n        if (!calledOnce) {\n          // Swal.fire({\n          //   title: 'Please Wait...',\n          //   text: 'Fetch Chettinad Fault MTR Report',\n          //   icon: 'info',\n          //   showConfirmButton: false,\n          //   showCancelButton: false,\n          //   allowEnterKey: false,\n          //   allowOutsideClick: false,\n          //   allowEscapeKey: false,\n          // });\n          // Swal.isLoading();\n        }\n        let res = await _self.generateDashboard(graph, !calledOnce);\n        let tempGraphData = {\n          rows: graph.graph_structure.xAxis,\n          columns: graph.graph_structure.yAxis,\n          aggregationFunctions: graph.graph_structure.aggreagations,\n          filter: graph.graph_structure.filter,\n          customVariable: graph.graph_structure.derivedVariables,\n          dataFormat: [],\n          colToShow: null,\n          chartType: graph.graph_structure.chartType,\n          lastLevelColumns: graph.graph_structure.lastLevelData ?? [],\n          dateVariable: graph.graph_structure.dateVariable,\n        };\n        if (graph.sourceid.toString() == this.mtrSource) {\n          tempGraphData = this.dataService.keyConverter(\n            tempGraphData,\n            this.calledSourceKeys[graph.sourceid.toString()],\n            1\n          );\n        }\n        this.buildChart(graph, res, tempGraphData);\n        calledOnce = true;\n      }\n    }\n  }\n  getDashBoardById() {\n    this.dataService\n      .getDashboardById(this.dashboardId, this.adminId)\n      .then(async (res: any) => {\n        this.filters = res.data[0]?.filters ?? [];\n        res.data[0].graphs = res.data[0].graphs.sort(this.setGraphOrder);\n        this.dashboardData = res.data[0];\n        for (const element of this.dashboardData.graphs) {\n          const graph = element;\n          if (graph.graphType != 2) {\n            let res = await this.generateDashboard(graph);\n            let tempGraphData = {\n              rows: graph.graph_structure.xAxis,\n              columns: graph.graph_structure.yAxis,\n              aggregationFunctions: graph.graph_structure.aggreagations,\n              filter: graph.graph_structure.filter,\n              customVariable: graph.graph_structure.derivedVariables,\n              dataFormat: [],\n              colToShow: null,\n              lastLevelColumns: graph.graph_structure.lastLevelData ?? [],\n              chartType: graph.graph_structure.chartType,\n              dateVariable: graph.graph_structure.dateVariable,\n            };\n            if (graph.sourceid.toString() == this.mtrSource) {\n              tempGraphData = this.dataService.keyConverter(\n                tempGraphData,\n                this.calledSourceKeys[graph.sourceid.toString()],\n                1\n              );\n            }\n            this.buildChart(graph, res, tempGraphData);\n          }\n          // if(this.dashboardData.dashboard_type == 1){\n          //Set Live Dashboard Interval\n          // this.dashboardInterval = setInterval(async () => {\n          //   this.calledSource = {};\n          //   if(graph.graphType != 2){\n          //     let graphBuild = await _self.buildChart('graph-' + graph.graph_id, graph.graph_structure, res, graph.graphname, graph.graphType, {\n          //       startDate: this.datePipe.transform(graph.graph_structure.startDate,'yyyy-MM-dd'),\n          //       endDate: this.datePipe.transform(graph.graph_structure.endDate,'yyyy-MM-dd')\n          //     }, graph.sourceid);\n          //   }\n          //   if (index == _self.dashboardData.graphs.length - 1) {\n          //     setTimeout(() => {\n          //       _self.dashboardLoadedCompletely = true;\n          //     }, 500);\n          //   }\n          // },  this.liveRefreshMin * 60 * 1000)\n          // }\n        }\n      });\n  }\n  generateDashboard(graph: any, reCall: boolean = false) {\n    return new Promise((resolve, reject) => {\n      if (\n        this.calledSource.hasOwnProperty(graph.sourceid.toString()) &&\n        !reCall\n      ) {\n        resolve(this.calledSource[graph.sourceid.toString()]);\n      } else {\n        let extraData = {\n          startTime: (this.startDate ?? this.fromDate) + ' 00:00:00',\n          endTime: (this.endDate ?? this.toDate) + ' 00:00:00',\n        };\n        this.dataService\n          .fetchDataSource(\n            {\n              sourceid: graph.sourceid,\n              startTime: extraData.startTime,\n              endTime: extraData.endTime,\n            },\n            this.adminId\n          )\n          .then((res: any) => {\n            Swal.hideLoading();\n            Swal.close();\n            let keys = null;\n            let dumpData = res;\n            // this.uniqueSourceData.push(graph);\n            if (\n              graph.dataType == 'remote-json' &&\n              !this.systemApis.includes(graph.sourceid.toString())\n            ) {\n              res = this.dataService.parseDataFormat(res, graph.dataFormat);\n            }\n            if (this.systemApis.includes(graph.sourceid.toString())) {\n              this.showHeaderInputs = true;\n              if (graph.sourceid.toString() == this.mtrSource) {\n                dumpData = res[0].data;\n                keys = res[0].columns;\n              }\n            }\n            this.filters = this.filters.map((filter: any) => {\n              if (filter.sourceId.toString() == graph.sourceid.toString()) {\n                filter.values = Object.keys(\n                  lodash.groupBy(dumpData, filter.fieldName)\n                ).map((key, index) => ({\n                  id: index,\n                  text: key,\n                }));\n                filter.selValues = [];\n              }\n              return filter;\n            });\n            if (dumpData) {\n              this.calledSource[graph.sourceid.toString()] = dumpData;\n              this.calledSourceKeys[graph.sourceid.toString()] = keys;\n              resolve(dumpData);\n            }\n          })\n          .catch((err) => {\n            Swal.hideLoading();\n            Swal.close();\n            this.toastService.error('Unable to Fetch Data');\n          });\n      }\n    });\n  }\n  \n  buildChart(widgetData: any, data: any, tempData: any) {\n    let _self = this;\n    return new Promise(async (resolve, reject) => {\n      let existIndex = _self.dataFileIndex.findIndex(\n        (data: any) => data.chartId == 'graph-' + widgetData.graph_id\n      );\n      let existSourceIndex = _self.dataFileIndex.findIndex((data: any) => data.sourceId == widgetData.sourceid.toString());\n      if (existIndex == -1) {\n        _self.dataFile.push({\n          chartId: 'graph-' + widgetData.graph_id,\n          sourceId: widgetData.sourceid.toString(),\n          data: existSourceIndex != -1 ? existSourceIndex : data,\n          columns: this.calledSourceKeys[widgetData.sourceid.toString()],\n        });\n        _self.dataFileIndex.push({\n          chartId: 'graph-' + widgetData.graph_id,\n          sourceId: widgetData.sourceid.toString(),\n        })\n      } else {\n        _self.dataFile[existIndex] = {\n          ..._self.dataFile[existIndex],\n          data: existSourceIndex != -1 ? existSourceIndex : data,\n        };\n      }\n      data = this.filterData(data, widgetData.sourceid.toString());\n      if (widgetData.graphType == 1) {\n        let range = {\n          startDate: this.datePipe.transform(\n            widgetData.graph_structure.startDate,\n            'yyyy-MM-dd'\n          ),\n          endDate: this.datePipe.transform(\n            widgetData.graph_structure.endDate,\n            'yyyy-MM-dd'\n          ),\n        };\n        if (this.systemApis.includes(widgetData.sourceid.toString())) {\n          range = {\n            startDate: this.startDate ?? this.fromDate,\n            endDate: this.endDate ?? this.toDate,\n          };\n        }\n        let graphData = {\n          graphId: 'graph-' + widgetData.graph_id,\n          graphTitle: widgetData.graphname,\n          rows: tempData.rows[0],\n          columns: tempData.columns[0],\n          graphTypes: widgetData.graph_structure.chartType[0],\n          graphData: data,\n          aggregationFunctions: tempData.aggregationFunctions[0],\n          filter: tempData.filter,\n          colors: widgetData.graph_structure.colColours[0],\n          range: range,\n          dateVariable: tempData.dateVariable,\n          rangeFilter: widgetData.graph_structure.rangeFilter,\n          comparison: widgetData.graph_structure.comparison ?? [],\n          customVariable: tempData.customVariable,\n          dataFormat: tempData.dataFormat ?? [],\n          lastLevelColumns: tempData.lastLevelColumns ?? [],\n        };\n        let response = await _self.xsights.build(WidgetType.TREND, graphData);\n        this.checkDashboardLoading();\n        resolve(response);\n      } else if (widgetData.graphType == 3) {\n        let tableData = {\n          rows: tempData.rows,\n          column: tempData.columns,\n          aggregationFunction: tempData.aggregationFunctions,\n          filter: tempData.filter,\n          derivedVariables: tempData.customVariable,\n          dataFormat: tempData.dataFormat ?? [],\n          data: data,\n          categories: widgetData.graph_structure.chartType,\n        };\n        _self.pivotTables['table-' + widgetData.graph_id] =\n          await _self.xsights.build(WidgetType.PIVOT_TABLE, tableData);\n        setTimeout(() => {\n          _self.checkDashboardLoading();\n        }, 500);\n        resolve(true);\n      } else {\n        let graphdata = {\n          graphId: 'graph-' + widgetData.graph_id,\n          graphTitle: widgetData.graphname,\n          rows: tempData.rows,\n          columns: tempData.columns,\n          aggregationFunctions: tempData.aggregationFunctions,\n          filter: tempData.filter,\n          customVariable: tempData.customVariable,\n          dataFormat: tempData.dataFormat ?? [],\n          lastLevelColumns: tempData.lastLevelColumns ?? [],\n          graphTypes: widgetData.graph_structure.chartType,\n          graphData: data,\n          colors: widgetData.graph_structure.colColours,\n        };\n        let response = await this.xsights.build(WidgetType.GRAPH, graphdata);\n        this.checkDashboardLoading();\n        resolve(response);\n      }\n    });\n  }\n  filterData(data: any, sourceId: any) {\n    let filterToApply = this.filters.filter(\n      (filter: any) => filter.sourceId.toString() == sourceId.toString()\n    );\n    filterToApply.forEach((filter: any) => {\n      if (filter.selValues.length) {\n        let validValues = filter.selValues.map((value: any) => value.text);\n        let temp: any = [];\n        let groupData = lodash.groupBy(data, filter.fieldName);\n        let allKeys = Object.keys(groupData);\n        allKeys.forEach((key) => {\n          if (validValues.includes(key)) {\n            temp.push(...groupData[key]);\n          }\n        });\n        data = temp;\n      }\n    });\n    return data;\n  }\n  checkDashboardLoading() {\n    const elements = document.querySelectorAll('.lds-ellipsis');\n    if (elements.length == 0) {\n      this.isDashboardLoaded.emit({\n        isLoaded: true,\n        hasSystemApi: this.showHeaderInputs,\n        dataFile: this.dataFile,\n      });\n    }\n  }\n  setGraphOrder(a: any, b: any) {\n    if (a.order < b.order) {\n      return -1;\n    }\n    if (a.order > b.order) {\n      return 1;\n    }\n    return 0;\n  }\n  async filteredDashboard() {\n    for (let index = 0; index < this.dashboardData.graphs.length; index++) {\n      const graph = this.dashboardData.graphs[index];\n      let res = null;\n      if (graph.graphType != 2) {\n        res = await this.generateDashboard(graph);\n        let tempGraphData = {\n          rows: graph.graph_structure.xAxis,\n          columns: graph.graph_structure.yAxis,\n          aggregationFunctions: graph.graph_structure.aggreagations,\n          filter: graph.graph_structure.filter,\n          customVariable: graph.graph_structure.derivedVariables,\n          dataFormat: [],\n          colToShow: null,\n          lastLevelColumns: graph.graph_structure.lastLevelData ?? [],\n          dateVariable: graph.graph_structure.dateVariable,\n          chartType: graph.graph_structure.chartType,\n        };\n        if (graph.sourceid.toString() == this.mtrSource) {\n          tempGraphData = this.dataService.keyConverter(\n            tempGraphData,\n            this.calledSourceKeys[graph.sourceid.toString()],\n            1\n          );\n        }\n        this.buildChart(graph, res, tempGraphData);\n      }\n    }\n  }\n  createJSONFileOfData(data: any) {\n  // console.log('data: ', data);\n    const blob = new Blob([JSON.stringify(data)], {\n      type: 'application/json',\n    });\n    return new File([blob], 'data.json');\n    // return new Promise((resolve, reject) => {\n    //   const outputStream = fs.createWriteStream('data.json');\n    //   const jsonWriter : any = JSONStream.stringify();\n\n    //   jsonWriter.pipe(outputStream);\n\n    //   for (const item of data) {\n    //     jsonWriter.write(item);\n    //   }\n\n    //   jsonWriter.end();\n\n    //   outputStream.on('finish', () => {\n    //     const file = fs.readFileSync('data.json');\n    //     resolve(file);\n    //   });\n    // })\n  }\n}\n","<div class=\"row\" *ngIf=\"dashboardData != null\">\n    <div class=\"col-md-12\">\n        <div class=\"dash_graph_sec\">\n            <div class=\"dash_graph\">\n                <div style=\"display: flex; background-color:#000;\" *ngIf=\"showHeader\">\n                    <h3 class=\"graph_name\" style=\"height: 44px;flex:auto;text-transform:capitalize;\">\n                        {{dashboardData.dashboard_name}} &nbsp; <span class=\"badge badge-warning\"\n                            *ngIf=\"dashboardData.dashboard_type == 1\">LIVE</span> </h3>\n                    <div class=\"row date-container\" *ngIf=\"showHeaderInputs\">\n                        <div class=\"col-lg-5\"> <label for=\"startDate\">From &nbsp;&nbsp;</label> <input type=\"date\"\n                                [(ngModel)]=\"fromDate\" id=\"startDate\" class=\"form-control\"> </div>\n                        <div class=\"col-lg-5\">\n                            <label for=\"endDate\">To &nbsp;&nbsp;</label> <input type=\"date\" [(ngModel)]=\"toDate\"\n                                id=\"endDate\" class=\"form-control\">\n                        </div>\n                        <div class=\"col-lg-2\">\n                            <i class=\"fa fa-search\" (click)=\"refreshSystemApis()\"></i>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"filter-container\" *ngIf=\"filters.length\">\n                    <h3>Filters:</h3>\n                    <div class=\"col-lg-12 row\">\n                        <div class=\"col-lg-3\" *ngFor=\"let filter of filters;let i = index\"> <ng-multiselect-dropdown\n                                [placeholder]=\"'Select ' + filter.fieldName + '...'\" [(ngModel)]=\"filter.selValues\"\n                                (onSelect)=\"filteredDashboard()\" (onDeSelect)=\"filteredDashboard()\"\n                                [settings]=\"dropdownSettings\" [data]=\"filter.values\"> </ng-multiselect-dropdown> </div>\n                    </div>\n                </div>\n                <div class=\"row graph_design\" id=\"dashboardScreen\" #dashboardScreen>\n                    <ng-container *ngFor=\"let graph of dashboardData.graphs;\">\n\n                        <ng-container *ngIf=\"graph.graphType != 3 && graph.graphType != 2\">\n                            <div class=\"dashboard-graph\"\n                                [ngClass]=\"{'col-lg-12': graph.graph_index == 1,'col-lg-6': graph.graph_index == 2,'col-lg-4': graph.graph_index == 3,'col-lg-3': graph.graph_index == 4}\"\n                                style=\"min-height: 370px; padding: 0px;\"> <!-- loader start -->\n                                <h3 *ngIf=\"graph.graph_structure.xAxis[0] != '***LABEL***'\" style=\"text-align: center; background-color: #eee; padding: 2px;\">{{graph.graphname}}</h3>\n                                <div [id]=\"'graph-'+ graph.graph_id\" style=\"position: relative; padding: 10px; padding-top: 45px;\">\n                                    <div class=\"lds-ellipsis\">\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                    </div> <!-- loader end -->\n                                </div>\n                            </div>\n                        </ng-container>\n                        <div *ngIf=\"graph.graphType == 2\" class=\"dashboard-graph\" [id]=\"'table-graph-'+ graph.graph_id\"\n                            [ngClass]=\"{'col-lg-12': graph.graph_index == 1,'col-lg-6': graph.graph_index == 2,'col-lg-4': graph.graph_index == 3,'col-lg-3': graph.graph_index == 4}\"\n                            style=\"display: flex; flex-direction: column; border-bottom: 0px; background-color:antiquewhite;\">\n                            <!-- loader start -->\n                            <h2 style=\"text-align: center; margin-bottom: 0px;\">{{graph.graphname}}</h2>\n                            <!-- loader end -->\n                        </div>\n                        <div *ngIf=\"graph.graphType == 3\" class=\"dashboard-graph\" [id]=\"'table-'+ graph.graph_id\"\n                            [ngClass]=\"{'col-lg-12': graph.graph_index == 1,'col-lg-6': graph.graph_index == 2,'col-lg-4': graph.graph_index == 3,'col-lg-3': graph.graph_index == 4}\"\n                            style=\"min-height: 300px; display: flex; flex-direction: column; padding-bottom: 2%;\">\n                            <!-- loader start -->\n                            <h3 style=\"text-align: center;\">{{graph.graphname}}</h3>\n                            <ng-container *ngIf=\"pivotTables.hasOwnProperty('table-' + graph.graph_id)\"> <dx-pivot-grid\n                                    [allowSortingBySummary]=\"true\" [allowSorting]=\"true\" [allowFiltering]=\"true\"\n                                    [showBorders]=\"true\" [dataSource]=\"pivotTables['table-' + graph.graph_id]\">\n                                    <dxo-field-chooser [enabled]=\"false\"></dxo-field-chooser> </dx-pivot-grid>\n                            </ng-container> <ng-container *ngIf=\"pivotTables['table-' + graph.graph_id] == undefined\">\n                                <div class=\"lds-ellipsis\">\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                </div>\n                            </ng-container> <!-- loader end -->\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\nimport * as Highcharts from 'highcharts';\nimport Drilldown from 'highcharts/modules/drilldown';\nimport * as lodash from 'lodash';\nimport HC_exporting from 'highcharts/modules/exporting';\nimport offlineExporting from 'highcharts/modules/offline-exporting';\nimport exportData from 'highcharts/modules/export-data';\nimport accessibility from 'highcharts/modules/accessibility';\nimport highStocks from 'highcharts/modules/stock';\nimport * as FileSave from 'file-saver';\n\n\nimport Decimal from 'decimal.js';\nimport {\n  GraphData,\n  GraphTypes,\n  GraphList,\n} from '../data-types/graph-interfaces';\nimport {\n  RangeFilter,\n  TrendsData,\n  TrendsList,\n} from '../data-types/trend-interfaces';\nimport {\n  AggregationFunction,\n  AggregationFunctionsType,\n} from '../data-types/aggregation-interfaces';\nimport {\n  CustomFilter,\n  CustomFilterTypes,\n  Filters,\n  FilterTypes,\n} from '../data-types/filter-interfaces';\nimport {\n  DerivedVariable,\n  DerivedVariableFilter,\n  DerivedVariableFilterCondition,\n} from '../data-types/derived-variable-interfaces';\nimport {\n  DataFormat,\n  DataType,\n  DateFormat,\n  TimeFormat,\n} from '../data-types/variable-types';\nimport {\n  Fields,\n  PivotFieldsArea,\n  PivotTableData,\n} from '../data-types/pivot-interfaces';\nimport PivotGridDataSource from 'devextreme/ui/pivot_grid/data_source';\nimport { DataPopupComponent } from '../components/data-popup/data-popup.component';\nimport { DataService } from '../services/data.service';\nimport { DatePipe } from '@angular/common';\nimport Swal from 'sweetalert2';\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\n\nHC_exporting(Highcharts);\nofflineExporting(Highcharts);\n// exportData(Highcharts);\nhighStocks(Highcharts);\naccessibility(Highcharts);\nDrilldown(Highcharts);\n\nexport enum WidgetType {\n  GRAPH = 'graph',\n  TREND = 'trend',\n  PIVOT_TABLE = 'pivot_table',\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class XsightsBackendService {\n  private systemApis = ['198', '138', '279'];\n  private modalData: any = {};\n  private highcharts: typeof Highcharts = Highcharts;\n  private divStyles =\n    'display: flex; justify-content: flex-start; align-items: center; position: absolute; top: 5px; left: 5px;';\n  private iconStyles =\n    'border: 2px solid #eee; padding: 5px; min-width: 28px; text-align: center; border-radius: 8px; background: #ccc; box-shadow: 2px 2px 2px #ccc; margin-right: 10px;';\n  private breadcrumbStyles =\n    'border: 2px solid #eee; padding: 5px;  background: #ccc; min-width: 28px; text-align: center; border-radius: 8px; display: flex; box-shadow: 2px 2px 2px #ccc; margin-right: 10px;';\n  private creditTitle = 'Powered by Axestrack';\n  private creditUrl = 'https://www.axestrack.com/';\n\n  private charts: GraphList = {};\n  private trends: TrendsList = {};\n\n  constructor(\n    private dialog: NgbModal,\n    private modalConfig: NgbModalConfig,\n    private dataService: DataService,\n    private datePipe: DatePipe\n  ) {\n    this.modalConfig.modalDialogClass = 'datapopup-dailog';\n    this.modalConfig.windowClass = 'datapopup-window';\n  }\n\n  public build(\n    widgetType: WidgetType,\n    widgetData: GraphData | TrendsData | PivotTableData\n  ): Promise<any> {\n    return new Promise((resolve, reject) => {\n      switch (widgetType) {\n        case WidgetType.GRAPH:\n          resolve(\n            this.buildGraph({\n              ...widgetData,\n              breadCrumb: ['Home'],\n              currLevel: 0,\n              prevLevelData: [],\n              selKeys: [],\n              order: 0,\n              colToShow: '',\n            } as GraphData)\n          );\n          break;\n        case WidgetType.TREND:\n          let widget: TrendsData = widgetData as TrendsData;\n          resolve(\n            this.buildTrend({\n              ...widget,\n              rawData: widget.graphData,\n              currLevel: 1,\n              order: 0,\n              prevLevelData: [],\n            } as TrendsData)\n          );\n          break;\n      }\n    });\n  }\n\n  //Graph Function\n  private async buildGraph(graphData: GraphData): Promise<boolean> {\n\n    //Set GraphObject with GraphId\n    this.charts[graphData.graphId] = graphData;\n    if (this.charts[graphData.graphId].rows[this.charts[graphData.graphId].currLevel] == '***LABEL***') {\n      //Create Label Block\n      let response = await this.publishLabel(graphData.graphId);\n      //Dispatch after build event\n      return response;\n    } else {\n      //Create Graph\n      let response = await this.startGraphBuilder(graphData.graphId);\n      //Dispatch after build event\n      return response;\n    }\n  }\n\n  private async publishLabel(graphId: string) {\n    //Flush Content of Graph Div\n    document.querySelector('#' + graphId)!.innerHTML = '';\n\n    //Labels Data creation\n    let htmlDiv = this.charts[graphId].graphData.map((y: any, yIndex:any) => {\n      return {\n        label: y.label,\n        value: y.value\n      };\n    });\n\n    //Creating Label Html DUMP\n    let html = `\n    <div class=\"card\" style=\"padding-top: 3%; padding-bottom: 3%; width: inherit;\">\n    ${\n      htmlDiv.length == 1\n        ? `<h3 style=\"text-align: center;\">${this.charts[graphId].graphTitle}</h3>`\n        : ``\n    }\n    <div class=\"graph-label\" >\n    ${htmlDiv\n      .map(\n        (d: any, index: any) => `\n        <div class=\"label-item\" ${\n          this.charts[graphId].colors[index] != undefined\n            ? `style=\"background-color: ${this.charts[graphId].colors[index]}\"`\n            : ''\n        } id=\"card-graph-${graphId}\" data=\"${\n          this.charts[graphId].columns[index]\n        }\">\n          <h3 style=\"${this.charts[graphId].graphData.length == 1 ? 'font-size: 18px;' : ''}\" data=\"${\n          this.charts[graphId].columns[index]\n        }\"><b data=\"${this.charts[graphId].columns[index]}\">${Math.round(\n          d.value\n        )}</b></h3>\n          ${\n            this.charts[graphId].graphData.length > 1\n              ? `<h3 data=\"${this.charts[graphId].columns[index]}\">` +\n                d.label +\n                '</h3>'\n              : ''\n          }\n        </div>\n\n        `\n      )\n      .join('')}\n        </div>\n    </div>`;\n\n    //Rendering Label HTML DUMP over document\n    document.querySelector('#' + graphId)!.innerHTML = html;\n\n    let _self = this;\n\n    //Label Click handler\n    document.querySelectorAll('#card-graph-' + graphId).forEach((card) =>\n      card.addEventListener('click', function (e: any) {\n        _self.charts[graphId].currLevel += 1;\n        _self.charts[graphId].prevLevelData.push(_self.charts[graphId].graphData);\n        let colToShow = e.target.getAttribute('data');\n        _self.charts[graphId].breadCrumb.push(colToShow);\n        let dataObj = {\n          graphId: graphId.split(\"-\")[1],\n          currLevel: _self.charts[graphId].currLevel,\n          colId: null,\n          selKey: [],\n          colToShow: colToShow,\n          direction: 0,\n          dataFilter: _self.charts[graphId].dashboardFilter,\n          adminId: _self.charts[graphId].adminId,\n          shareid: _self.charts[graphId].shareid ?? null,\n          startDate: _self.charts[graphId].range!.startDate ?? null,\n          endDate: _self.charts[graphId].range!.endDate ?? null\n        }\n        Swal.fire({\n          text: \"Please Wait...\",\n          allowOutsideClick: false\n        })\n        Swal.showLoading();\n        _self.dataService.getGraphDrilldownById(dataObj).then((res : any) => {\n          Swal.hideLoading();\n          Swal.close();\n          if (_self.charts[graphId].rows.length == 1) {\n            //Rendering Last level Component, Integer sortingDirection\n            _self.dataService.setModalData({\n              colToView: _self.charts[graphId].lastLevelColumns,\n              refData: res.data,\n            });\n            let modalOptions: any = {\n              panelClass: 'dataPopup-modal',\n              backdropClass: 'modal-backdrop',\n            };\n            _self.dialog.open(DataPopupComponent, modalOptions);\n          } else {\n            //Flush Label Content from document\n            document.querySelector('#' + graphId)!.innerHTML = '';\n            \n            _self.charts[graphId].graphData = res.data;\n            //Generating Child Graph of Label\n            _self.startGraphBuilder(graphId);\n          }\n        })\n      })\n    );\n    return true;\n  }\n\n  private async startGraphBuilder(\n    graphId: string\n  ) {\n   \n\n    // this.charts[graphId].currLevel = currLevel;\n    // this.charts[graphId].prevLevelData = [];\n    // this.charts[graphId].selKeys = [];\n    // this.charts[graphId].colToShow = colToShow;\n    // this.charts[graphId].currLevel = 0;\n    //Creating Chart Raw Json\n    let chartOptions: any = this.createChartData(graphId, this.charts[graphId].currLevel);\n\n    //Rendering Chart of GraphId\n    this.highcharts.chart(this.charts[graphId].graphId, chartOptions);\n\n    //Add Action Buttons Over Chart\n    this.addActionBtn(graphId);\n\n    return true;\n  }\n\n  private getPlotOptions(graphId: string, currLevel: number) {\n    let plotOptions: any = {\n      series: {\n        turboThreshold: 1000000,\n        dataLabels: {\n          color: 'black',\n          enabled: true,\n          style: {\n            color: 'black',\n            textShadow: false,\n            textDecoration: 'none',\n          },\n        },\n        label: {\n          style: {\n            color: 'black',\n          },\n        },\n      },\n    };\n\n    //Options for Stack Graph\n    if (\n      this.charts[graphId].graphTypes[currLevel] == GraphTypes.STACKED_BAR ||\n      this.charts[graphId].graphTypes[currLevel] == GraphTypes.STACKED_COLUMN\n    ) {\n      plotOptions.series['stacking'] = 'normal'; //Normal Stacking of y-axis\n    } else if (\n      this.charts[graphId].graphTypes[currLevel] ==\n        GraphTypes.STACKED_BAR_PERCENTAGE ||\n      this.charts[graphId].graphTypes[currLevel] ==\n        GraphTypes.STACKED_COLUMN_PERCENTAGE\n    ) {\n      plotOptions.series['stacking'] = 'percent'; //Stacking of y-axis on basis of percentage\n      //Add Percent Sign after y-axis values\n      plotOptions.series.dataLabels['formatter'] = function () {\n        return this.percentage.toFixed(2) + ' %';\n      };\n    }\n    return plotOptions;\n  }\n\n  private createChartData(graphId: string, currLevel: number) {\n    let _self = this;\n\n    //Getting Plot Options for Graph\n    let plotOptions = this.getPlotOptions(graphId, currLevel);\n\n    return {\n      credits: {\n        text: this.creditTitle,\n        href: this.creditUrl,\n        style: {\n          fontSize: '12px',\n        },\n      },\n      title: null,\n      plotOptions: plotOptions,\n      chart: {\n        events: {\n          //Handle Drilldown Event of Graph\n          drilldown: function (e: any) {\n            if(e.points != false) return\n            let chart: any = this;\n            //Show Loading in Chart\n            chart.showLoading('Loading...');\n            let currGraphId = e.point.options.graphId; //GraphId\n            let colId = e.point.colIndex; //ColorIndex of bar\n            //Increasing Graph Drilldown level\n            _self.charts[\"graph-\" + currGraphId].currLevel += 1;\n            _self.charts[\"graph-\" + currGraphId].breadCrumb.push(e.point.name);\n            _self.charts[\"graph-\" + currGraphId].selKeys?.push(e.point.name);\n            let dataObj = {\n              graphId: currGraphId,\n              currLevel: _self.charts[\"graph-\" + currGraphId].currLevel,\n              colId: colId,\n              selKey: _self.charts[\"graph-\" + currGraphId].selKeys,\n              colToShow: null,\n              direction: _self.charts[\"graph-\" + currGraphId].order,\n              dataFilter: _self.charts[\"graph-\" + currGraphId].dashboardFilter,\n              adminId: _self.charts[\"graph-\" + currGraphId].adminId,\n              shareid: _self.charts[\"graph-\" + currGraphId].shareid ?? null,\n              startDate: _self.charts[\"graph-\" + currGraphId].range!.startDate ?? null,\n              endDate: _self.charts[\"graph-\" + currGraphId].range!.endDate ?? null\n            }\n            _self.dataService.getGraphDrilldownById(dataObj).then((res : any) => {\n              //Open Last Level Component\n              if (\n\n                _self.charts[\"graph-\" + currGraphId].rows.length == _self.charts[\"graph-\" + currGraphId].currLevel\n              ) {\n                _self.dataService.setModalData({\n                  colToView: _self.charts[\"graph-\" + currGraphId].lastLevelColumns,\n                  refData: res.data,\n                });\n                let modalOptions = {\n                  panelClass: 'dataPopup-modal',\n                  backdropClass: 'modal-backdrop',\n                };\n                _self.dialog.open(DataPopupComponent, modalOptions);\n                //Reducing Graph Drilldown Level\n                _self.charts[\"graph-\" + currGraphId].currLevel -= 1;\n                _self.charts[\"graph-\" + currGraphId].selKeys?.pop();\n\n                setTimeout(() => {\n                  //Hide Loading in chart\n                  chart.hideLoading();\n                }, 1000);\n                return;\n              }else{\n                //Storing Previous Snapshot of Data to restore graph on back\n                _self.charts[\"graph-\" + currGraphId].prevLevelData.push(\n                  _self.charts[\"graph-\" + currGraphId].graphData\n                );\n\n                _self.manageBreadCrumb(\"graph-\" + currGraphId, _self);\n                //Getting drilldown series data\n                let series = res.data;\n    \n                // if (\n                //   _self.charts[\"graph-\" + currGraphId].graphTypes[0] ==\n                //     GraphTypes.STACKED_BAR_PERCENTAGE ||\n                //   _self.charts[\"graph-\" + currGraphId].graphTypes[0] ==\n                //     GraphTypes.STACKED_COLUMN_PERCENTAGE\n                // ) {\n                //   plotOptions.series['stacking'] = 'normal';\n                //   plotOptions.series.dataLabels['formatter'] = function () {\n                //     return this.y;\n                //   };\n                //   chart.update({\n                //     plotOptions: plotOptions,\n                //   });\n                // }\n                _self.charts[\"graph-\" + currGraphId].graphData = series;\n    \n                setTimeout(() => {\n                  //Hide Loading in chart\n                  chart.hideLoading();\n                  //Add Drilldown Series Data as Main Series\n                  chart.update({\n                    plotOptions: plotOptions,\n                    xAxis: {\n                      type: 'category',\n                      labels: {\n                        style: {\n                          color: 'red',\n                          textDecoration: 'none',\n                          textOutline: '0px',\n                        },\n                      },\n                      min: 0,\n                      max: 6,\n                      allowDecimals: false,\n                      scrollbar: {\n                        enabled: true,\n                      },\n                    },\n                    series: series\n                  })\n                  // .addSeriesAsDrilldown(e.point, {\n                  //   data: [series],\n                  //   name: e.point.name\n                  // });\n                }, 1000);\n              }\n            })\n\n\n\n          },\n          //Handle DrillUp Event\n          drillup: async function (e: any) {\n            // let currGraphId = e.seriesOptions.graphId; //GraphId\n            // let level = e.seriesOptions.level; //Current Level of Drilldown\n            // let chart: any = this;\n            // _self.charts[\"graph-\" + currGraphId].currLevel = level;\n\n            // //Restoring Data using previous store data\n            // _self.charts[\"graph-\" + currGraphId].graphData = await _self.charts[\n            //   \"graph-\" + currGraphId\n            // ].prevLevelData[level];\n\n            // //Refresh Previous Data List\n            // _self.charts[\"graph-\" + currGraphId].prevLevelData.splice(level, 1);\n            // _self.charts[\"graph-\" + currGraphId].selKeys?.pop();\n            // _self.charts\n            // if (\n            //   level == 0 &&\n            //   (_self.charts[\"graph-\" + currGraphId].graphTypes[0] ==\n            //     GraphTypes.STACKED_BAR_PERCENTAGE ||\n            //     _self.charts[\"graph-\" + currGraphId].graphTypes[0] ==\n            //       GraphTypes.STACKED_COLUMN_PERCENTAGE)\n            // ) {\n            //   plotOptions.series['stacking'] = 'percent'; //Stacking of y-axis on basis of percentage\n            //   //Add Percent Sign after y-axis values\n            //   plotOptions.series.dataLabels['formatter'] = function () {\n            //     return this.percentage.toFixed(2) + ' %';\n            //   };\n\n            //   chart.update({\n            //     plotOptions: plotOptions,\n            //     series: _self.charts[\"graph-\" + currGraphId].graphData\n            //   });\n            // }\n          },\n        },\n      },\n      //Configuring X-axis\n      xAxis: {\n        type: 'category',\n        labels: {\n          style: {\n            color: 'red',\n            textDecoration: 'none',\n            textOutline: '0px',\n          },\n        },\n        min: 0,\n        max:\n          Object.keys(this.charts[graphId].graphData[0].data).length <= 6\n            ? Object.keys(this.charts[graphId].graphData[0].data).length - 1\n            : 6,\n        allowDecimals: false,\n        scrollbar: {\n          enabled: true,\n        },\n      },\n      //Configuring Y-axis\n      yAxis: lodash.map(this.charts[graphId].columns, (y: any) => {\n        return {\n          opposite: true,\n          title: {\n            text: null, // Hiding vertical labels over y-axis\n          },\n        };\n      }),\n      //Getting Main Series Data\n      series: this.charts[graphId].graphData\n    };\n  }\n\n  private sortGraph(e: any) {\n    const tempArr = e.target.id.split('@');\n    const graphId = tempArr[tempArr.length - 1];\n    if (this.charts[graphId].order < 1) {\n      this.charts[graphId].order += 1;\n    } else {\n      this.charts[graphId].order = -1;\n    }\n    let d = {\n      graphId: graphId.split(\"-\")[1],\n      dataFilter: this.charts[graphId].dashboardFilter,\n      direction: this.charts[graphId].order,\n      adminId: this.charts[graphId].adminId,\n      shareid: this.charts[graphId].shareid ?? null,\n      startDate: this.charts[graphId].range!.startDate ?? null,\n      endDate: this.charts[graphId].range!.endDate ?? null\n    }\n    Swal.fire({\n      text: \"Please Wait...\",\n      allowOutsideClick: false\n    })\n    Swal.showLoading();\n    this.dataService.getGraphDataById(d).then((res: any) => {\n      Swal.hideLoading();\n      Swal.close();\n      this.charts[graphId].graphData = res.data;\n      this.buildGraph({...this.charts[graphId], \n        breadCrumb: ['Home'],\n        currLevel: 0,\n        selKeys: [],\n        prevLevelData: [],\n        colToShow: ''});\n    })\n  }\n\n  private addActionBtn(graphId: string) {\n    let _self = this;\n    const div = document.createElement('div');\n    div.setAttribute('style', this.divStyles);\n    div.setAttribute(\"id\", \"graph-options-\" + graphId);\n    const sortIcon = document.createElement('i');\n    sortIcon.setAttribute('id', 'sort@' + graphId);\n    sortIcon.setAttribute('style', this.iconStyles);\n    if (this.charts[graphId].order == 1) {\n      sortIcon.setAttribute('class', 'fa fa-sort-amount-desc');\n    } else if (this.charts[graphId].order == -1) {\n      sortIcon.setAttribute('class', 'fa fa-sort-amount-asc');\n    } else {\n      sortIcon.setAttribute('class', 'fa fa-sort');\n    }\n    const downloadIcon = document.createElement(\"i\");\n    downloadIcon.setAttribute('id', 'download@' + graphId);\n    downloadIcon.setAttribute('style', this.iconStyles);\n    downloadIcon.setAttribute('class', 'fa fa-download')\n\n    div.appendChild(downloadIcon);\n    div.appendChild(sortIcon);\n    div.appendChild(sortIcon);\n    document.querySelector('#' + graphId)!.appendChild(div);\n    // if (this.charts[graphId].rows[0] == '***LABEL***') {\n    // }\n    this.manageBreadCrumb(graphId, this);\n    sortIcon.addEventListener('click', function (e) {\n      _self.sortGraph(e);\n    });\n    downloadIcon.addEventListener('click', function (e: any) {\n      const tempArr = e.target.id.split('@');\n      const graphId = tempArr[tempArr.length - 1];\n      let dataObj = {\n        graphId: graphId.split(\"-\")[1],\n        currLevel: _self.charts[graphId].currLevel,\n        colId: null,\n        selKey: _self.charts[graphId].selKeys,\n        colToShow: null,\n        direction: 0,\n        dataFilter: _self.charts[graphId].dashboardFilter,\n        adminId: _self.charts[graphId].adminId,\n        shareid: _self.charts[graphId].shareid ?? null,\n        startDate: _self.datePipe.transform(_self.charts[graphId].range!.startDate,\"yyyy-MM-dd\"),\n        endDate: _self.datePipe.transform(_self.charts[graphId].range!.endDate,\"yyyy-MM-dd\"),\n        fetchRawData: true\n      }\n      _self.downloadGraphData(e,graphId, dataObj,_self.charts[graphId].lastLevelColumns);\n    });\n  }\n  \n  private downloadGraphData(e: any,graphId: any, data: any, lastLevelCol: any){\n    Swal.fire({\n      text: \"Downloading...\",\n      allowOutsideClick: false\n    })\n    Swal.showLoading();\n    this.dataService.downloadDrilldownById(data).subscribe((res : any) => {\n      //Open Last Level Component\n      this.download(res)\n      // this.dataService.setModalData({\n      //   colToView: lastLevelCol,\n      //   refData: res.data,\n      // });\n      // let modalOptions = {\n      //   panelClass: 'dataPopup-modal',\n      //   backdropClass: 'modal-backdrop',\n      // };\n      // this.dialog.open(DataPopupComponent, modalOptions);\n    })\n  }\n\n\n  download(httpEvent: HttpEvent<string> | Blob): void {\n    // Swal.fire({text: \"Downloading...\"})\n    // Swal.showLoading()\n    switch (httpEvent.type) {\n      case HttpEventType.Sent:\n        break;\n      case HttpEventType.ResponseHeader:\n        break;\n      case HttpEventType.DownloadProgress:\n        break;\n        case HttpEventType.Response:\n          if ((httpEvent.body as any) instanceof Array) {\n          } else {\n          Swal.close()\n          Swal.hideLoading()\n          let EXCEL_TYPE =\n            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n          let EXCEL_EXTENSION = '.xlsx';\n          const data = new Blob([httpEvent.body!], {\n            type: EXCEL_TYPE,\n          });\n          FileSave.saveAs(data, \"data.xls\");\n        }\n    }\n  }\n\n\n\n\n  private manageBreadCrumb(graphId: string, _self: any) {\n    const div = document.getElementById(\"graph-options-\" + graphId);\n    document.getElementById(\"breadcrumb-\" + graphId)?.remove();\n    const breadCrumb = document.createElement(\"div\");\n    if(_self.charts[graphId].breadCrumb.length == 1){\n      return;\n    }\n\n    breadCrumb.setAttribute('style', this.breadcrumbStyles);\n    breadCrumb.setAttribute('id', \"breadcrumb-\" + graphId);\n    // homeIcon.setAttribute('id', 'home-label-' + graphId);\n    // homeIcon.setAttribute('class', 'fa fa-home');\n    _self.charts[graphId].breadCrumb.forEach((breadcrumb: any, index: any) => {\n      const para = document.createElement(\"p\");\n      const span = document.createElement(\"span\");\n      span.setAttribute(\"style\", \"text-decoration: underline; cursor: pointer;\")\n      span.setAttribute(\"id\", breadcrumb);\n      span.append(breadcrumb);\n      para.appendChild(span);\n      para.setAttribute(\"style\", \"margin-bottom: 0px;\")\n      if (index != this.charts[graphId].breadCrumb.length - 1) {\n        para.append(\" > \");\n        span.addEventListener(\"click\", (event :any) => {\n          if(event.target.id == \"Home\"){\n              let d = {\n                graphId: graphId.split(\"-\")[1],\n                dataFilter: this.charts[graphId].dashboardFilter,\n                direction: this.charts[graphId].order,\n                adminId: this.charts[graphId].adminId,\n                shareid: this.charts[graphId].shareid ?? null,\n                startDate: this.charts[graphId].range!.startDate ?? null,\n                endDate: this.charts[graphId].range!.endDate ?? null\n              }\n              Swal.fire({\n                text: \"Please Wait...\",\n                allowOutsideClick: false\n              })\n              Swal.showLoading();\n              this.dataService.getGraphDataById(d).then((res: any) => {\n                this.charts[graphId].graphData = res.data;\n                Swal.hideLoading();\n                Swal.close()\n                this.buildGraph({...this.charts[graphId], \n                  breadCrumb: ['Home'],\n                  currLevel: 0,\n                  selKeys: [],\n                  order: 0,\n                  prevLevelData: [],\n                  colToShow: ''});\n              })\n            // _this.charts[graphId].graphData = _this.charts[graphId].prevLevelData[0];\n            // _this.buildGraph({\n            //   ..._this.charts[graphId],\n            //   breadCrumb: ['Home'],\n            //   currLevel: 0,\n            //   prevLevelData: [],\n            //   order: 0,\n            //   selKeys: [],\n            //   colToShow: '',\n            // } as GraphData)\n          }else{\n            const index = _this.charts[graphId].breadCrumb.findIndex((el: any) => el == event.target.id);\n            if(index > 0){\n              // this.buildGraph()\n              //Restoring Data using previous store data\n              _this.charts[graphId].currLevel = index;\n              _this.charts[graphId].graphData = _this.charts[graphId].prevLevelData[index];\n              \n              //Refresh Previous Data List\n              _this.charts[graphId].prevLevelData = _this.charts[graphId].prevLevelData.slice(0, index);\n  \n              _this.charts[graphId].breadCrumb = _this.charts[graphId].breadCrumb.slice(0, index + 1);\n              \n              _this.charts[graphId].selKeys = _this.charts[graphId].selKeys?.slice(0, index);\n              \n              _this.buildGraph({\n                ..._this.charts[graphId],\n              } as GraphData)\n            }\n          }\n        })\n      }\n      breadCrumb.appendChild(para);\n      let _this = this;\n    });\n    div!.appendChild(breadCrumb);\n  }\n\n  //trends Data\n  private buildTrend(trendData: TrendsData) {\n    \n    //Set TrendsObject with GraphId\n    this.trends[trendData.graphId] = trendData;\n\n    this.initTrend(trendData.graphId);\n  }\n\n  private async initTrend(graphId: any) {\n\n    //Creating Chart Raw Json\n    const trendData: any = await this.createTrendData(graphId);\n\n    //Rendering Chart of GraphId\n    setTimeout(() => {\n      this.highcharts.chart(graphId, trendData);\n    }, 500)\n\n    this.addActionBtnTrends(graphId);\n\n    return true;\n  }\n\n  private addActionBtnTrends(graphId: string) {\n    if(this.systemApis.includes(this.trends[graphId].sourceId)){\n      return;\n    }\n    let _self = this;\n    const div = document.createElement('div');\n    div.setAttribute('style', this.divStyles);\n    let calendarIcon = document.createElement('i'); //Calendar Icon\n    calendarIcon.setAttribute('style', this.iconStyles);\n    calendarIcon.setAttribute('class', 'fa fa-calendar');\n    const downloadIcon = document.createElement(\"i\");\n    downloadIcon.setAttribute('id', 'download@' + graphId);\n    downloadIcon.setAttribute('style', this.iconStyles);\n    downloadIcon.setAttribute('class', 'fa fa-download')\n\n    div.appendChild(downloadIcon);\n    div.appendChild(calendarIcon);\n    //Calendar Icon Click handler\n    calendarIcon.addEventListener('click', function (e: any) {\n      var _a;\n      if (e.target.localName == 'i') {\n        if (\n          ((_a = document.getElementById('hidden-date-' + graphId)) === null ||\n          _a === void 0\n            ? void 0\n            : _a.style.display) == 'block'\n        ) {\n          document.getElementById('hidden-date-' + graphId)!.style.display =\n            'none'; // Hide Change Date modal\n        } else {\n          document.getElementById('hidden-date-' + graphId)!.style.display =\n            'block'; //Show Change Date modal\n        }\n      }\n    });\n    let div2 = document.createElement('div'); //Change Date Modal\n    div2.setAttribute(\n      'style',\n      this.divStyles +\n        'display: none;padding: 30%;height: 220px;background-color: #ccc;width: 172px;border-radius: 5px;'\n    );\n    div2.setAttribute('id', 'hidden-date-' + graphId);\n    let startDateInput = document.createElement('input'); //Start Date Input\n    let startDateLabel = document.createElement('label');\n    startDateLabel.innerHTML = 'Start Date';\n    startDateInput.setAttribute('type', 'date');\n    startDateInput.setAttribute('class', 'form-control startDate-' + graphId);\n    startDateInput.setAttribute('value', this.trends[graphId].range.startDate);\n    let endDateInput = document.createElement('input'); //End Date Input\n    let endDateLabel = document.createElement('label');\n    endDateLabel.innerHTML = 'End Date';\n    endDateInput.setAttribute('type', 'date');\n    endDateInput.setAttribute('class', 'form-control endDate-' + graphId);\n    endDateInput.setAttribute('value', this.trends[graphId].range.endDate);\n    let submitButton = document.createElement('button');\n    submitButton.innerHTML = 'Done';\n    submitButton.setAttribute('class', 'btn btn-success');\n    submitButton.setAttribute('style', 'float: right;');\n    //Handle Submit button click\n    submitButton.addEventListener('click', function () {\n      let startDate: any = document.querySelector('.startDate-' + graphId);\n      let endDate: any = document.querySelector('.endDate-' + graphId);\n      let d = {\n        graphId: graphId.split(\"-\")[1],\n        dataFilter: _self.trends[graphId].dashboardFilter,\n        direction: _self.trends[graphId].order,\n        adminId: _self.trends[graphId].adminId,\n        shareid: _self.trends[graphId].shareid ?? null,\n        startDate: startDate.value,\n        endDate: endDate.value\n      }\n      Swal.fire({\n        text: \"Please Wait...\",\n        allowOutsideClick: false\n      })\n      Swal.showLoading();\n      _self.dataService.getGraphDataById(d).then((res: any) => {\n        _self.trends[graphId].graphData = res.data;\n        Swal.hideLoading();\n        Swal.close();\n        _self.buildTrend(_self.trends[graphId]);\n      })\n      document.getElementById('hidden-date-' + graphId)!.style.display = 'none';\n    });\n    div2.append(\n      startDateLabel,\n      startDateInput,\n      document.createElement('br'),\n      endDateLabel,\n      endDateInput,\n      document.createElement('br'),\n      submitButton\n    ); // Appending Inputs in Change Date Modal\n    div.append(calendarIcon); //Add Calendar icon in action button\n    div.appendChild(div2); //Add Change Date modal in action button\n    document.querySelector('#' + graphId)!.appendChild(div); //Rendering action buttons to graph div\n    downloadIcon.addEventListener('click', function (e: any) {\n      const tempArr = e.target.id.split('@');\n      const graphId = tempArr[tempArr.length - 1];\n      let dataObj = {\n        graphId: graphId.split(\"-\")[1],\n        currLevel: 0,\n        colId: null,\n        selKey: _self.trends[graphId].selKeys,\n        colToShow: null,\n        direction: 0,\n        dataFilter: _self.trends[graphId].dashboardFilter,\n        adminId: _self.trends[graphId].adminId,\n        shareid: _self.trends[graphId].shareid ?? null,\n        startDate: _self.datePipe.transform(_self.trends[graphId].range!.startDate,\"yyyy-MM-dd\"),\n        endDate: _self.datePipe.transform(_self.trends[graphId].range!.endDate,\"yyyy-MM-dd\"),\n        fetchRawData: true\n      }\n      _self.downloadGraphData(e,graphId, dataObj,_self.trends[graphId].lastLevelColumns);\n    });\n  }\n\n  private getPlotOptionsTrends(graphId: string) {\n    let plotOptions = {\n      series: {\n        turboThreshold: 10000,\n        dataLabels: {\n          color: 'black',\n          enabled: true,\n          style: {\n            color: 'black',\n            textShadow: false,\n            textDecoration: 'none',\n          },\n        },\n        label: {\n          style: {\n            color: 'black',\n          },\n        },\n      },\n    };\n    return plotOptions;\n  }\n\n  private createTrendData(graphId: any): any {\n    let _self = this;\n\n    //Getting Plot Options for Graph\n    const plotOptions = this.getPlotOptionsTrends(graphId);\n\n    return {\n      credits: {\n        text: this.creditTitle,\n        href: this.creditUrl,\n        style: {\n          fontSize: '12px',\n        },\n      },\n      title: null,\n      plotOptions: plotOptions,\n      chart: {\n        type: 'line',\n        events: {\n          //Handle Drilldown Event of Graph\n          drilldown: function (e: any) {\n            if(e.points != false) return \n            let currGraphId = e.target.userOptions.series[0].graphId; //GraphId\n            let colIndex = e.point.colIndex; //ColorIndex of bar\n            let comparisonKey = e.point.options.comparisonKey; //ColorIndex of bar\n            let chart : any = this;\n            chart.showLoading('Loading...');\n            let selKey = e.point.name;\n            let dataObj = {\n              graphId: currGraphId,\n              currLevel: 1,\n              colId: colIndex,\n              selKey: [selKey],\n              colToShow: null,\n              direction: 0,\n              dataFilter: _self.trends[\"graph-\" + currGraphId].dashboardFilter,\n              adminId: _self.trends[\"graph-\" + currGraphId].adminId,\n              shareid: _self.trends[\"graph-\" + currGraphId].shareid ?? null,\n              startDate: _self.datePipe.transform(_self.trends[\"graph-\" + currGraphId].range.startDate,\"yyyy-MM-dd\"),\n              endDate: _self.datePipe.transform(_self.trends[\"graph-\" + currGraphId].range.endDate,\"yyyy-MM-dd\")\n            }\n            if(comparisonKey != null){\n              dataObj.selKey.push(comparisonKey);\n            }\n            _self.dataService.getGraphDrilldownById(dataObj).then((res : any) => {\n              //Open Last Level Component\n             \n              _self.dataService.setModalData({\n                colToView: _self.trends[\"graph-\" + currGraphId].lastLevelColumns,\n                refData: res.data,\n              });\n              let modalOptions = {\n                panelClass: 'dataPopup-modal',\n                backdropClass: 'modal-backdrop',\n              };\n              _self.dialog.open(DataPopupComponent, modalOptions);\n\n              setTimeout(() => {\n                //Hide Loading in chart\n                chart.hideLoading();\n              }, 1000);\n              // return;\n            })\n          },\n        },\n      },\n      xAxis: {\n        type: 'category',\n        labels: {\n          style: {\n            color: 'red',\n            textDecoration: 'none',\n            textOutline: '0px',\n          },\n        },\n        min: 0,\n        allowDecimals: false,\n        scrollbar: {\n          enabled: true,\n        },\n      },\n      yAxis: [\n        {\n          opposite: true,\n          title: {\n            text: null,\n          },\n        },\n      ],\n      series: this.trends[graphId].graphData,\n    };\n  }\n}","import { DatePipe } from '@angular/common';\nimport { Component, Input, OnInit, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { WidgetType, XSightsCoreService } from '../../x-sights-core.service';\nimport { XsightsBackendService } from '../../services/xsights-backend.service';\n\n@Component({\n  selector: 'x-sights-widget',\n  templateUrl: './x-sights-widget.component.html',\n  styleUrls: ['./x-sights-widget.component.scss'],\n})\nexport class XSightsWidgetComponent implements OnInit {\n  @Input() widgetId: number = 0;\n  @Input() graphPrefix: string = '';\n  @Input() startDate: any = null;\n  @Input() endDate: any = null;\n  @Input() adminId: any = '0';\n  @Input() isLoad: boolean = true;\n  @Output() widgetLoaded: EventEmitter<any> = new EventEmitter();\n  @Input() graphData: any = null;\n  fields: any = [];\n  pivotTable: any = null;\n  structure: any = null;\n\n  constructor(\n    private xsights: XSightsCoreService,\n    private xsightsBackend: XsightsBackendService,\n    private dataService: DataService,\n    private datePipe: DatePipe\n  ) {\n    if (this.startDate == null) {\n      this.startDate = this.datePipe.transform(\n        new Date(new Date().setDate(new Date().getDate() - 3)),\n        'yyyy-MM-dd'\n      );\n    }\n    if (this.endDate == null) {\n      this.endDate = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n    }\n  }\n\n  ngOnInit(): void {\n    \n  }\n  ngAfterContentInit() {\n    //Called after ngOnInit when the component's or directive's content has been initialized.\n    //Add 'implements AfterContentInit' to the class.\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n    //Add '${implements OnChanges}' to the class.\n    if (\n      changes['widgetId'].currentValue != changes['widgetId'].previousValue ||\n      changes['adminId'].currentValue != changes['adminId'].previousValue ||\n      changes['startDate'].currentValue != changes['startDate'].previousValue ||\n      changes['endDate'].currentValue != changes['endDate'].previousValue\n    ) {\n      this.renderWidget();\n    }\n  }\n\n  renderWidget() {\n    if(this.isLoad){\n      this.drawWidgetById().then(() => {\n        this.widgetLoaded.emit({\n          isLoaded: true\n        });\n      });\n    }else{\n      this.widgetLoaded.emit({\n        isLoaded: true\n      });\n    }\n  }\n\n  drawWidgetById() {\n    return new Promise(async (resolve, reject) => {\n        let d = {\n          graphId: this.widgetId,\n          dataFilter: {},\n          direction: 0,\n          adminId: this.adminId,\n          shareid: null\n        }\n        let structure = JSON.parse(this.graphData.structure);\n        this.structure = structure;\n        this.dataService.getGraphDataById(d).then((res: any) => {\n          let graphData = res.data;\n          \n          if (this.graphData.graphtype != 2) {\n            let tempGraphData = {\n              rows: structure.xAxis,\n              columns: structure.yAxis,\n              aggregationFunctions: structure.aggreagations,\n              filter: structure.filter,\n              customVariable: structure.derivedVariables,\n              dataFormat: [],\n              colToShow: null,\n              lastLevelColumns: structure.lastLevelData ?? [],\n              chartType: structure.chartType,\n              rangeFilter: structure.rangeFilter,\n              dateVariable: structure.dateVariable,\n              comparison: structure.comparison,\n              colColours: structure.colColours,\n              startDate: structure.startDate,\n              endDate: structure.endDate\n            };\n            this.buildChart(this.graphData, graphData, tempGraphData);\n          }\n        });\n    })\n  }\n\n  buildChart(widgetData: any, data: any, tempData: any) {\n    let _self = this;\n    return new Promise(async (resolve, reject) => {\n      if (widgetData.graphtype == 1) {\n        let range = {\n          startDate: this.datePipe.transform(\n            tempData.startDate,\n            'yyyy-MM-dd'\n          ),\n          endDate: this.datePipe.transform(\n            tempData.endDate,\n            'yyyy-MM-dd'\n          ),\n        };\n        let graphData = {\n          graphId: 'graph-' + widgetData.id,\n          graphTitle: widgetData.graphname,\n          rows: tempData.rows[0],\n          columns: tempData.columns[0],\n          graphTypes: tempData.chartType[0],\n          graphData: data,\n          aggregationFunctions: tempData.aggregationFunctions[0],\n          filter: tempData.filter,\n          colors: tempData.colColours[0],\n          range: range,\n          dateVariable: tempData.dateVariable,\n          rangeFilter: tempData.rangeFilter,\n          comparison: tempData.comparison ?? [],\n          customVariable: tempData.customVariable,\n          dataFormat: tempData.dataFormat ?? [],\n          lastLevelColumns: tempData.lastLevelColumns ?? [],\n          selKeys: [],\n          adminId: this.adminId,\n          sourceId: widgetData.sourceid,\n          dashboardFilter: []\n        };\n        let response = await _self.xsightsBackend.build(WidgetType.TREND, graphData);\n        resolve(response);\n      } else if (widgetData.graphtype == 3) {\n        let tableData = {\n          rows: tempData.rows,\n          column: tempData.columns,\n          aggregationFunction: tempData.aggregationFunctions,\n          filter: tempData.filter,\n          derivedVariables: tempData.customVariable,\n          dataFormat: tempData.dataFormat ?? [],\n          data: data,\n          categories: tempData.chartType\n        };\n        _self.pivotTable =\n          await _self.xsights.build(WidgetType.PIVOT_TABLE, tableData);\n        resolve(true);\n      } else {\n        let graphdata = {\n          graphId: 'graph-' + widgetData.id,\n          graphTitle: widgetData.graphname,\n          rows: tempData.rows,\n          adminId: this.adminId,\n          columns: tempData.columns,\n          aggregationFunctions: tempData.aggregationFunctions,\n          filter: tempData.filter,\n          customVariable: tempData.customVariable,\n          selKeys: [],\n          sourceId: widgetData.sourceid,\n          dataFormat: tempData.dataFormat ?? [],\n          lastLevelColumns: tempData.lastLevelColumns ?? [],\n          graphTypes: tempData.chartType,\n          graphData: data,\n          colors: tempData.colColours,\n          dashboardFilter: []\n        };\n        setTimeout(() => {\n          let response = this.xsightsBackend.build(WidgetType.GRAPH, graphdata);\n        }, 500)\n        resolve(true);\n      }\n    });\n  }\n}\n","<ng-container *ngIf=\"graphData != null\">\n    <div class=\"header-classs\" *ngIf=\"graphData.graphtype == 2\">\n        <h3>{{graphData.name}}</h3>\n    </div>\n    <div class=\"graph-class\" *ngIf=\"graphData.graphtype != 2 && !isLoad\">\n        <h3>{{graphData.name}}</h3>\n    </div>\n    <ng-container *ngIf=\"isLoad && graphData.graphtype != 2 && graphData.graphtype != 3\">\n        <div class=\"widgetContainer\" style=\"padding: 0px;\"> <!-- loader start -->\n            <h3 *ngIf=\"graphData.structure.xAxis[0] != '***LABEL***'\" style=\"text-align: center; background-color: #eee; padding: 2px;\">{{graphData.name}}</h3>\n            <div [id]=\"'graph-' + graphPrefix + widgetId\"  style=\"position: relative; padding: 10px; padding-top: 45px;\">\n                <div class=\"lds-ellipsis\">\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                </div> <!-- loader end -->\n            </div>\n        </div>\n    </ng-container>\n    <div *ngIf=\"isLoad && graphData.graphtype == 3 && pivotTable\"\n        style=\"display: flex; flex-direction:column; width: 100%; align-items: center;\">\n        <p style=\"font-size: 16px; font-weight: 600;\">{{graphData.name}}</p> <dx-pivot-grid [allowSortingBySummary]=\"true\"\n            [allowSorting]=\"true\" [allowFiltering]=\"true\" [showBorders]=\"true\" [dataSource]=\"pivotTable\"> <dxo-field-chooser\n                [enabled]=\"false\"></dxo-field-chooser> </dx-pivot-grid>\n    </div>\n</ng-container>","import { DatePipe } from '@angular/common';\nimport { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport * as lodash from 'lodash';\nimport { ToastrService } from 'ngx-toastr';\nimport { DataService } from '../../services/data.service';\nimport { WidgetType, XSightsCoreService } from '../../x-sights-core.service';\nimport Swal from 'sweetalert2';\nimport { XsightsBackendService } from '../../services/xsights-backend.service';\n\n\n@Component({\n  selector: 'lib-x-sights-backend-dashboard',\n  templateUrl: './x-sights-backend-dashboard.component.html',\n  styleUrls: ['./x-sights-backend-dashboard.component.css']\n})\nexport class XSightsBackendDashboardComponent implements OnInit {\n\n  private systemApis = ['198', '138', '279'];\n  private mtrSource = '138';\n  @Input() dashboardId: number = 0;\n  @Input() adminId: any = '0';\n  @Input() showHeader: boolean = true;\n  @Input() showFilters: boolean = true;\n  @Input() startDate: any = null;\n  @Input() endDate: any = null;\n  @Input() toggleDashboard: boolean = false;\n\n  @Output() isDashboardLoaded: EventEmitter<any> = new EventEmitter();\n  @Output() showLoading: EventEmitter<Boolean> = new EventEmitter();\n\n  dashboardData: any = null;\n  fromDate: any = null;\n  toDate: any = null;\n  showHeaderInputs: any = false;\n  filters: any = [];\n  selFilters: any = {};\n\n  liveRefreshMin: any = 5;\n  seriesData: any = {};\n  pivotTables: any = {};\n  dashPublicUrl: any = '';\n  dashboardInterval: any;\n  dropdownSettings: any = {};\n  tableGraphs : any = []\n  calledSourceData : any = {};\n\n  constructor(\n    private xsightsBackend: XsightsBackendService,\n    private xsights: XSightsCoreService,\n    private toastService: ToastrService,\n    private datePipe: DatePipe,\n    private dataService: DataService\n  ) {\n    if (this.startDate == null) {\n      this.fromDate = this.datePipe.transform(\n        new Date(new Date().setDate(new Date().getDate() - 3)),\n        'yyyy-MM-dd'\n      );\n    } else {\n      this.fromDate = this.startDate;\n    }\n    if (this.endDate == null) {\n      this.toDate = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n    } else {\n      this.toDate = this.endDate;\n    }\n  }\n\n  ngOnInit() {\n    this.dropdownSettings = {\n      singleSelection: false,\n      enableCheckAll: false,\n      allowSearchFilter: true,\n    };\n    // this.renderPage();\n  }\n\n  renderPage() {\n    this.showLoading.emit(true);\n    this.getGraphDashBoardById();\n  }\n\n  ngOnDestroy() {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    clearInterval(this.dashboardInterval);\n  }\n  ngOnChanges(changes: SimpleChanges) {\n    //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n    //Add '${implements OnChanges}' to the class.\n    if (\n      changes['dashboardId']?.currentValue !=\n        changes['dashboardId']?.previousValue ||\n      changes['adminId']?.currentValue != changes['adminId']?.previousValue ||\n      changes['showHeader']?.currentValue !=\n        changes['showHeader']?.previousValue ||\n      changes['showFilters']?.currentValue !=\n        changes['showFilters']?.previousValue ||\n      changes['toggleDashboard']?.currentValue !=\n        changes['toggleDashboard']?.previousValue\n    ) {\n      this.renderPage();\n    }\n  }\n \n  getGraphDashBoardById() {\n    let filter : any = {}\n    this.filters.forEach((f: any) => {\n      if(filter[f.sourceId]){\n        filter[f.sourceId] = {\n          ...filter[f.sourceId],\n          [f.fieldName]: f.selValues.map((value: any) => value.text)\n        }\n      }else{\n        filter[f.sourceId] = {\n          [f.fieldName]: f.selValues.map((value: any) => value.text)\n        }\n      }\n    })\n    this.selFilters = filter;\n    let data = {\n      dashboardId: this.dashboardId,\n      filters: filter,\n      startDate: this.startDate == null ? null : this.datePipe.transform(new Date(this.startDate), \"yyyy-MM-dd\"),\n      endDate: this.endDate == null ? null : this.datePipe.transform(new Date(this.endDate), \"yyyy-MM-dd\")\n    }\n\n    if(this.isDateDifferenceGreaterThan15Days(this.startDate, this.endDate)){\n      Swal.fire({\n        title: \"Error\",\n        text: \"Date range greater than 30 days is not supported\",\n        icon: \"error\",\n        showCloseButton: true\n      })\n      this.showLoading.emit(false);\n      return;\n    }\n    this.dataService\n      .getGraphDashBoardById(data, this.adminId)\n      .then(async (res: any) => {\n        this.showLoading.emit(false);\n        this.filters = this.filters.length == 0 ? res.data[0]?.filters.map((filter: any) => {\n          filter[\"values\"] = JSON.parse(filter[\"values\"]).map((value: any, index: any) => {\n            return {\n              id: index,\n              text: value\n            }\n          }) \n          filter[\"selValues\"] = filter[\"selValues\"] ? filter[\"selValues\"] : [];\n          return filter;\n        }) ?? [] : this.filters;\n        this.seriesData = res.data[0]?.seriesData;\n        res.data[0].graphs = res.data[0].graphs.sort(this.setGraphOrder);\n        this.dashboardData = res.data[0];\n        setTimeout(() => {\n          for (const element of this.dashboardData.graphs) {\n            const graph = element;\n            if (this.systemApis.includes(graph.sourceid.toString())) {\n              this.showHeaderInputs = true;\n            }\n            if (graph.graphType != 2 && graph.graphType != 3) {\n              let res = this.seriesData[graph.graph_id];\n              let tempGraphData = {\n                rows: graph.graph_structure.xAxis,\n                columns: graph.graph_structure.yAxis,\n                aggregationFunctions: graph.graph_structure.aggreagations,\n                filter: graph.graph_structure.filter,\n                customVariable: graph.graph_structure.derivedVariables,\n                dataFormat: [],\n                colToShow: null,\n                lastLevelColumns: graph.graph_structure.lastLevelData ?? [],\n                chartType: graph.graph_structure.chartType,\n                dateVariable: graph.graph_structure.dateVariable,\n              };\n              this.buildChart(graph, res, tempGraphData, this.selFilters);\n            } else if(graph.graphType == 3){\n              this.tableGraphs.push(graph); \n            }\n          }\n          this.loadingComplete()\n        }, 500)\n      }).catch(err => {\n        console.log(err)\n      });\n  }\n\n  isDateDifferenceGreaterThan15Days(date1: any, date2: any) {\n    // Create Date objects\n    const startDate : any = new Date(date1);\n    const endDate : any = new Date(date2);\n  \n    // Calculate the difference in milliseconds\n    const differenceInMillis = Math.abs(startDate - endDate);\n  \n    // Calculate the difference in days\n    const differenceInDays = differenceInMillis / (1000 * 60 * 60 * 24);\n  \n    // Check if the difference is greater than 15 days\n    return differenceInDays > 30;\n  }\n\n  async renderTable(){\n    if(this.tableGraphs.length > 0){\n      this.tableGraphs.forEach(async (graph: any) => {\n          let data : any = await this.generateDashboard(graph, false);\n          let tempGraphData = {\n            rows: graph.graph_structure.xAxis,\n            columns: graph.graph_structure.yAxis,\n            aggregationFunctions: graph.graph_structure.aggreagations,\n            filter: graph.graph_structure.filter,\n            customVariable: graph.graph_structure.derivedVariables,\n            dataFormat: [],\n            colToShow: null,\n            lastLevelColumns: graph.graph_structure.lastLevelData ?? [],\n            chartType: graph.graph_structure.chartType,\n            dateVariable: graph.graph_structure.dateVariable,\n          };\n          let dumpData = data;\n          if (graph.sourceid.toString() == this.mtrSource) {\n            tempGraphData = this.dataService.keyConverter(\n              tempGraphData,\n              data[0].columns,\n              1\n            );\n            dumpData = data[0].data\n          }\n          this.buildChart(graph, dumpData, tempGraphData, null);\n      })\n    }\n  }\n  \n  generateDashboard(graph: any, reCall: boolean = false) {\n    return new Promise((resolve, reject) => {\n      if (\n        this.calledSourceData.hasOwnProperty(graph.sourceid.toString()) &&\n        !reCall\n      ) {\n        resolve(this.calledSourceData[graph.sourceid.toString()]);\n      } else {\n        let d = {\n          graphId: graph.graph_id,\n          dataFilter: this.selFilters,\n          direction: 0,\n          adminId: this.adminId,\n          shareid: null,\n          startTime:  this.startDate ?? this.fromDate,\n          endTime:  this.endDate ?? this.toDate\n        }\n        this.dataService.getGraphDataById(d).then((res: any) => {\n            Swal.hideLoading();\n            Swal.close();\n            let dumpData = res.data;\n            // this.uniqueSourceData.push(graph);\n            if (\n              graph.dataType == 'remote-json' &&\n              !this.systemApis.includes(graph.sourceid.toString())\n            ) {\n              res.data = this.dataService.parseDataFormat(res.data, graph.dataFormat);\n            }\n            this.calledSourceData[graph.sourceid.toString()] = dumpData;\n            resolve(dumpData);\n          })\n          .catch((err) => {\n            Swal.hideLoading();\n            Swal.close();\n            this.toastService.error('Unable to Fetch Data');\n          });\n      }\n    });\n  }\n\n  buildChart(widgetData: any, data: any, tempData: any, dashboardFilter: any) {\n    let _self = this;\n    return new Promise(async (resolve, reject) => {\n      let range : any = {};\n      if (this.systemApis.includes(widgetData.sourceid.toString())) {\n        range = {\n          startDate: this.startDate ?? this.fromDate,\n          endDate: this.endDate ?? this.toDate,\n        };\n      }\n      if (widgetData.graphType == 1) {\n        if(!this.systemApis.includes(widgetData.sourceid.toString())){\n          range = {\n            startDate: this.datePipe.transform(\n              widgetData.graph_structure.startDate,\n              'yyyy-MM-dd'\n            ),\n            endDate: this.datePipe.transform(\n              widgetData.graph_structure.endDate,\n              'yyyy-MM-dd'\n            ),\n          };\n        }\n        let graphData = {\n          graphId: 'graph-' + widgetData.graph_id,\n          graphTitle: widgetData.graphname,\n          rows: tempData.rows[0],\n          columns: tempData.columns[0],\n          graphTypes: widgetData.graph_structure.chartType[0],\n          graphData: data,\n          aggregationFunctions: tempData.aggregationFunctions[0],\n          filter: tempData.filter,\n          colors: widgetData.graph_structure.colColours[0],\n          range: range,\n          dateVariable: tempData.dateVariable,\n          rangeFilter: widgetData.graph_structure.rangeFilter,\n          comparison: widgetData.graph_structure.comparison ?? [],\n          customVariable: tempData.customVariable,\n          dataFormat: tempData.dataFormat ?? [],\n          lastLevelColumns: tempData.lastLevelColumns ?? [],\n          selKeys: [],\n          adminId: this.adminId,\n          sourceId: widgetData.sourceId,\n          dashboardFilter: dashboardFilter\n        };\n        let response = await _self.xsightsBackend.build(WidgetType.TREND, graphData);\n        resolve(response);\n      } else if (widgetData.graphType == 3) {\n        let tableData = {\n          rows: tempData.rows,\n          column: tempData.columns,\n          aggregationFunction: tempData.aggregationFunctions,\n          filter: tempData.filter,\n          derivedVariables: tempData.customVariable,\n          dataFormat: tempData.dataFormat ?? [],\n          data: data,\n          range: range,\n          categories: widgetData.graph_structure.chartType\n        };\n        _self.pivotTables['table-' + widgetData.graph_id] =\n          await _self.xsights.build(WidgetType.PIVOT_TABLE, tableData);\n        resolve(true);\n      } else {\n        let graphdata = {\n          graphId: 'graph-' + widgetData.graph_id,\n          graphTitle: widgetData.graphname,\n          rows: tempData.rows,\n          adminId: this.adminId,\n          columns: tempData.columns,\n          aggregationFunctions: tempData.aggregationFunctions,\n          filter: tempData.filter,\n          customVariable: tempData.customVariable,\n          selKeys: [],\n          range: range,\n          sourceId: widgetData.sourceId,\n          dataFormat: tempData.dataFormat ?? [],\n          lastLevelColumns: tempData.lastLevelColumns ?? [],\n          graphTypes: widgetData.graph_structure.chartType,\n          graphData: data,\n          colors: widgetData.graph_structure.colColours,\n          dashboardFilter: dashboardFilter\n        };\n        setTimeout(() => {\n          let response = this.xsightsBackend.build(WidgetType.GRAPH, graphdata);\n        }, 500)\n        resolve(true);\n      }\n    });\n  }\n  loadingComplete() {\n    this.renderTable();  \n    this.isDashboardLoaded.emit({\n      isLoaded: true,\n      hasSystemApi: this.showHeaderInputs\n    });\n  }\n  setGraphOrder(a: any, b: any) {\n    if (a.order < b.order) {\n      return -1;\n    }\n    if (a.order > b.order) {\n      return 1;\n    }\n    return 0;\n  }\n}\n","<div class=\"row\" *ngIf=\"dashboardData != null\">\n    <div class=\"col-md-12\">\n        <div class=\"dash_graph_sec\">\n            <div class=\"dash_graph\">\n                <div style=\"display: flex; background-color:#000;\" *ngIf=\"showHeader\">\n                    <h3 class=\"graph_name\" style=\"height: 44px;flex:auto;text-transform:capitalize;\">\n                        {{dashboardData.dashboard_name}} &nbsp; <span class=\"badge badge-warning\"\n                            *ngIf=\"dashboardData.dashboard_type == 1\">LIVE</span> </h3>\n                    <div class=\"row date-container\" *ngIf=\"showHeaderInputs\">\n                        <div class=\"col-lg-6\"> <label for=\"startDate\">From &nbsp;&nbsp;</label> <input type=\"date\"\n                                [(ngModel)]=\"fromDate\" id=\"startDate\" class=\"form-control\"> </div>\n                        <div class=\"col-lg-6\"> <label for=\"endDate\">To &nbsp;&nbsp;</label> <input type=\"date\"\n                                [(ngModel)]=\"toDate\" id=\"endDate\" class=\"form-control\">\n                        </div>\n                        <button class=\"btn btn-primary\" (click)=\"renderPage()\">Search</button>\n                    </div>\n                </div>\n                <div class=\"filter-container\" *ngIf=\"filters.length\">\n                    <h3>Filters:</h3>\n                    <div class=\"col-lg-12 row\">\n                        <div class=\"col-lg-3\" *ngFor=\"let filter of filters;let i = index\"> \n                            <ng-multiselect-dropdown\n                                [placeholder]=\"'Select ' + filter.fieldName + '...'\" [(ngModel)]=\"filter.selValues\"\n                                [settings]=\"dropdownSettings\" [data]=\"filter.values\"> \n                            </ng-multiselect-dropdown> \n                        </div>\n                    </div>\n                    <div class=\"col-lg-12\">\n                        <button class=\"btn btn-primary\" (click)=\"getGraphDashBoardById()\">Apply Filter</button>\n                    </div>\n                </div>\n                <div class=\"row graph_design\" id=\"dashboardScreen\" #dashboardScreen> <ng-container\n                        *ngFor=\"let graph of dashboardData.graphs;\">\n                        \n                        <ng-container *ngIf=\"graph.graphType != 3 && graph.graphType != 2\">\n                            <div class=\"dashboard-graph\"\n                                [ngClass]=\"{'col-lg-12': graph.graph_index == 1,'col-lg-6': graph.graph_index == 2,'col-lg-4': graph.graph_index == 3,'col-lg-3': graph.graph_index == 4}\"\n                                style=\"min-height: 370px; padding: 0px;\"> <!-- loader start -->\n                                <h3 *ngIf=\"graph.graph_structure.xAxis[0] != '***LABEL***'\" style=\"text-align: center; background-color: #eee; padding: 2px;\">{{graph.graphname}}</h3>\n                                <div [id]=\"'graph-'+ graph.graph_id\" style=\"position: relative; padding: 10px; padding-top: 45px;\">\n                                    <div class=\"lds-ellipsis\">\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                    </div> <!-- loader end -->\n                                </div>\n                            </div>\n                        </ng-container>\n                        <div *ngIf=\"graph.graphType == 2\" class=\"dashboard-graph\" [id]=\"'table-graph-'+ graph.graph_id\"\n                            [ngClass]=\"{'col-lg-12': graph.graph_index == 1,'col-lg-6': graph.graph_index == 2,'col-lg-4': graph.graph_index == 3,'col-lg-3': graph.graph_index == 4}\"\n                            style=\"display: flex; flex-direction: column; border-bottom: 0px; background-color:antiquewhite;\">\n                            <!-- loader start -->\n                            <h2 style=\"text-align: center; margin-bottom: 0px;\">{{graph.graphname}}</h2>\n                            <!-- loader end -->\n                        </div>\n                        <div *ngIf=\"graph.graphType == 3\" class=\"dashboard-graph\" [id]=\"'table-'+ graph.graph_id\"\n                            [ngClass]=\"{'col-lg-12': graph.graph_index == 1,'col-lg-6': graph.graph_index == 2,'col-lg-4': graph.graph_index == 3,'col-lg-3': graph.graph_index == 4}\"\n                            style=\"min-height: 300px; display: flex; flex-direction: column; padding-bottom: 2%;\">\n                            <!-- loader start -->\n                            <h3 style=\"text-align: center;\">{{graph.graphname}}</h3> <ng-container\n                                *ngIf=\"pivotTables.hasOwnProperty('table-' + graph.graph_id)\"> <dx-pivot-grid\n                                    [allowSortingBySummary]=\"true\" [allowSorting]=\"true\" [allowFiltering]=\"true\"\n                                    [showBorders]=\"true\" [dataSource]=\"pivotTables['table-' + graph.graph_id]\">\n                                    <dxo-field-chooser [enabled]=\"false\"></dxo-field-chooser> </dx-pivot-grid>\n                            </ng-container> <ng-container *ngIf=\"pivotTables['table-' + graph.graph_id] == undefined\">\n                                <div class=\"lds-ellipsis\">\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                </div>\n                            </ng-container> <!-- loader end -->\n                        </div>\n                    </ng-container> </div>\n            </div>\n        </div>\n    </div>\n</div>","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport * as lodash from 'lodash';\nimport { __awaiter } from 'tslib';\nimport { DataService } from '../../services/data.service';\nimport { WidgetType, XSightsCoreService } from '../../x-sights-core.service';\nimport { XsightsBackendService } from '../../services/xsights-backend.service';\nimport Swal from 'sweetalert2';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'lib-x-sights-backend-public-dashboard',\n  templateUrl: './x-sights-backend-public-dashboard.component.html',\n  styleUrls: ['./x-sights-backend-public-dashboard.component.css']\n})\nexport class XSightsBackendPublicDashboardComponent implements OnInit {\n\n  @Input() dashboardUrl: string = '';\n  @Input() adminId: any = 0;\n  @Output() dashboardLoaded: EventEmitter<any> = new EventEmitter();\n\n  private mtrSource = '138';\n\n  decodedParams: any = {};\n  dashboardData: any = {};\n  filters: any = [];\n  selFilters: any = {};\n  dropdownSettings: any = {};\n  tableDatas: any = {};\n  seriesData: any = {}\n  dumpData: any = [];\n  calledSourceData : any = {};\n  tableGraphs: any = [];\n  constructor(\n    private dataService: DataService,\n    private toastService: ToastrService,\n    private xsightsBackend: XsightsBackendService,\n    private xsights: XSightsCoreService\n  ) {}\n\n  ngOnInit() {\n    // this.decodeUrl();\n    this.dropdownSettings = {\n      singleSelection: false,\n      enableCheckAll: false,\n      allowSearchFilter: true,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n    //Add '${implements OnChanges}' to the class.\n    if (\n      changes['dashboardUrl'].previousValue !=\n        changes['dashboardUrl'].currentValue ||\n      changes['adminId'].previousValue != changes['adminId'].currentValue\n    ) {\n      this.decodeUrl();\n    }\n  }\n\n  decodeUrl() {\n    this.dataService.getDecodedUrl(this.dashboardUrl).then((res: any) => {\n      const urlParamsStr = res.data[0].split('?')[1];\n      const urlParamsArr = urlParamsStr.split('&');\n      urlParamsArr.forEach((param: any) => {\n        this.decodedParams[param.split('=')[0]] = param.split('=')[1];\n      });\n      this.getGraphDashBoardById();\n    });\n  }\n\n  getGraphDashBoardById() {\n    this.adminId = this.decodedParams.foAdminId;\n    let filter : any = {}\n    this.filters.forEach((f: any) => {\n      if(filter[f.sourceId]){\n        filter[f.sourceId] = {\n          ...filter[f.sourceId],\n          [f.fieldName]: f.selValues.map((value: any) => value.text)\n        }\n      }else{\n        filter[f.sourceId] = {\n          [f.fieldName]: f.selValues.map((value: any) => value.text)\n        }\n      }\n    })\n    this.selFilters = filter;\n    let data = {\n      dashboardId: this.decodedParams.dash_id,\n      filters: filter,\n      fileId: this.decodedParams.fileId\n    }\n    this.dataService\n      .getSharedBackendDashboard(data, this.adminId)\n      .then(async (res: any) => {\n        this.dashboardData.id = res.data[0].share_id;\n        this.filters = this.filters.length == 0 ? res.data[0]?.filters.map((filter: any) => {\n          filter[\"values\"] = JSON.parse(filter[\"values\"]).map((value: any, index: any) => {\n            return {\n              id: index,\n              text: value\n            }\n          }) \n          filter[\"selValues\"] = filter[\"selValues\"] ? filter[\"selValues\"] : [];\n          return filter;\n        }) ?? [] : this.filters;\n        this.seriesData = res.data[0]?.seriesData;\n        res.data[0].graphs = res.data[0].graphs.sort(this.setGraphOrder);\n        this.dashboardData = res.data[0];\n        for (const element of this.dashboardData.graphs) {\n          const graph = element;\n          if (graph.graphType != 2 && graph.graphType != 3) {\n            let res = this.seriesData[graph.graph_id];\n            let tempGraphData = {\n              rows: graph.graph_structure.xAxis,\n              columns: graph.graph_structure.yAxis,\n              aggregationFunctions: graph.graph_structure.aggreagations,\n              filter: graph.graph_structure.filter,\n              customVariable: graph.graph_structure.derivedVariables,\n              dataFormat: [],\n              colToShow: null,\n              lastLevelColumns: graph.graph_structure.lastLevelData ?? [],\n              chartType: graph.graph_structure.chartType,\n              dateVariable: graph.graph_structure.dateVariable,\n            };\n            this.buildChart(graph, res, tempGraphData, this.selFilters);\n          } else if(graph.graphType == 3){\n            this.tableGraphs.push(graph); \n          }\n        }\n        this.loadingComplete()\n      });\n  }\n  \n  buildChart(widgetData: any, data: any, tempData: any, dashboardFilter: any) {\n    let _self = this;\n    return new Promise(async (resolve, reject) => {\n      if (widgetData.graphType == 1) {\n        let graphData = {\n          graphId: 'graph-' + widgetData.graph_id,\n          graphTitle: widgetData.graphname,\n          rows: tempData.rows[0],\n          columns: tempData.columns[0],\n          graphTypes: widgetData.graph_structure.chartType[0],\n          graphData: data,\n          aggregationFunctions: tempData.aggregationFunctions[0],\n          filter: tempData.filter,\n          colors: widgetData.graph_structure.colColours[0],\n          range: {\n            startDate: widgetData.graph_structure.startDate,\n            endDate: widgetData.graph_structure.endDate,\n          },\n          dateVariable: tempData.dateVariable,\n          rangeFilter: widgetData.graph_structure.rangeFilter,\n          comparison: widgetData.graph_structure.comparison ?? [],\n          customVariable: tempData.customVariable,\n          dataFormat: tempData.dataFormat ?? [],\n          lastLevelColumns: tempData.lastLevelColumns ?? [],\n          selKeys: [],\n          adminId: this.adminId,\n          sourceId: widgetData.sourceId,\n          dashboardFilter: dashboardFilter,\n          shareid: this.dashboardData.id\n        };\n        let response = await _self.xsightsBackend.build(WidgetType.TREND, graphData);\n        resolve(response);\n      } else if (widgetData.graphType == 3) {\n        let tableData = {\n          rows: tempData.rows,\n          column: tempData.columns,\n          aggregationFunction: tempData.aggregationFunctions,\n          filter: tempData.filter,\n          derivedVariables: tempData.customVariable,\n          dataFormat: tempData.dataFormat ?? [],\n          range: {\n            startDate: null,\n            endDate: null\n          },\n          data: data,\n          categories: widgetData.graph_structure.chartType,\n        };\n        _self.tableDatas['table-graph-' + widgetData.graph_id] =\n          await _self.xsights.build(WidgetType.PIVOT_TABLE, tableData);\n        resolve(true);\n      } else {\n        let graphdata = {\n          graphId: 'graph-' + widgetData.graph_id,\n          graphTitle: widgetData.graphname,\n          rows: tempData.rows,\n          adminId: this.adminId,\n          columns: tempData.columns,\n          aggregationFunctions: tempData.aggregationFunctions,\n          filter: tempData.filter,\n          customVariable: tempData.customVariable,\n          selKeys: [],\n          sourceId: widgetData.sourceId,\n          range: {\n            startDate: null,\n            endDate: null\n          },\n          dataFormat: tempData.dataFormat ?? [],\n          lastLevelColumns: tempData.lastLevelColumns ?? [],\n          graphTypes: widgetData.graph_structure.chartType,\n          graphData: data,\n          colors: widgetData.graph_structure.colColours,\n          dashboardFilter: dashboardFilter,\n          shareid: this.dashboardData.id\n        };\n        setTimeout(() => {\n          let response = this.xsightsBackend.build(WidgetType.GRAPH, graphdata);\n        }, 500)\n        resolve(true);\n      }\n    });\n  }\n  loadingComplete() { \n    this.renderTable();     \n    this.dashboardLoaded.emit({\n      isLoaded: true\n    });\n  }\n\n  async renderTable(){\n    if(this.tableGraphs.length > 0){\n      this.tableGraphs.forEach(async (graph: any) => {\n          let data : any = await this.generateDashboard(graph, false);\n          let tempGraphData = {\n            rows: graph.graph_structure.xAxis,\n            columns: graph.graph_structure.yAxis,\n            aggregationFunctions: graph.graph_structure.aggreagations,\n            filter: graph.graph_structure.filter,\n            customVariable: graph.graph_structure.derivedVariables,\n            dataFormat: [],\n            colToShow: null,\n            lastLevelColumns: graph.graph_structure.lastLevelData ?? [],\n            chartType: graph.graph_structure.chartType,\n            dateVariable: graph.graph_structure.dateVariable,\n          };\n          let dumpData = data;\n          if (graph.sourceid.toString() == this.mtrSource) {\n            tempGraphData = this.dataService.keyConverter(\n              tempGraphData,\n              data[0].columns,\n              1\n            );\n            dumpData = data[0].data;\n          }\n          this.buildChart(graph, dumpData, tempGraphData, null);\n      })\n    }\n  }\n\n  \n  generateDashboard(graph: any, reCall: boolean = false) {\n    return new Promise((resolve, reject) => {\n      if (\n        this.calledSourceData.hasOwnProperty(graph.sourceid.toString()) &&\n        !reCall\n      ) {\n        resolve(this.calledSourceData[graph.sourceid.toString()]);\n      } else {\n        \n        let d = {\n          graphId: graph.graph_id,\n          dataFilter: this.selFilters,\n          direction: 0,\n          adminId: this.adminId,\n          shareid: this.dashboardData.id,\n          startDate: null,\n          endDate: null\n        }\n        this.dataService.getGraphDataById(d).then((res: any) => {\n            Swal.hideLoading();\n            Swal.close();\n            let keys = null;\n            let dumpData = res.data;\n            this.calledSourceData[graph.sourceid.toString()] = dumpData;\n            resolve(dumpData);\n          })\n          .catch((err) => {\n            Swal.hideLoading();\n            Swal.close();\n            this.toastService.error('Unable to Fetch Data');\n          });\n      }\n    });\n  }\n\n  setGraphOrder(a: any, b: any) {\n    if (a.order < b.order) {\n      return -1;\n    }\n    if (a.order > b.order) {\n      return 1;\n    }\n    return 0;\n  }\n}\n","<div *ngIf=\"dashboardData != {}\">\n    <div class=\"dash_graph_sec\">\n        <div class=\"dash_graph dashboard-wrapper\">\n            <div>\n                <h3 class=\"graph_name\" style=\"height: 44px;\">{{dashboardData.dashboard_name}} </h3>\n            </div>\n            <div class=\"filter-container\" *ngIf=\"filters.length\">\n                <h3>Filters:</h3>\n                <div class=\"col-lg-12 row\">\n                    <div class=\"col-lg-3\" *ngFor=\"let filter of filters;let i = index\"> \n                        <ng-multiselect-dropdown\n                            [placeholder]=\"'Select ' + filter.fieldName + '...'\" [(ngModel)]=\"filter.selValues\"\n                            [settings]=\"dropdownSettings\" [data]=\"filter.values\"> \n                        </ng-multiselect-dropdown> \n                    </div>\n                </div>\n                <div class=\"col-lg-12\">\n                    <button class=\"btn btn-primary\" (click)=\"getGraphDashBoardById()\">Apply Filter</button>\n                </div>\n            </div>\n            <div class=\"row graph_design\" id=\"dashboardScreen\"> \n                <ng-container *ngFor=\"let graph of dashboardData?.graphs;let i=index;\">\n                    <!-- <div class=\"page-break\" *ngIf=\"i % 5 == 0 && i != 0\"></div> -->\n                    \n                    <ng-container *ngIf=\"graph.graphType != 3 && graph.graphType != 2\">\n                        <div class=\"dashboard-graph\"\n                            [ngClass]=\"{'col-lg-12': graph.graph_index == 1,'col-lg-6': graph.graph_index == 2,'col-lg-4': graph.graph_index == 3,'col-lg-3': graph.graph_index == 4}\"\n                            style=\"min-height: 370px; padding: 0px;\"> <!-- loader start -->\n                            <h3 *ngIf=\"graph.graph_structure.xAxis[0] != '***LABEL***'\" style=\"text-align: center; background-color: #eee; padding: 2px;\">{{graph.graphname}}</h3>\n                            <div [id]=\"'graph-'+ graph.graph_id\" style=\"position: relative; padding: 10px; padding-top: 45px;\">\n                                <div class=\"lds-ellipsis\">\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                </div> <!-- loader end -->\n                            </div>\n                        </div>\n                    </ng-container>\n                    <div *ngIf=\"graph.graphType==2\" class=\"dashboard-graph\" [id]=\"'table-graph-'+ graph.graph_id\"\n                        [ngClass]=\"{'col-lg-12':\n                        graph.graph_index==1,'col-lg-6': graph.graph_index==2,'col-lg-4':\n                        graph.graph_index==3,'col-lg-3': graph.graph_index==4}\" style=\"display: flex;\n                        flex-direction: column; border-bottom: 0px; background-color:antiquewhite;\">\n                        <!-- loader start -->\n                        <h2 style=\"text-align: center; margin-bottom: 0px;\">\n                            {{graph.graphname}}</h2> <!-- loader end -->\n                    </div>\n                    <div *ngIf=\"graph.graphType==3\" class=\"dashboard-graph\" [id]=\"'table-graph-'+\n                        graph.graph_id\" [ngClass]=\"{'col-lg-12': graph.graph_index==1,'col-lg-6':\n                        graph.graph_index==2,'col-lg-4': graph.graph_index==3,'col-lg-3': graph.graph_index==4}\"\n                        style=\"min-height: 300px; display: flex; flex-direction: column; padding-bottom: 2%;\">\n                        <!-- loader start -->\n                        <h3 style=\"text-align: center;\">{{graph.graphname}}</h3>\n                        <ng-container *ngIf=\"tableDatas.hasOwnProperty('table-graph-' + graph.graph_id)\">\n                            <dx-pivot-grid [allowSortingBySummary]=\"true\" [allowSorting]=\"true\" [allowFiltering]=\"true\"\n                                [showBorders]=\"true\" [dataSource]=\"tableDatas['table-graph-' + graph.graph_id]\">\n                                <dxo-field-chooser [enabled]=\"false\"></dxo-field-chooser> </dx-pivot-grid>\n                        </ng-container> <ng-container *ngIf=\"tableDatas['table-graph-' +\n                            graph.graph_id]==undefined\">\n                            <div class=\"lds-ellipsis\">\n                                <div></div>\n                                <div>\n                                </div>\n                                <div></div>\n                                <div></div>\n                            </div>\n                        </ng-container>\n                        <!-- loader end -->\n                    </div>\n                </ng-container> </div>\n        </div>\n    </div>\n</div>","import { CommonModule, DatePipe } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { XSightsCoreComponent } from './x-sights-core.component';\n\nimport { DxPivotGridModule } from 'devextreme-angular';\nimport { ToastrModule } from 'ngx-toastr';\nimport { ChartsModule } from 'ng2-charts';\n\nimport {\n  NgbModalModule,\n  NgbModule,\n  NgbActiveModal,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { TableModule } from 'primeng/table';\nimport { AngularPivotTableModule } from 'angular-pivot-table';\nimport { HighchartsChartModule } from 'highcharts-angular';\n\nimport { NgSelect2Module } from 'ng-select2';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { XSightsPublicDashboardComponent } from './components/x-sights-public-dashboard/x-sights-public-dashboard.component';\nimport { XSightsDashboardComponent } from './components/x-sights-dashboard/x-sights-dashboard.component';\nimport { DataPopupComponent } from './components/data-popup/data-popup.component';\nimport { XSightsWidgetComponent } from './components/x-sights-widget/x-sights-widget.component';\nimport { XSightsBackendDashboardComponent } from './components/x-sights-backend-dashboard/x-sights-backend-dashboard.component';\nimport { XSightsBackendPublicDashboardComponent } from './components/x-sights-backend-public-dashboard/x-sights-backend-public-dashboard.component';\n\n@NgModule({\n  declarations: [\n    XSightsCoreComponent, \n    DataPopupComponent,\n    XSightsPublicDashboardComponent,\n    XSightsDashboardComponent,\n    XSightsWidgetComponent,\n    XSightsBackendDashboardComponent,\n    XSightsBackendPublicDashboardComponent\n  ],\n  imports: [\n    CommonModule,\n    DxPivotGridModule,\n    AngularPivotTableModule,\n    TableModule,\n    HttpClientModule,\n    ToastrModule.forRoot(),\n    NgSelect2Module,\n    NgMultiSelectDropDownModule.forRoot(),\n    NgbModalModule,\n    BrowserModule,\n    NgbModule,\n    HighchartsChartModule,\n    ChartsModule,\n    FormsModule\n  ],\n  providers: [\n    NgbActiveModal,\n    DatePipe\n  ],\n  exports: [\n      XSightsCoreComponent,\n      XSightsDashboardComponent,\n      XSightsBackendDashboardComponent,\n      XSightsBackendPublicDashboardComponent,\n      DataPopupComponent,\n      XSightsWidgetComponent,\n      XSightsPublicDashboardComponent\n  ],\n  bootstrap: [XSightsCoreComponent]\n})\nexport class XSightsCoreModule { }\n","/*\n * Public API Surface of x-sights-core\n */\n\nexport * from './lib/x-sights-core.service';\nexport * from './lib/x-sights-core.component';\nexport * from './lib/x-sights-core.module';\n\n\nexport * from './lib/components/data-popup/data-popup.component';\nexport * from './lib/components/x-sights-dashboard/x-sights-dashboard.component';\nexport * from './lib/components/x-sights-backend-dashboard/x-sights-backend-dashboard.component';\nexport * from './lib/components/x-sights-backend-public-dashboard/x-sights-backend-public-dashboard.component';\nexport * from './lib/components/x-sights-public-dashboard/x-sights-public-dashboard.component';\nexport * from './lib/components/x-sights-widget/x-sights-widget.component';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2.DataService","i5","WidgetType","i1.DataService","i2.XSightsCoreService","i3","i4","i6","i7","i1.XSightsCoreService","i4.DataService","i8","i2.XsightsBackendService","i3.DataService","i1.XsightsBackendService","i5.DataService","i3.XsightsBackendService","i4.XSightsCoreService","i2"],"mappings":"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"}